[
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1676274963.934119",
        "text": "DeepFlow 社内で開発して2年ほど使っていた、Haskell 製巨大モノレポの依存関係チェックツール guardian を OSS 化したので宣伝させてください。\n\n<https://github.com/deepflowinc/guardian>\n\n大量のパッケージから成るモノレポで開発を進めていると、不用意にパッケージ間の依存関係を増やした結果不必要にビルドに時間がかかってしまい、ちょっとした変更でもビルドに時間がかかってイテレーションが阻害される、という事がしばしばあります。\nguardian はパッケージを複数のグループ（ドメイン）に分けて、予め指定されたグループ間の依存関係以外を発見すると警告してくれる、というツールです。stackベースと cabal-install ベースのプロジェクトに対応しています。\nCI で手軽に呼ぶためのビルド済バイナリや、GitHub Action も用意しています。\n\n詳細は以下の記事で紹介させて頂いておりますので、巨大 Haskell モノレポの依存関係の管理にお悩みの方のお役に立てれば幸いです:pray:\n\n<https://zenn.dev/deepflow_tech/articles/secure-haskell-monorepo-deps-with-guardian>"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1677202026.175889",
        "text": "highlevel だけが、型クラスを定義して提供するのですか？"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1677202097.491879",
        "text": "場合によりますね。ここでは説明のために単純化して示しているので、実際にはプロジェクトの目的・構造に応じて取り決める形です。"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1677202250.024559",
        "text": "highlevelの役割は、APIを定義し、提供することですか？"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1677202389.703449",
        "text": "上の例では基本的にそういうことですね。記事で書いているように、\n&gt; •  `highlevel`: バックエンドや方程式系、プラグインなどの高水準な抽象化\nがこの例での highlevel の役割です（これ以上詳しい説明はプロジェクトの詳細に立ち入ることになるのでご容赦ください）。\n繰り返しになりますが、ドメインの一覧は決め打ちではないので、プロジェクトごとに適切なドメインの集合とトポロジーを定義することになります。"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1677202460.774709",
        "text": "highlevelで型クラスを定義して、lowlevelで実装をして、solverでくっつけると、orphan instance になりませんか？"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1677202499.879809",
        "text": "ならないですね。ソルバで使うバックエンドの lowlevel な定義のところでインスタンスを定義するので。"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1677202534.551429",
        "text": "実装が抽象に依存できるので"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1677202662.280539",
        "text": "見直すとたしかにちょっと階層図が不完全ですね。単純化の過程でちょっと抜けてました。"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1677202669.484769",
        "text": "Orphan インスタンスを極力さけよう、というのは Haskell の基本的なプラクティスなので、そういった状況をある程度避けるように階層は設計することになります"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1677202675.810939",
        "text": "うーん。それだと lowlevel から highlevel への (型クラスを使う)矢印が抜けていることになりませんか？"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1677202711.947169",
        "text": "入れ違いになりました。不完全というのであれば、理解できます。"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1677202770.424739",
        "text": "弱い依存関係があると理解しておきます。"
    }
]