[
    {
        "ts": "1569686578.026200",
        "text": "添付の例で期待した結果が得られません\nターミナルで実行すると `[\"` とだけ表示され、あとは `Ctrl+C` するしかない状態になります\n最終行の `(c:r)` の部分が犯人らしいことは分かっているのですが\nどういうわけなのでしょうか",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569689522.026800",
        "text": "最終行\n```\n    (l,(c:r)) = break (== c) str\n```\nの左辺の `c` は `split` の引数の `c` ではなく、新たに束縛される変数の名前となります。そして、その新たに束縛された `c ` が `break (== c)` で参照されます。つまり、その行は\n```\n    (l,(d:r)) = break (== d) str\n```\nと書いたのと同じ意味になります。\n直し方ですが、この場合は `break` の結果の2番目の最初の文字は必要ないので、単にワイルドカードで受けて\n```\n    (l,(_:r)) = break (== c) str\n```\nと書けば良いでしょう。",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1569720556.027300",
        "text": "<@UNG6PFFUJ> has joined the channel",
        "user": "UNG6PFFUJ",
        "type": "message"
    },
    {
        "ts": "1569728119.028300",
        "text": "<@UNUGRB41J> has joined the channel",
        "user": "UNUGRB41J",
        "type": "message"
    },
    {
        "ts": "1569780114.028700",
        "text": "ここで訊くのが妥当か分からないのですが...\n`Text.Regex.Posix` を用いた正規表現についてです\n以下の最終行で値が返らないのは何故でしょうか？\n```\n&gt; import Text.Regex.Posix\n&gt; \"2019/09/30\" =~ \"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})\" :: Bool\nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/([0-9]{1,2})/([0-9]{1,2})\" :: Bool  \nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: Bool\nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"\n```\nなお、西暦や月を省略した日付にも対応するパターンを作りたいというところです",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569802374.029200",
        "text": "取り急ぎ。Text.Regex.Posixの正規表現エンジンがどうなってるかわからないので推測ですが、正規表現の組み合わせ爆発が起きているのではないかと思います。\nでも無限ループに入ってしまっているとしたらバグっぽいなぁ。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1569830097.029600",
        "text": "手元で試したところ、結果は返りました。どのバージョンをお使いですか？\n\n\n```\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n```",
        "user": "U6S3ARBDL",
        "type": "message"
    },
    {
        "ts": "1569830145.029800",
        "text": "因みにここでいう結果が返らないは空文字列が返されるという意味ですよね？",
        "user": "U6S3ARBDL",
        "type": "message"
    },
    {
        "ts": "1569830229.030100",
        "text": "私が手元で試したときは、無限ループにハマってしまってました。\n上げていただいた出力例が `\"` だけで終わっていることからして、satunさんの手元でもそうなっていると思われます。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1569830382.030300",
        "text": "肝心のパッケージのバージョンですが、私の手元では :point_down: でした。\n    regex-base-0.93.2\n    regex-posix-0.95.2",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1569830921.030500",
        "text": "同じく regex-base-0.93.2, regex-posix-0.95.2 です :thinking_face:",
        "user": "U6S3ARBDL",
        "type": "message"
    },
    {
        "ts": "1569926655.031900",
        "text": "バージョン同じくです\n値が返らないの意味は、igrepさんの仰る通りです",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569972013.032100",
        "text": "あとはOSと、GHCのバージョンでしょうかね... :thinking_face:\n私はWindows 10で、GHC は8.6.5です。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1570009380.032900",
        "text": "<@UP10DCE2J> has joined the channel",
        "user": "UP10DCE2J",
        "type": "message"
    },
    {
        "ts": "1570089332.033200",
        "text": "<@UNZLVQ1UL> has joined the channel",
        "user": "UNZLVQ1UL",
        "type": "message"
    },
    {
        "ts": "1570423669.034000",
        "text": "`stack build --ghc-options '-ddump-splices'` ってどのディレクトリーに出力されるんでしたっけ？",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1570424335.034100",
        "text": "`.stack-work` を掘れ、とだけありますね...\nあと、 <https://github.com/commercialhaskell/stack/pull/4242> のおかげで `--ddump-dir` というオプションが `stack build` にできてるはず！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1570431900.034500",
        "text": "そうそう、その PR 見ておっと思ったけど手元の stack 1.9.3 にはまだなかった\n（依存ライブラリーが stack 2 でビルドできなくてって 1.9 使ってる",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1570433560.034800",
        "text": "とりあえず ~/.stack-work を掘るのじゃ（今手元ではHaskellのプロジェクト触ってないので面倒くさい）。そんなに難しいところではなかったはず",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1570447456.035100",
        "text": "<@UP5THSTDM> has joined the channel",
        "user": "UP5THSTDM",
        "type": "message"
    },
    {
        "ts": "1570545309.037100",
        "text": "こんばんは\nOSX 10.14.6でGHC7.10.3用にinteroをビルドしようとしてるんですが、`Guess: You might need the \"tinfo\" package, e.g. libtinfo-dev.` と言われてinteroを入れられません。どうしたらいいでしょうか？\n<https://twitter.com/shokohara_/status/1179957099675054080?s=20>\n<https://twitter.com/shokohara_/status/1179968733105672193?s=20>",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1570547313.045600",
        "text": "問題の解決ではないのでアレですが、私はAtCoder用コードの動作確認は最新のGHC (8.6.5)でやってます。GHC 8.0以降で追加された言語拡張を使わないこと、モノイド周りの関数を使うときはData.Monoidをimportすることに気をつければだいたい大丈夫です。うっかりでCEをやらかしてもペナルティーはつきませんし、提出してCEが出たら直す、というやり方で大抵は問題ないと思います。（直前の提出のCEに気づかず解けない問題にチャレンジして数十分経過、なんてことになると悲惨ですけども）",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1570547639.048600",
        "text": "libtinfoはLinuxっぽい響きですし、その「Guess:」は的外れなguessだと思います。interoのソース <https://github.com/chrisdone/intero/blob/bab8e85b1aea9b03dfe05048bcdc0395e05e9b20/elisp/intero.el#L2252> を見た感じ、インストールに失敗すると無条件に「Guess: tinfoがどうのこうの」というメッセージを出すようですし。",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1570548267.048900",
        "text": "そのGuess云々のちょい上あたりで新しいhaskelineとかを入れようとして，古いghc-7.10.3とbaseバージョンが合わないためinteroのビルドは失敗します．ghc-7.10.3時代のlts-6.29あたりに合わせて，そこを\n```\n           \"haskeline-0.7.2.1\"\n           \"ghc-paths-0.1.0.9\" \"mtl-2.2.1\" \"network-2.6.3.1\" \"random-1.1\" \"syb-0.6\"))\n```\nとかに変更すると，interoのビルドが成功するようになります．この際 `intero.el` の隣りに `intero.elc` がある場合，これを消しておかないと上記変更しても読み込む設定が何も変わらないので注意してください．\nただし，この変更すると逆に今度は新しいresolverに対してinteroがビルドできなくなるかもしれない？ので，何か適切に工夫するなり諦めるなりしてください．\n本来 `intero.el` は，このあたりのバージョンをハードコードしてしまうのではなく．要求されたresolverから対応するltsに含まれる各パッケージバージョンを採用するようにすべきかもしれません．",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1570579462.052600",
        "text": "私は時間のある時に過去問を解いたりしてるだけですけど同じく8.6.5で大抵はokですね。\nただやっぱりTLEした時にprof取って手元で改善してもsubmitすると無力だったりすることが多いので参戦するなら合わせておいた方がいいとは思うな。",
        "user": "U4MMHDSNT",
        "type": "message"
    },
    {
        "ts": "1570599313.000100",
        "text": "AtCoderが対応するまでの間、8.6.*のHIEで簡単にコンテストに参加したり過去問の練習をしておこうと思いました :bow:\n皆さん本当にありがとうございます",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1570600787.000300",
        "text": "Macは詳しくないですがtinfoはncursesの機能の一部なのでncursesのバージョン5を入れたり拡張ライブラリを入れることでなんとかなるかもしれません",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1570602041.000500",
        "text": "mod_poppoさんも書いてますが別の理由で失敗してもtinfo云々が出るという的外れなエラーメッセージなのでなんとかはなりませんね",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1570602124.000700",
        "text": "失礼.ちゃんと読めていませんでした.",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1570620966.002300",
        "text": "algebraic-graphsのData.Graph.LabelledのGraphにOverlayがなくてConnect zeroで代用してるのってなんでなんですか",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1570621818.002600",
        "text": "<@UP6J2B1LL> has joined the channel",
        "user": "UP6J2B1LL",
        "type": "message"
    },
    {
        "ts": "1570669058.002900",
        "text": "~答えになっていなくて恐れいりますが，論文のほうでもedge-labelledなグラフについてはFuture workとしているようです．（なので，仮の実装なのかもしれません…？）~ 誤りでした． :bow: 意図的にそのように定義しているようです",
        "user": "U59GW4U4T",
        "type": "message"
    },
    {
        "ts": "1570669651.003300",
        "text": "Overlayのあり方についてはいろいろ議論されているようですが…<https://github.com/snowleopard/alga/issues/23>",
        "user": "U59GW4U4T",
        "type": "message"
    },
    {
        "ts": "1570670406.003600",
        "text": "度々すみません，2018年にLabelled-edgesに関して発表されているようです（今見てます…）\n<https://skillsmatter.com/skillscasts/12361-labelled-algebraic-graphs#showModal?modal-signup-complete>",
        "user": "U59GW4U4T",
        "type": "message"
    },
    {
        "ts": "1570673641.004100",
        "text": "動画を見ました．私なりの質問への答えは以下になります．\n\n辺ラベルを持つグラフをくっつけるとき，「辺の重複をどのように解決するか」，「連続する2つ以上の辺のラベルをどのように解釈するか（例えば，重み付きグラフの場合は辺の重みからパスの重みを算出する需要があったりします）」といった問題への対処が必要になります．\n\nAndrey氏は，ラベルをSemiringと見なすことで，複数の需要（辺を容量とみなしたり，距離とみなしたり）を満たそうとしています．このとき，Semiringにおける零元を持つ辺は「辺がない」ことを表しているようです．\n\nOverlayは2つのグラフを単に重ねる操作ですが，辺が重複する場合のことが（Unlabelledでは）考えられていません．そこで，辺が重複する場合はSemiringになっているラベルの加法を適用するというアイディアを採用しているようです．例えば，距離の重みがついたグラフでは，距離が短い方を採用したりできます．\n\nConnect e は2つのグラフ間の全部の辺にラベル e を付与する操作（ちょっと自信ないです…）ですが，Connect zero とすることで，2つのグラフの辺の間に「辺を張らない」ことを表現できます．\n\n以上が私の理解でした…どなたか補足していただけると幸いです．",
        "user": "U59GW4U4T",
        "type": "message"
    }
]