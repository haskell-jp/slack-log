[
    {
        "ts": "1514532873.000055",
        "text": "<@U6BUS25MX> has joined the channel",
        "user": "U6BUS25MX",
        "type": "message"
    },
    {
        "ts": "1514546046.000131",
        "text": "<@U561JUTB3> has joined the channel",
        "user": "U561JUTB3",
        "type": "message"
    },
    {
        "ts": "1514602199.000054",
        "text": "<@U4M5LDXK9> has joined the channel",
        "user": "U4M5LDXK9",
        "type": "message"
    },
    {
        "ts": "1514792176.000008",
        "text": "<@U826HT001> has joined the channel",
        "user": "U826HT001",
        "type": "message"
    },
    {
        "ts": "1514912836.000313",
        "text": "<@U561MADLH> has joined the channel",
        "user": "U561MADLH",
        "type": "message"
    },
    {
        "ts": "1514967806.000019",
        "text": "<@U8LLBJ59Q> has joined the channel",
        "user": "U8LLBJ59Q",
        "type": "message"
    },
    {
        "ts": "1515072380.000033",
        "text": "<@U8CJWHF0E> has joined the channel",
        "user": "U8CJWHF0E",
        "type": "message"
    },
    {
        "ts": "1515337272.000069",
        "text": "<@U56MX93K7> has joined the channel",
        "user": "U56MX93K7",
        "type": "message"
    },
    {
        "ts": "1515413697.000236",
        "text": "<@U4LEB9UP4> has joined the channel",
        "user": "U4LEB9UP4",
        "type": "message"
    },
    {
        "ts": "1515478518.000264",
        "text": "<@U7KC05QBH> has joined the channel",
        "user": "U7KC05QBH",
        "type": "message"
    },
    {
        "ts": "1515485894.000101",
        "text": "<@U4M78PX5K> has joined the channel",
        "user": "U4M78PX5K",
        "type": "message"
    },
    {
        "ts": "1516066480.000103",
        "text": "<@U7V6G63LJ> has joined the channel",
        "user": "U7V6G63LJ",
        "type": "message"
    },
    {
        "ts": "1516066970.000182",
        "text": "<@U4MAYDV9C> has joined the channel",
        "user": "U4MAYDV9C",
        "type": "message"
    },
    {
        "ts": "1516342727.000080",
        "text": "<@U8VEALRHT> has joined the channel",
        "user": "U8VEALRHT",
        "type": "message"
    },
    {
        "ts": "1516599341.000093",
        "text": "<@U8P5W7YP6> has joined the channel",
        "user": "U8P5W7YP6",
        "type": "message"
    },
    {
        "ts": "1516877539.000358",
        "text": "<@U8YBE1TTM> has joined the channel",
        "user": "U8YBE1TTM",
        "type": "message"
    },
    {
        "ts": "1517175500.000077",
        "text": "<@U8ZBMSPPB> has joined the channel",
        "user": "U8ZBMSPPB",
        "type": "message"
    },
    {
        "ts": "1517243690.000318",
        "text": "<@U8XGRJ3DZ> has joined the channel",
        "user": "U8XGRJ3DZ",
        "type": "message"
    },
    {
        "ts": "1517280334.000039",
        "text": "<@U8X01G6FJ> has joined the channel",
        "user": "U8X01G6FJ",
        "type": "message"
    },
    {
        "ts": "1517378641.000047",
        "text": "<@U91F1FSJH> has joined the channel",
        "user": "U91F1FSJH",
        "type": "message"
    },
    {
        "ts": "1517459360.000007",
        "text": "<@U8X01G6FJ> has left the channel",
        "user": "U8X01G6FJ",
        "type": "message"
    },
    {
        "ts": "1518479890.000198",
        "text": "<@U98QDF5EJ> has joined the channel",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518486717.000131",
        "text": "<@U4L0B71L1> has joined the channel",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1518506969.000069",
        "text": "<@U5L06DM55> has joined the channel",
        "user": "U5L06DM55",
        "type": "message"
    },
    {
        "ts": "1518581958.000081",
        "text": "コード晒してよかですか",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518582062.000064",
        "text": "<https://github.com/VoQn/cacco/blob/master/src/Cacco/Lexer.hs>\n趣味で言語作ってるんだけど、「not haskeller の人が見ても分かるように」っていう意識で書いている",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518582116.000180",
        "text": "（ウォッチャーがLisperとOcamlerだからっていう理由で）",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518582411.000119",
        "text": "こういうの便利そう\n<https://github.com/VoQn/cacco/blob/master/doc/basics.asciidoc#strict-type-literals>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1518584596.000224",
        "text": "モチベの拠り所がユーザーフレンドリーなリテラル持ってる言語を、っていう感じなので",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518587787.000028",
        "text": "<https://github.com/VoQn/cacco/commit/0cb416ca3ea05fe8f8ef746908d61d8f35c059a3>\n10進数の浮動小数点リテラルのstrict-type-literal 対応した",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518587922.000188",
        "text": "IEEE 754-2008 binary16 (16bit float) にプリミティブで対応しているのは、遠い目標にwasm経由して直にWebGLのシェーダーにアクセスする為とかですね",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518611568.000296",
        "text": "枝葉末節なんですが、綴りにいくつか誤りを見つけたのでプルリクを投げました",
        "user": "U8EJKMNVA",
        "type": "message"
    },
    {
        "ts": "1518611996.000250",
        "text": "\"block comment is keeping\" では意味が通らない、などもありますが、眠いので寝て起きてからにします",
        "user": "U8EJKMNVA",
        "type": "message"
    },
    {
        "ts": "1518614796.000116",
        "text": "typo周りは指摘まじありがたいです！英語力もアレなので 圧倒的感謝",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518617286.000579",
        "text": "ちなみに、stack.yaml で tasty-1.0 を指定してるんですけど、その前となんか大きく変わったんですか？",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1518630673.000597",
        "text": "<@U4M598NHM> has joined the channel",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1518651769.000252",
        "text": "stack-work に残ってキャッシュが相当古くて、tasty-discover の CLI option の --tree-display を受け付けなかったんですよね。また、0.1x 系から 1.0 系になったという事で、できればメジャーバージョンに上げとこうっていうぐらいでした。",
        "user": "U98QDF5EJ",
        "type": "message"
    },
    {
        "ts": "1518672173.000092",
        "text": "<@U56S4UVTL> has joined the channel",
        "user": "U56S4UVTL",
        "type": "message"
    },
    {
        "ts": "1518881120.000038",
        "text": "<@U979PBETG> has joined the channel",
        "user": "U979PBETG",
        "type": "message"
    },
    {
        "ts": "1519039771.000173",
        "text": "結論としては，(まだちょっと把握できてない部分もあるんですが)見た感じCofree annotationを使う意義は無さそうと言う感じです\n<https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1519027141000214?thread_ts=1518659662.000031&amp;cid=C4M4TT8JJ>",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519040250.000084",
        "text": "いろいろ説明不足ですみません。\nこのコード（今型検査にこけるんですが）は、Liquid 用の AST を実行するもので、Jekyll で採用されてたりするんですが、Jekyll 方言があってそれをベース方言のインタープリターをいじらずに拡張できるようにしたいというものです。\nで、そのベース方言部分です。",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1519040276.000106",
        "text": "まず，cofree annotationを使う動機から説明すると，構文木を扱う際各木に注釈情報を埋め込みたい時があって(例えば，パース時のソースコード上の位置や，型情報など)，このような情報はコンパイル時どんどん変遷していくため，決めうちじゃなくて何らかの型変数にしておきたいということがあります．\n\nただ，これを単純に実現すると，\ndata Expr a = Val Int a | Add (Expr a) (Expr a) a\nというように注釈情報を埋め込みたい場所に一々型変数を書かなければいけません．これを何とかしたいというのが動機です",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519040439.000321",
        "text": "data types a la carteもcofree annotationもデータ型をopenにするという方向では一緒なのですが，それぞれ方向性はdata types a la carteはsumに対してのopen性，cofree annotationはrecursion schemeに関してのopen性みたいな感じで異なるのでそこらへんは注意です(まあ結果的に，これらを併用することが可能なのですが)",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519040602.000160",
        "text": "で，実際にどのようにcofree annotationが解決するかなのですが，ASTを以下のようにrecursion schemeのBaseで定義しておきます．\ndata ExprF e = ValF Int | AddF e e\n(ここでeは元のaと関係なく，再帰する箇所を表します．まあこの辺はdata types a la carteと一緒で，それが併用できる所以なんですが)",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519040707.000109",
        "text": "で，通常はこれをFix f = f (Fix f)という原始的なオペレータでfixするんですが，Cofree f a = (a, f (Cofree f a))というオペレータでfixすることで，再帰する箇所全てに後から任意の注釈を埋め込めるようにできるというのがcofree annotatingと言われる手法ですね",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519040908.000416",
        "text": "ただこのcofree annotatingは，multipleなデータに対して弱くって， <https://stackoverflow.com/questions/38462563/how-to-work-with-ast-with-cofree-annotation> とか <@U98QDF5EJ> さんが使っていたIndexed functorでそれをうまく扱えるようにするというのが度々話題に上がっています",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519040971.000259",
        "text": "今回の場合，特に注釈情報は必要なさそうに見えるので(?)，cofreeを導入する必要はなさそうに見えます",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519041318.000139",
        "text": "(ところで，僕もあまり詳しく無いのですが，Data types a la carteの結構すぐにoverlappingする問題って，みんなどうやって解決してるんですかね？)",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519043350.000010",
        "text": "あ，あとこれって，その他(cofree使うか以外で)の感想待ちだったりしますか？",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1519044505.000187",
        "text": "cofree については全然知らなくって、「なんか VoQn さんのコードと似てる気がするけど知らない内に cofree 使ってるんだろうか？」という感じで提出したコードでした\nまさに\n&gt; まあこの辺はdata types a la carteと一緒で，それが併用できる所以なんですが\nというところで同じなのかなぁと勘違いしたようです\nただ cofree は好奇心を覚えるので説明は咀嚼してみます",
        "user": "U4L0B71L1",
        "type": "message"
    }
]