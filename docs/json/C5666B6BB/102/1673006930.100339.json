[
    {
        "text": "LispやMLには方言がありますが、Haskellにはないのって、単にコンパイラが複雑になったからなのでしょうか？\nモジュールや型などに関する関数型言語の実装一般に関する議論って、MLでは論文も多いですが、Haskellでは結構乏しい気がします\nここらへんの歴史的背景とか、最近の言語研究者の事情とかを知りたいです。",
        "type": "message",
        "ts": "1673006930.100339",
        "user": "U02CE9YGEAU"
    },
    {
        "text": "GHC 以外の処理系は2006年ごろだと Hugs が普通に選択肢として挙がってたみたいですね\n（自分は2011年ごろ移行しか知らない\n<https://xtech.nikkei.com/it/article/COLUMN/20060801/244812/|https://xtech.nikkei.com/it/article/COLUMN/20060801/244812/>",
        "type": "message",
        "ts": "1673024719.029479",
        "user": "U4L0B71L1"
    },
    {
        "text": "lispの方言はelisp, common lisp, schemeとかですかね。\nこれくらい違うのでいいなら、\nhaskellの方言として、purescript, elmとかいろいろあると思います。",
        "type": "message",
        "ts": "1673055352.666759",
        "user": "U74KTAG0N"
    },
    {
        "text": "<https://m.youtube.com/watch?v=832JF1o7Ck8|https://m.youtube.com/watch?v=832JF1o7Ck8>\n今はこれが気になっています。",
        "type": "message",
        "ts": "1673056420.489079",
        "user": "U74KTAG0N"
    },
    {
        "text": "少し前はFayとかHasteみたいなJavaScript用のほぼHaskellのサブセットがありましたね\n今はGHCが公式でJSやWASMを吐き出すのでそちらの方が良さそうですが…\n後はJHCとかの処理系もありますが、開発続いてるんでしょうか\nGHCで書くこと自体が拡張機能をたくさん使ってるので方言と言えるかもしれません\nそれで言うとEtaとかFregeも方言ですかね\n\nかなり離れてるOCamlやSMLをML方言として捉えて良いなら、純粋関数型言語は全てHaskellの方言かもしれません(過言)",
        "type": "message",
        "ts": "1673087167.105759",
        "user": "U57CUMWQ6"
    },
    {
        "text": "単なるご参考：\n挙がっていないもので、方言っぽいので<https://wiki.clean.cs.ru.nl/Clean|clean>、ぽくないので<https://www.cs.kent.ac.uk/people/staff/dat/miranda/|miranda >とかもありますかね。\n\nHugsの前身の <https://en.wikipedia.org/wiki/Gofer_(programming_language)|gofer> はちょっとだけ使ったりソース読んだりしていました。\n\n<https://ja.wikipedia.org/wiki/Haskell#%E5%AE%9F%E8%A3%85|Wikipediaのページ>には、ghc以外の処理系・方言？がいくつか挙がっていました。\n\n（研究（の多少）に関してはよくわからないのですが、なんとなくMLのほうが論文少ないきがしていました。）",
        "type": "message",
        "ts": "1673104790.204589",
        "user": "UMTRA1VHU"
    },
    {
        "text": "皆さんありがとうございます。Haskellの処理系がいくつもあったことは初めて知りました。\n&gt; 純粋関数型言語は全てHaskellの方言\n確かに純粋と謳っている関数型言語のシンタックスは大体Haskellのような見た目をしていますね。\npurescriptやelmもあまり良く知らないのですが、Haskellの方言と言っていいくらいの類似度なんですかね。\n\nMLよりHaskellの方が論文が少ないというのは、どこを見るかにもよるかもしれないのですが、少なくとも私はHaskellのような言語を自作する上で、MLを対象とした論文はよく見るのですが、Haskellの実装に対してはあまり見かけませんでした。\n\n確かに製品レベルのコンパイラではHaskellに類似したものも多いのですが、Haskellコンパイラを自作する例は、MLのそれ（住井先生のMinCamlや東北大学のSML#など）に比べて少ないような気がします。どうでしょうか？",
        "type": "message",
        "ts": "1673143351.367049",
        "user": "U02CE9YGEAU"
    },
    {
        "text": "まあやっぱり、コンパイラを軽く自作する例が少ないのは最初にご指摘された通り複雑だからなのではないでしょうか\n遅延評価と型クラスだけでもかなり大変そうです\n内部のSTG形式とかフルスクラッチしたくない…\nなのでHaskellベースの学術的な試み、例えばLiquidHaskellとかやるにしてもGHC前提で行いたい気がします\nどうせ世の中のライブラリはGHC拡張使いまくりなので実用性を少しでも考えるならGHC前提にしたいですし\n\nSchemeとCommon LispなどをLisp方言としてまとめて良いならPureScriptもHaskell方言で良い気もしますが",
        "type": "message",
        "ts": "1673144275.219929",
        "user": "U57CUMWQ6"
    },
    {
        "text": "後は、型クラスとかTemplate Haskellなどの自由度によってライブラリとして研究したいことが実現可能なことが多いのでわざわざ処理系から自作しなくて良いとかもあるのかもしれません\n最近はGHCにもプラグイン機構がありますし\n例えばSML#のSQL式機構とかは、Esqueletoはライブラリとして少し似たような感じで行っています\nXML式を導入したいとかでも準クオートで対応可能ですし",
        "type": "message",
        "ts": "1673144963.830069",
        "user": "U57CUMWQ6"
    },
    {
        "text": "なるほど。まだHaskellも使いこなせていない部分が多くあることを感じさせられました。ありがとうございます",
        "type": "message",
        "ts": "1673145806.285559",
        "user": "U02CE9YGEAU"
    }
]