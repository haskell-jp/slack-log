[
    {
        "ts": "1559793384.007300",
        "text": "（あったらどうしよう、という不安もある）",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1559794337.007700",
        "text": "そんときは優しく教えてくれますよ。ドキュメントの書き方が悪い、といえる可能性もありますし",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1559797341.008100",
        "text": "<@UKAS45C80> has joined the channel",
        "user": "UKAS45C80",
        "type": "message"
    },
    {
        "ts": "1559813342.008300",
        "text": "結果が出てました。\nコンストラクター 62%\n構築子 38%\n構成子 0%\nでした。\nこれなんで聞いたかというと <https://ghcguide.haskell.jp/8.2.2/users_guide/index.html> で構成子と訳されていて聞きなれなかったからでした。",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1559815602.010800",
        "text": "再びhigher-kinded dataの話ですが、この間教えていただいたhiggledyはbarbiesと競合しているわけじゃなくてbarbiesを、 `Generic` なあらゆる型に使えるように補助するものなんですね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1559878287.011800",
        "text": "GHC 8.10のGHCiから、型クラスのインスタンスを検索するコマンドが追加されるそうです。<https://github.com/ghc-proposals/ghc-proposals/pull/239>  <https://gitlab.haskell.org/ghc/ghc/merge_requests/720>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1559882218.012600",
        "text": "<@UK0LLUCE6> has joined the channel",
        "user": "UK0LLUCE6",
        "type": "message"
    },
    {
        "ts": "1559897574.013000",
        "text": "私は「構成子」という訳語を使っています．これは，武市正人訳『関数プログラミング』近代科学社の訳語対照表に拠ったものです．個人的には，「構築子」という用語がすこし，imperativeな香りがするのと，一部のOOPLで定着しているものの印象強いので，「構成子」という言い方のほうが好きです．また，Constructiveには「構成的」という訳をあてることが多いので．．．",
        "user": "U4KU9ABL0",
        "type": "message"
    },
    {
        "ts": "1559907367.013400",
        "text": "<@UK61N4FS5> has joined the channel",
        "user": "UK61N4FS5",
        "type": "message"
    },
    {
        "ts": "1559950218.014200",
        "text": "<@UKD4B2J6L> has joined the channel",
        "user": "UKD4B2J6L",
        "type": "message"
    },
    {
        "ts": "1560183620.018800",
        "text": "こんばんは。今回 builderscon に Haskell でプロポーザルを出してみました。締切直前に駆け込みで提出したので若干雑なんですが、ちょっとでも裾野を広げるような話ができればいいかなと思っています。リンク先ページの SNS シェア数が加点要素になるらしいので、気に入ったら拡散いただけると幸いです。\n\n君の手で作るモナドは怖くない -  <https://builderscon.io/builderscon/tokyo/2019/session/a4313ede-add2-4449-a9d1-0ad988ee91e0>",
        "user": "U4M4XHKB8",
        "type": "message"
    },
    {
        "ts": "1560184013.019000",
        "text": "ちなみにプロポーザルはもう一つ提出してますが、こっちは Haskell とは全然関係ないです。\n\n形式手法による分散システムの検証 - <https://builderscon.io/builderscon/tokyo/2019/session/fa356ee3-6be9-4850-ac9e-037bd34aabaa>",
        "user": "U4M4XHKB8",
        "type": "message"
    },
    {
        "ts": "1560210072.019300",
        "text": "正直なところ、個人的に、Haskellをやろうともしない人にこのテーマはあまり良いものだと思えません。\nこれまでも何度か近いテーマのものを見たり書いたりしてきましたが、「結局モナドはよくわからない」という印象を与えるにとどまっているんじゃないかと思っています。\nまぁ、今回はその点を\n&gt; 「モナドとは何か？」という問い自体がナンセンスである\nという観点で打ち破ろうと考えているんだと思いますが、やっぱりHaskellをある程度知っている人向けにしない限りきついんじゃないかと思います。分量的にも聞いている人のモチベーション的にも。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560210287.019500",
        "text": "Haskell初心者にはちょうどいいテーマだとは思いますが...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560213661.020000",
        "text": "言わんとすることはわかります。CFP 書いてる最中にも思ってましたが、百歩譲って仮に内容が 100% 理解されたとしても、モチベーション的に so what みたいな結果になりそうですよね…。「ねこのきもち爬虫類特集号」みたいな。",
        "user": "U4M4XHKB8",
        "type": "message"
    },
    {
        "ts": "1560214591.020300",
        "text": "すみません、提出した後にこんなことを言って...\nこんなこというとなんだか下心で言っているように聞こえちゃうかもですが、ぜひbuildersconでダメでもHaskell Day 2019で発表してみてください！ :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560216663.020800",
        "text": "つい最近、Haskell全く触ってない人からモナドについて聞かれたので、需要はあると思いますよ。モナドチュートリアルが多過ぎる問題のことを言っているのであれば同意しますが（まあ、実際、数学的な背景を理解しない限り厳密な解説にはならないのだから、いくらチュートリアルが増えてもすべての人のモヤモヤしたものが晴れることはないでしょう）。",
        "user": "U4MAYDV9C",
        "type": "message"
    },
    {
        "ts": "1560217633.021200",
        "text": "今年の RubyKaigi のセッションで Haskell の Monad 的な機能を作るみたいなのありましたよ\nウケは良かった気がします（たぶん",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560217661.021400",
        "text": "まあどっちにしても CFP は出してしまったし、結局のところは興行でしかないので、ウケなかったら採択する側にも責任があるということにしてしまいましょう。ちなみにカエルは両生類だと思います。",
        "user": "U4M4XHKB8",
        "type": "message"
    },
    {
        "ts": "1560219216.022800",
        "text": "マニュアルを読むと GHC の -hT オプションは健在な感じがするんですが、使うとランタイムに怒られます。-h ならうまく行きました。どこかで変更が入りましたか？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1560222706.023300",
        "text": "&gt; つい最近、Haskell全く触ってない人からモナドについて聞かれたので、需要はあると思いますよ\n\nそれはそうだと思うんですけど、結局Haskell（または圏論）をやる以上の近道がない（と、自分なりにチャレンジしたりいろいろ読んで思いました）ので、できるだけHaskellに導きたい...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560235606.025100",
        "text": "クラスのないC言語でクラスを持ち込んでもあまり流行らないか好かれない（gtkとか）\nのと一緒でモナドのない言語でモナドをやっても、もやもやしますよね。",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1560245129.026000",
        "text": "<@UKH5P355M> has joined the channel",
        "user": "UKH5P355M",
        "type": "message"
    },
    {
        "ts": "1560305859.026700",
        "text": "めちゃくちゃドーーーーーーでもイイんですけど、最近 GitHub に Dhall が加わったんですねw\n<https://github.com/github/linguist/pull/4539>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560307026.027400",
        "text": "<@UKJ6ZSDST> has joined the channel",
        "user": "UKJ6ZSDST",
        "type": "message"
    },
    {
        "ts": "1560314228.028300",
        "text": "<@UK50TKYSE> has joined the channel",
        "user": "UK50TKYSE",
        "type": "message"
    },
    {
        "ts": "1560400243.031700",
        "text": "<https://github.com/fumieval/extensible/tree/flip> extensibleテクニカルプレビュー第二弾: ベースとなる型 `:*` と `:|` のパラメータを、リストが先、包装型が後になるよう入れ替える大胆な変更です。リストを固定することが多いので取り回しがよくなり、barbiesのインターフェイスも利用できるようになります",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560400360.032100",
        "text": "barbies は逆なんだ",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560400530.032900",
        "text": "`data Foo h = Foo (h Int) (h Double)`みたいな非extensibleなHKDが増えてきたので、この際そちらに合わせようと",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560410544.034000",
        "text": "<http://fumieval.hatenablog.com/entry/2019/06/13/155557>　こちらにも宣伝。バッチリクエストを安全に表現するためのアイデア",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560410893.034500",
        "text": "デザインがいつのまにか変わってた",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560413139.035600",
        "text": "以前から、 `h :* xs` を見たとき `xs` の先頭に `h` をのっけているように感じられてならなかったので、それが少し改善されますね！ :+1:\n（ `xs :&amp; h` なら `xs` が前なのでそうとは思えない！）\n\nただ同時に思ったのですが、敢えてこれらを演算子にする意味ってありますかね。。。普通に英語の名前を与えた方がわかりやすい気がしてきました。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560418970.035900",
        "text": "むしろいい名前が思いつかなかったので演算子にしたという経緯があります…",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560419156.036200",
        "text": ":naruhodo: 。そんなこともあろうかとちょっと考えてましたが、まだ `Product` も `Sum` も型の名前としては使ってないし、ちょうどいい気がしますね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560419642.036400",
        "text": "さすがに標準ライブラリと被るのは…",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560419926.036700",
        "text": "どっちもPreludeに入っているわけじゃないし... とは思いますが Data.Functor.{Sum, Product}があったんですね... 使われる文脈を考えると確かにちょっと紛らわしいかも知れませんね（ひょっとしてextensibleパッケージの中でも使ってる？）。\n`EProduct`, `ESum` と妥協するのはダメでしょうか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560426936.037200",
        "text": "なるほど…どちらにせよ利用者が直接触れることは少ないので、決してダメということはないですね(型名にアルファベットの接頭辞を付けるのは避けていました)。",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560426992.037400",
        "text": "なお演算子にした理由は、括弧が節約できて見やすいからです",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560466504.037900",
        "text": "Stack 2が出ましたね。 <https://github.com/commercialhaskell/stack/releases/tag/v2.1.1>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1560477989.039200",
        "text": "changes 訳して誰かブログに……（お前がやれってな",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1560478042.039800",
        "text": "GitHub releases の元の Markdown 取れないのかな",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1560478122.040000",
        "text": "<@UKJU4EX6C> has joined the channel",
        "user": "UKJU4EX6C",
        "type": "message"
    },
    {
        "ts": "1560478230.040400",
        "text": "ChangeLog.md に同じのあるな",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1560478240.040700",
        "text": "<https://github.com/commercialhaskell/stack/blob/master/ChangeLog.md#v211>\nふっつーに多いなw",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560478360.041100",
        "text": "Pantry?",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560478860.041300",
        "text": "<https://haskell-jp.slack.com/archives/C4LN73TEG/p1560478735001000>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1560505361.042400",
        "text": "`stack.yaml.lock` なるもが生成されるようになったのか（git で管理する必要はなさそう\n<https://docs.haskellstack.org/en/stable/lock_files/>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560506139.046800",
        "text": "<https://github.com/treeowl/sort-traversable> 今日のピックアップ: Traversableであれば何でもソートできる変態パッケージ。そのからくりは、「ヒープから値を取り出すStateモナド」「ヒープのモノイドによるConst」を融合させたようなApplicativeにあり",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1560506616.047000",
        "text": "hpack の defaults 機能の local がうまく動作しなかった\n```\n$ stack test\nCabal file info not found for extensible-0.5, updating\nSelected mirror <https://s3.amazonaws.com/hackage.fpcomplete.com/>\nDownloading root\nSelected mirror <https://s3.amazonaws.com/hackage.fpcomplete.com/>\nDownloading timestamp\nDownloading snapshot\nDownloading mirrors\nCannot update index (no local copy)\nDownloading index\nUpdated package index downloaded\nCalculating hashes to check for hackage-security rebases or filesystem changes\nNo old cache found, populating cache from scratch\nPopulating cache from file size 606624768, hash 29db327ba3cecd02d72a043ab9d88aef73f883c7a42ea8e929245c4778463a14\nPopulating package index cache ...\nPackage index cache populated\nInvalid value for \"defaults\"! File /private/var/folders/cp/j_f70sks34dcqsrqjgdll5jskt59rw/T/hpack-pkg-dir86858/../mix-base.yaml does not exist!\n```\nとりあえず、該当パッケージに stack(hpack) で生成した .cabal を置くようにしたらうまくいった",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1560507423.047300",
        "text": "どーでもいいけど、stack v1 のローカルキャッシュは死ぬ :innocent:",
        "user": "U56L7EVNY",
        "type": "message"
    }
]