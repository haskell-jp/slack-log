[
    {
        "text": "<https://twitter.com/kakkun61/status/1542179651782868993|このツイート>に書いたことなんですが、例えば\n```foo :: a -&gt; IO ()\n```\nという `foo` があって、デバッグのために `foo` の中で\n```Debug.Trace.traceIO $ show a\n```\nをしたいとき、正攻法だと `Show a` 制約を付けて回るところを型をいじらずに済ます邪法はありますか？\n`Show a` が存在しないケースでは実行時エラーで構いません",
        "type": "message",
        "ts": "1656521779.943699",
        "user": "U4L0B71L1"
    },
    {
        "text": "recover-rttiの使い所ですかね。型に固有のShowインスタンスを使うわけではありませんが <https://hackage.haskell.org/package/recover-rtti-0.4.1.0/docs/Debug-RecoverRTTI.html#v:anythingToString>",
        "type": "message",
        "ts": "1656547425.724289",
        "user": "UGM9F7XQS"
    },
    {
        "text": "多分 `anythingToString` の方がいいとは思いますが、 CPPとConstrintKindsを組み合わせて\n```#if DEBUG\ntype ShowWhenDebug = Show\n#else\ntype ShowEhenDebug _a = ()\n#endif```\nという手が使えるかも知れません。（試してはいない。後恐らくHaddockに載る内容に軽いノイズが入る）",
        "type": "message",
        "ts": "1656549094.383519",
        "user": "U4LGTMTMK"
    },
    {
        "text": "recover-rtti 忘れてましたね\n試してみます！",
        "type": "message",
        "ts": "1656560406.212409",
        "user": "U4L0B71L1"
    }
]