[
    {
        "ts": "1579344718.011900",
        "text": "プロ <https://twitter.com/Lugendre/status/1218474823636213760|https://twitter.com/Lugendre/status/1218474823636213760>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1579344989.012300",
        "text": "<https://twitter.com/kakkun61/status/1218487023234732032|https://twitter.com/kakkun61/status/1218487023234732032>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1579345829.013400",
        "text": "ところどころ「速度にこだわるなら」という条件を付けたくなる箇所もありますがすばらしい。 :serval:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1579431781.014500",
        "text": "こんにちは！",
        "user": "USSU9JV28",
        "type": "message"
    },
    {
        "ts": "1579431807.015000",
        "text": "こんにちは！",
        "user": "UHD000V41",
        "type": "message"
    },
    {
        "ts": "1579431842.015800",
        "text": "```forever do putStrLn \":)\"```",
        "user": "USSU9JV28",
        "type": "message"
    },
    {
        "ts": "1579431890.016600",
        "text": "Yabai.. sono koto",
        "user": "USSU9JV28",
        "type": "message"
    },
    {
        "ts": "1579431981.018100",
        "text": "Ima wa.. Inputtu mesodosu ga nai demo nihongo ga hanashitai de gozaimasu",
        "user": "USSU9JV28",
        "type": "message"
    },
    {
        "ts": "1579432181.019300",
        "text": "wa nihongo ga benkyou shitai desu",
        "user": "USSU9JV28",
        "type": "message"
    },
    {
        "ts": "1579483421.021500",
        "text": "extensible の Wrapper って型クラスが地味に使いやすくて感動してる（今更）\n<https://hackage.haskell.org/package/extensible/docs/Data-Extensible-Wrapper.html#t:Wrapper>\n`wrap . unwrap` とやるだけで `Field` と `Nullable` の順番を入れ替えれる笑\n```liftNullable :: Wrapper h =&gt; Field (Nullable h) x -&gt; Nullable (Field h) x\nliftNullable = wrap . unwrap\n\nunliftNullable :: Wrapper h =&gt; Nullable (Field h) x -&gt; Field (Nullable h) x\nunliftNullable = wrap . unwrap```",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1579507140.028600",
        "text": "randomかquestionか迷ったけども． `bytestring`と`vector`の`Semigroup`インスタンスの`Data.Semigroup.stimes` (<http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Semigroup.html>)，実装が高速化されてないしなんなら `Data.Semigroup.stimesMonoid` (0で `mempty`を返す)への実装変更もされてないんですが，これって不便なのかな．patch投げてやろうと思っていたらずっと放置してしまってたんですけど．",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1579614328.029600",
        "text": "<@USX51SQ64> has joined the channel",
        "user": "USX51SQ64",
        "type": "message"
    }
]