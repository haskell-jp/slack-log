[
    {
        "ts": "1545204632.033100",
        "text": "了解です。ちょっと調べてみます。ありがとうございます！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545204746.033300",
        "text": "それはそれとして，コレって `(++)` と `happend` の中置演算子としての左右結合性が異なることから来てるから， `extensible` のほうで揃える修正もしたほうが便利な気がするけど，どう思いますか？ &gt; <@U4KUNQF9N>",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1545204930.033500",
        "text": "修正しました！さっきextensible-0.5をリリースしてしまったのが悔やまれる… <https://github.com/fumieval/extensible/commit/ae5c1e07269cf80cfd55dca95b567c61707ef66d>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1545204987.033900",
        "text": "あ、そうですね。上記のソースのビルド通すだけならそれでいけますね :sweat_smile:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545205002.034100",
        "text": "こういう場合、ちゃんとした証明を実装しておいて、 ```unsafeCoerce `asTypeOf` proof``` のように定義するというテクニックもあります",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1545205263.034600",
        "text": "ああ， `(++)` は `singletons` のものじゃなくて， `extensible` 内で独自に定義してるのか．",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1545205386.034800",
        "text": "話は逸れますが、要素の型レベルリストは固定してラッパーを変えるのがextensibleの流儀なので、happendは実は非推奨だったりします",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1545205497.035100",
        "text": ":thinking_face: どういう意味でしょうか？\n`happend` を使わずに結合する方法があるんですか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545205794.035300",
        "text": "結合すること自体、あまり推奨はしていないです",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1545208495.035700",
        "text": "解です <https://gist.github.com/notogawa/13422a72683d05cee989d60cd64479a2>",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1545277650.036800",
        "text": "こういう関数ってありませんでしたっけ。。ものすごく曖昧な記憶だけどあった気がするんです。\n\n```\n(&lt;**&gt;) :: (a -&gt; b) -&gt; [[a]] -&gt; [[b]]\n(&lt;**&gt;) = map . map\n-- こんなのなかったっけ・・\n```",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1545277873.038000",
        "text": "Control.Applicativeにある同名の演算子は全然違いますからねぇ\n\n```\n(&lt;**&gt;) :: Applicative f =&gt; f a -&gt; f (a -&gt; b) -&gt; f b\n```",
        "user": "U8EJKMNVA",
        "type": "message"
    },
    {
        "ts": "1545278157.038500",
        "text": "いや、完全に記憶違いだったかもしれないです。前に会社でこんな話してたなーっていうのをなんとなく覚えてただけなのかも。\nそのときの結論を思い出せないのが悔しい",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1545278518.039500",
        "text": "これだー！\n<http://hackage.haskell.org/package/functor-utils-1.17.2/docs/Data-Functor-Utils.html#v:fmap2>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1545280640.042700",
        "text": "こういうのって どうにかならないんですかね？ 演算子を定義できるってのはhaskellの強みだとは思うのですが、同じ演算子を別の意味で定義されると混乱するというか、、、別にライブラリをまたいで無いので問題ないのはわかるんですけど、、、",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1545281683.043100",
        "text": "自分がライブラリの開発してたら、まず著名なライブラリの演算子と被らないようにして、それでもどうしようもなかったらqualifiedでimportしてください。。!っていうかなー\n\n```\nimport qualified MyLib as M\n\nM.&lt;**&gt;\n```",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1545282502.043500",
        "text": "演算子じゃないバージョン(普通の関数)も提供する",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1545356661.045300",
        "text": "<@UF0HFC1FH> has joined the channel",
        "user": "UF0HFC1FH",
        "type": "message"
    },
    {
        "ts": "1545613443.000300",
        "text": "stackでpackageをimportする所でつまづいています。\n\nstackのUser guideを見ながらAdding dependenciesの項目のように\n以下のようなコンパイルエラーが出ています。\n\n/Users/you/Downloads/tanaoroshi/app/Main.hs:three:1: error:\n    Could not find module ‘Data.List.Split’\n    Use -v to see a list of the files searched for.\n  |\n3 | import Data.List.Split\n  | ^^^^^^^^^^^^^^^^^^^^^^\n\nUser guideのようにpackage.yamlに以下の記載を追加してstack buildしてみましたが上記のエラーが改善しません。\n\ndependencies:\n- base &gt;= 4.7 &amp;&amp; &lt; 5\n- split\n\n指定の仕方に問題があるのかとも思い、以下も試してみましたがダメでした。\n\ndependencies:\n- base &gt;= 4.7 &amp;&amp; &lt; 5\n- Data.List.Split\n\nどのようにすればパッケージを利用できるのでしょうか？",
        "user": "UCDHJ6R6X",
        "type": "message"
    },
    {
        "ts": "1545627093.006500",
        "text": "<https://gist.github.com/applePrincess/ff93cbee587beec9f7c00783c5292dea> な感じで出来ましたよ？ templateはsimple-hpack で resolver はlts-13.0を使いました。URL以外は変更をしてませんが。stack buildは通りましたよ。",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1545627203.006700",
        "text": "```\ndependencies:\n- base &gt;= 4.7 &amp;&amp; &lt; 5\n- split\n```\n\npackage.yaml でこう書くのが正しいやり方です。正しいはずなのにどうしてエラーになるのかはわからないのですが、 `stack build` をして出てきた文字を全部書いてもらえたら役に立つと思います。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1545632554.007200",
        "text": "- `.cabal` ファイルが何らかの理由で書き換えられたことになっている場合の警告が出ていないか（具体的なメッセージは忘れてしまいましたが）、\n- 実は間違えてpackage.yamlを `/Users/you/Downloads/tanaoroshi` 以外の場所に置いていないか\n\nの2点が気になりますね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545703254.008200",
        "text": "<@UF0N2EEAD> has joined the channel",
        "user": "UF0N2EEAD",
        "type": "message"
    },
    {
        "ts": "1545721699.008700",
        "text": "lts-13で結構なパッケージがstackageからdropされてるようなんですが，\nビルドできなくなったときとかauthorに連絡いかないんでしたっけ？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1545721799.008800",
        "text": "少なくともGitHubでIssueが立てられるはずです。\nそれでも反応がないときにメールが飛ぶのではないかと思います。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545721902.009000",
        "text": "そのパッケージのgithub？lts-haskellのgithub？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1545721972.009200",
        "text": "Stackageですね。\n例えば <https://github.com/commercialhaskell/stackage/issues/4241>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545722328.009500",
        "text": "うーん． `Agda` とか `messagepack` とかissue無い気がするけど",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1545722789.009800",
        "text": "普通は、あと数Minor Versionたったら戻るみたい",
        "user": "UACQ9J5D3",
        "type": "message"
    },
    {
        "ts": "1545724405.010000",
        "text": "igrepさんの指摘のように.cabalを手書きで修正しているというWarningが出ていました。エラーをよく読むとpackage.yamlを使いたいならcabalファイルを消すことって書いてました。\nWorning: /Users/you/Downloads/tanaoroshi/tanoroshi.cabal was modified manually. Ignoring /Users/you/tanaoroshi/package.yaml in favor of the cabal file. If you want to use the package.yaml file instead of the cabal file, then please delete the cabal file.\n\nそれ以外にも分からないまま色々なファイルを書き換えては戻したりしてしまったので、別のディレクトリでstack newからやり直してstackの環境をフレッシュにつくり直してやり直してみました。\nそれまでに書いたソースをコピーし、package.yamlにsplitの記載だけ追加してstack buildしたら問題なくコンパイルできました。\n\nありがとうございます。エラーメッセージをもっとちゃんと読まないとダメですね。",
        "user": "UCDHJ6R6X",
        "type": "message"
    },
    {
        "ts": "1545724817.012700",
        "text": "掻き乱す意図はないのですが、 package.yamlのタイムスタンプが cabalファイルのタイムスタンプより新しいと勝手に最新のcabalが上書きされたような？ ",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1545728043.012900",
        "text": "メールはこないかな、すっごい有名なやつならわからないけど",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1545728564.013100",
        "text": "あと、多分 Issue のでき方を勘違いしてるかな？\nGlob の Issue の見方は:\n- Glob のバージョンが上がりました\n- しかし、pandoc-2.5 がブロックして上げれない\n- 対応しないとドロップされるぞ(pandoc-2.5が)\nという感じなので Agda に警告言ってる Issue があるかどうかの問題ですね。",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1545728568.013300",
        "text": "多分これ\n<https://github.com/commercialhaskell/stackage/issues/3990>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1545730703.013900",
        "text": "lts のマイナーバージョン (e.g. lts-12.x) が上がってるうちは drop されることはないんですけど、メジャーバーションが上がるときは一気に drop されます（nightly に入ってたやつがそのまま取り込まれる）",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1545775681.014600",
        "text": "package.yamlのタイムスタンプを.cabalよりも新しい状態にしてstack buildしてみました。\n（勘違いして.cabalのタイムスタンプを新しくしようとしたので.cabalも近い時間に更新されてます。）\n\n```\niMac27:tanaoroshi you$ stack build\ntanaoroshi-0.1.0.0: unregistering (local file changes: package.yaml)\ntanaoroshi-0.1.0.0: configure (lib + exe)\nConfiguring tanaoroshi-0.1.0.0...\ntanaoroshi-0.1.0.0: build (lib + exe)\nPreprocessing library for tanaoroshi-0.1.0.0..\nBuilding library for tanaoroshi-0.1.0.0..\nPreprocessing executable 'tanaoroshi' for tanaoroshi-0.1.0.0..\nBuilding executable 'tanaoroshi' for tanaoroshi-0.1.0.0..\ntanaoroshi-0.1.0.0: copy/register\nInstalling library in /Users/you/haskell/tanaoroshi/.stack-work/install/x86_64-osx/lts-13.0/8.6.3/lib/x86_64-osx-ghc-8.6.3/tanaoroshi-0.1.0.0-5xeICrctrISDA8KRnU1BAz\nInstalling executable tanaoroshi in /Users/you/haskell/tanaoroshi/.stack-work/install/x86_64-osx/lts-13.0/8.6.3/bin\nRegistering library for tanaoroshi-0.1.0.0..\niMac27:tanaoroshi you$ ls -l\ntotal 64\n-rwxr-xr-x@ 1 you  staff  1261 12 23 07:51 20181220Stock.csv\n-rw-r--r--  1 you  staff    50 12 25 16:33 ChangeLog.md\n-rw-r--r--  1 you  staff  1523 12 25 16:33 LICENSE\n-rw-r--r--  1 you  staff   171 12 25 17:23 README.md\n-rw-r--r--  1 you  staff    46 12 25 16:33 Setup.hs\ndrwxr-xr-x  3 you  staff    96 12 25 17:50 app\n-rw-r--r--  1 you  staff  1190 12 26 06:57 package.yaml\ndrwxr-xr-x  3 you  staff    96 12 25 16:33 src\n-rw-r--r--  1 you  staff  2133 12 25 16:33 stack.yaml\n-rw-r--r--  1 you  staff  1546 12 26 06:56 tanaoroshi.cabal\ndrwxr-xr-x  3 you  staff    96 12 25 16:33 test\n```\n\n.cabalのタイムスタンプはpackage.yamlよりも1分古いままでしたので今回の検証では上書きされませんでした。ご報告まで",
        "user": "UCDHJ6R6X",
        "type": "message"
    },
    {
        "ts": "1545785154.016800",
        "text": "今\n<https://github.com/keera-studios/haskell-titan/tree/master>\nのサイトで\ninstallしようとしているのですが、\nその道中でSDL-0.6.7.0のインストールができなくて困っています",
        "user": "UE51MD4E6",
        "type": "message"
    },
    {
        "ts": "1545787359.017000",
        "text": "どんな状態でエラーが出来ていないんでしょうか？\nエラーメッセージが出て終了しましたか？\nそれともビルドが途中でフリーズしてしまっている、とかでしょうか？\n\nまた、使用しているGHCのバージョンやOSなどのご利用の環境についても教えてください。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1545788971.017200",
        "text": "sawada@DESKTOP-LBTC33O:~/haskell-titan$ cabal install -fexamples titan-yampa-debugger/\nResolving dependencies...\nNotice: installing into a sandbox located at\n/home/sawada/haskell-titan/.cabal-sandbox\nConfiguring SDL-0.6.7.0...\nFailed to install SDL-0.6.7.0\nBuild log ( /home/sawada/haskell-titan/.cabal-sandbox/logs/SDL-0.6.7.0.log ):\ncabal: Entering directory '/tmp/cabal-tmp-11367/SDL-0.6.7.0'\n[1 of 1] Compiling Main             ( /tmp/cabal-tmp-11367/SDL-0.6.7.0/dist/dist-sandbox-eed7c60d/setup/setup.hs, /tmp/cabal-tmp-11367/SDL-0.6.7.0/dist/dist-sandbox-eed7c60d/setup/Main.o )\nLinking /tmp/cabal-tmp-11367/SDL-0.6.7.0/dist/dist-sandbox-eed7c60d/setup/setup ...Configuring SDL-0.6.7.0...\nconfigure: WARNING: unrecognized options: --with-compiler\nchecking for sdl-config... no\nchecking for sdl11-config... no\nconfigure: error: *** SDL not found! Get SDL from <http://www.libsdl.org|www.libsdl.org>.\nIf you already installed it, check it's in the path. If problem remains,\nplease send a mail to the address that appears in ./configure --version\nindicating your platform, the version of configure script and the problem.\ncabal: Leaving directory '/tmp/cabal-tmp-11367/SDL-0.6.7.0'\ncabal: Error: some packages failed to install:\nSDL-0.6.7.0 failed during the configure step. The exception was:\nExitFailure 1\nSDL-gfx-0.7.0.0 depends on SDL-0.6.7.0 which failed to install.\ntitan-yampa-debugger-0.1.0.0 depends on SDL-0.6.7.0 which failed to install.",
        "user": "UE51MD4E6",
        "type": "message"
    },
    {
        "ts": "1545789253.017400",
        "text": "windows10内のubuntsuで行っています",
        "user": "UE51MD4E6",
        "type": "message"
    },
    {
        "ts": "1545790627.017600",
        "text": "SDLを見つけられていないようです。 `stack` や `ghc` は勝手にやってくれないので、自分でインストールする必要があります。\nもしすでにインストールされているようであれば、PATHなどを確認する必要があります。\nなお、WSL上でSDKが動いてくれるのかは、私はわかっていません。\n&gt; checking for sdl-config... no\n&gt; checking for sdl11-config... no\n&gt; configure: error: *** SDL not found! Get SDL from <http://www.libsdl.org|www.libsdl.org>.\n&gt; If you already installed it, check it’s in the path.",
        "user": "U4MAYDV9C",
        "type": "message"
    },
    {
        "ts": "1545900548.018300",
        "text": "<@UF29CNR1Q> has joined the channel",
        "user": "UF29CNR1Q",
        "type": "message"
    },
    {
        "ts": "1545994052.025300",
        "text": "こんばんは。\nemacsで関数の型注釈をemacsのコマンド経由で挿入したくて右往左往してます。 （vimの頃はghc-modに頼ってた）\nhaskell-ide-engineとhaskell-modeでそれが可能なのか、ghc-modが必要なのかということもはっきりさせられていません。\nもしghc-modだけしか型注釈の挿入ができないのであれば、ghc-modをインストールしたいと思います。\n今OSXの10.14.2を利用しているんですが、どのltsがベストかを知りたいです。お助けください :bow:\n\n```\n~/src/github.com/shokohara/mergecleanhs(develop*) » cat ~/.emacs.d/init.el                                                                                                                                                                                                    sho@shosimac\n(require 'cask \"~/.cask/cask.el\")\n(cask-initialize)\n\n(require 'lsp-mode)\n(require 'lsp-ui)\n(require 'lsp-haskell)\n(require 'company)\n(global-company-mode)\n\n(autoload 'ghc-init \"ghc\" nil t)\n(autoload 'ghc-debug \"ghc\" nil t)\n\n(add-hook 'lsp-mode-hook 'lsp-ui-mode)\n(add-hook 'haskell-mode-hook #'lsp)\n(add-hook 'haskell-mode-hook 'flycheck-mode)\n\n;; フックを設定\n(add-hook 'haskell-mode-hook 'haskell-indentation-mode)\n(add-hook 'haskell-mode-hook 'interactive-haskell-mode)\n(add-hook 'haskell-mode-hook 'haskell-decl-scan-mode)\n(add-hook 'haskell-mode-hook 'haskell-doc-mode)\n(add-hook 'haskell-mode-hook (lambda () (ghc-init)))\n\n(eval-after-load 'haskell-mode '(progn\n                                  (define-key haskell-mode-map (kbd \"C-c C-n C-t\") 'haskell-process-do-type)\n                                  (define-key haskell-mode-map (kbd \"C-c C-n C-i\") 'haskell-process-do-info)\n                                  (define-key interactive-haskell-mode-map (kbd \"M-.\") 'haskell-mode-goto-loc)\n                                  (define-key interactive-haskell-mode-map (kbd \"C-c C-t\") 'haskell-mode-show-type-at)))\n(setq lsp-haskell-process-path-hie \"hie-wrapper\")\n(setq haskell-process-type 'stack-ghci)\n(setq haskell-process-path-ghci \"stack\")\n(setq haskell-process-args-ghci \"ghci\")\n(add-hook 'haskell-mode-hook\n          (lambda ()\n            (set (make-local-variable 'company-backends)\n                 (append '((company-capf company-dabbrev-code))\n                         company-backends))))\n(put 'downcase-region 'disabled nil)\n```",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1545994376.025400",
        "text": "stack を使う前提なら、intero 経由でやったほうが楽なんじゃ？　ただし stackを使ってないプロジェクトには、、、どうなんだろ？ って感じですけど",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1545994644.025600",
        "text": "お返事ありがとうございます。導入してみます。そのHPを見たところ下のようにありましたので、8.0.1から順に試してみます。\n\n&gt;&gt;&gt; Modern and backwards compatible\nTested on GHC 8.0.1, GHC 7.10.3, GHC 7.10.2, and GHC 7.8.4.",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1545994804.025800",
        "text": "最新リリースのやつなら多分8.4系(lts-12.x) でも行けるはずですよ。 8.6系はうーん。lts出たばかりだし、しばし待たれよって感じみたいですね(？)",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1545995450.026000",
        "text": "globalとprojectの両方をlts12.25にして `emacs src/Main.hs` してみたところtype signatureの挿入が完全に動いてます！！\nここまで簡単に動くとは。お導き頂いて本当にありがとうございました :bow:\n(今までの苦労は何だったんだろう。。)",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1546041962.026400",
        "text": "今でしたらghc-modの元メンテナ <@U56MBRKR9> さんが作ったhhpもおすすめですよ！ <http://haskell.1045720.n5.nabble.com/Happy-Haskell-Programming-for-GHC-8-x-td5888460.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1546071512.026900",
        "text": "お返事ありがとうございます。\n- interoと共存できるのか\n- 共存しないなら、stackを使う前提ならどっちが 良い? のか\nなどを調べてみます。（どうであれ、igrepさんにおすすめしていただいたので試してみます） :bow:",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1546305918.027300",
        "text": "<@UF5BFGTDM> has joined the channel",
        "user": "UF5BFGTDM",
        "type": "message"
    }
]