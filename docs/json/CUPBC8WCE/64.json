[
    {
        "ts": "1708850624.063239",
        "text": "少し早いですが今日はここまでにしておきます。\ncabal replの件は、前回までに作ったものを実行してみたところ --build-tool-depends なんてオプション知らないと言われ、 <https://bsky.app/profile/igreque.info/post/3km7qbe4ijs2s> の通りちゃんと調査したはずなのにな...と絶望 :disappointed: しつつ build-tool-dependsについても .cabal ファイルを書き換えることで、libraryの情報を他のコンポーネントにコピーする方向で着手しています。\nmakeMistakesToLearnHaskellの進捗:\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/20ce57fa38600588f5217c93eab507e28dd9611c>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1708851653.064349",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1708852504.950659",
        "text": "4.6.4 Printing a list の Ex.4.25 の続きを進めました。\n解くのにすごく時間がかかってしまいましたが、一応リストを表示できるようになった模様です。\nただ、実行ステップ数もかなり増えてしまいました。これで正しいのか不安です。既存のテストプログラムが正しく動くかまでは確認できませんでした。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1708852826.316539",
        "text": "Hinze R, Magalhães J P, Wu N.  <https://www.cs.ox.ac.uk/ralf.hinze/publications/Sorting.pdf|A Duality of Sorts> §1 ~ §4:　読了 Insertion sort/Bubble sort が step 関数 swap を介し fold/unfold を用いて dual に実現され\nこれを範として一般化すると para/apo は (co)algebra のある step 関数を介し fold/unfold で dual に実現される\n競プロ典型 90 問 31 日目 - VS AtCoder（★6）イロイロと実例を試して Grundy 数を探している　どうせそれの mex なんでショ　と云う目論見",
        "type": "message",
        "user": "U584T7GAH"
    }
]