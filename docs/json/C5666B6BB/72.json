[
    {
        "ts": "1569686578.026200",
        "text": "添付の例で期待した結果が得られません\nターミナルで実行すると `[\"` とだけ表示され、あとは `Ctrl+C` するしかない状態になります\n最終行の `(c:r)` の部分が犯人らしいことは分かっているのですが\nどういうわけなのでしょうか",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569689522.026800",
        "text": "最終行\n```\n    (l,(c:r)) = break (== c) str\n```\nの左辺の `c` は `split` の引数の `c` ではなく、新たに束縛される変数の名前となります。そして、その新たに束縛された `c ` が `break (== c)` で参照されます。つまり、その行は\n```\n    (l,(d:r)) = break (== d) str\n```\nと書いたのと同じ意味になります。\n直し方ですが、この場合は `break` の結果の2番目の最初の文字は必要ないので、単にワイルドカードで受けて\n```\n    (l,(_:r)) = break (== c) str\n```\nと書けば良いでしょう。",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1569720556.027300",
        "text": "<@UNG6PFFUJ> has joined the channel",
        "user": "UNG6PFFUJ",
        "type": "message"
    },
    {
        "ts": "1569728119.028300",
        "text": "<@UNUGRB41J> has joined the channel",
        "user": "UNUGRB41J",
        "type": "message"
    },
    {
        "ts": "1569780114.028700",
        "text": "ここで訊くのが妥当か分からないのですが...\n`Text.Regex.Posix` を用いた正規表現についてです\n以下の最終行で値が返らないのは何故でしょうか？\n```\n&gt; import Text.Regex.Posix\n&gt; \"2019/09/30\" =~ \"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})\" :: Bool\nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/([0-9]{1,2})/([0-9]{1,2})\" :: Bool  \nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: Bool\nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"\n```\nなお、西暦や月を省略した日付にも対応するパターンを作りたいというところです",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569802374.029200",
        "text": "取り急ぎ。Text.Regex.Posixの正規表現エンジンがどうなってるかわからないので推測ですが、正規表現の組み合わせ爆発が起きているのではないかと思います。\nでも無限ループに入ってしまっているとしたらバグっぽいなぁ。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1569830097.029600",
        "text": "手元で試したところ、結果は返りました。どのバージョンをお使いですか？\n\n\n```\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n```",
        "user": "U6S3ARBDL",
        "type": "message"
    },
    {
        "ts": "1569830145.029800",
        "text": "因みにここでいう結果が返らないは空文字列が返されるという意味ですよね？",
        "user": "U6S3ARBDL",
        "type": "message"
    },
    {
        "ts": "1569830229.030100",
        "text": "私が手元で試したときは、無限ループにハマってしまってました。\n上げていただいた出力例が `\"` だけで終わっていることからして、satunさんの手元でもそうなっていると思われます。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1569830382.030300",
        "text": "肝心のパッケージのバージョンですが、私の手元では :point_down: でした。\n    regex-base-0.93.2\n    regex-posix-0.95.2",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1569830921.030500",
        "text": "同じく regex-base-0.93.2, regex-posix-0.95.2 です :thinking_face:",
        "user": "U6S3ARBDL",
        "type": "message"
    },
    {
        "ts": "1569926655.031900",
        "text": "バージョン同じくです\n値が返らないの意味は、igrepさんの仰る通りです",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569972013.032100",
        "text": "あとはOSと、GHCのバージョンでしょうかね... :thinking_face:\n私はWindows 10で、GHC は8.6.5です。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1570009380.032900",
        "text": "<@UP10DCE2J> has joined the channel",
        "user": "UP10DCE2J",
        "type": "message"
    }
]