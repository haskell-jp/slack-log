[
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1690088176.853889",
        "text": "toyboot4e です。 <https://atcoder.jp/contests/dp|EDPC> Y, Z 問題の解答を写経していきます"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1690092543.111139",
        "text": "今日のmakeMistakesToLearnHaskellの更新はここまで\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/5fcf6730512ecc745144d5b938a70b78eef64b9d>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1690095699.265139",
        "text": "今日はここまでにします。makeMistakesToLearnHaskell については :point_up: のとおりで、cabal replの件はcabalファイルのパーサーのバグを一部直しました。まだテストが全部は通らない！"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1690095790.880859",
        "text": "あと、今日の感想です。改めてシングルクォートを関数名の末尾に着ける習慣はやめるべきだと思いました..."
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1690095966.857669",
        "text": "<https://twitter.com/igrep/status/1683005836388601857>"
    },
    {
        "type": "message",
        "user": "UP6J2B1LL",
        "ts": "1690098184.194749",
        "text": "今日はここで抜けます，ありがとうございました！\n今日は<https://acatalepsie.fr/posts/overloading-lambda|Overloading the lambda abstraction in Haskell> で説明されていたテクニックを他のCartesianにも使えるよう一般化してみました．このテクニックをArrowised FRPのシグナル関数(SF)に適用するとflowの中でApplicative styleのFRPを使えるようなり興味深かったです（Portの各インスタンスが則を満たすかは未確認）．コードは<https://github.com/wasabi315/kitchen-sink/blob/main/haskell/flow/app/Arrows.hs>"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1690102876.348149",
        "text": ""
    },
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1690102964.767199",
        "text": "EDPC - Y の完全無欠な解答を作成しました。 Z には新規データ構造が必要らしく苦戦しています。"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1690103155.316639",
        "text": "\"融合変換による最適化の理論的基盤と正当性\"　読了　fusion transform　中間データがなく効率的かつ副作用がない　しかしその生成が容易ではないわけを Hylomorphism と Free Theorems から説く（ここは難解）\nAtCoder 鉄則本 A77 - Yokan Party　全く歯が立たない　味噌汁で顔を洗っておとといオイデ状態"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1690103462.894169",
        "text": "恥ずかしながら、今週もテキストの説明内容を理解しようとして終わってしまいました。\n「a list of slot numbers used by the ode」は、参照しているフレーム中の使用するクロージャの番号を集めたリスト？\n「find the free variables of the expression being compiled」は、実行中の一連のコードの中で参照している引数？\n自分にとっては、まだまだ先は長そうです。"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1690689672.673769",
        "text": ""
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1690689874.857109",
        "text": "\"Recursion schemeとHaskell\" <@U4KUNQF9N> <https://qiita.com/fumieval/items/01c7d7f93e261f843ef5>\nあとハシゴで AtCoder 鉄則本 C05 - Lucky Numbers <https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fc>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1690689917.964649",
        "text": "山本悠滋です。いつもどおりmakeMistakesToLearnHaskellとcabal replの件の続きをします！"
    },
    {
        "type": "message",
        "user": "UCM4G8PGW",
        "ts": "1690689969.280189",
        "text": "mrsekutです\nスタックしてるHaskell関連の記事消化と、問題を解く感じのやつをやります"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1690690344.807899",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\n今週も引き続き、Implementing Functional Languages:a tutorial の、\nMark1 TIM のガベージコレクション対応(スペースリーク解消)にトライしようと思います。"
    },
    {
        "type": "message",
        "user": "U02NV8V2EEQ",
        "ts": "1690691445.489449",
        "text": "ose20です。鉄則本の動的計画法の問題を解きます！"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1690692927.738269",
        "text": "gksatoです．久しぶりにお世話になります． <https://atcoder.jp/contests/abc312/tasks/abc312_h|ABC312-Ex> の別解(というか想定解)を提出した後，AtCoder 新環境の仕様公開用の記事を書こうと思います．"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1690699669.179169",
        "text": "今日はここまでにしておきます。あまり時間がとれず進まず。\ncabal replの件はもう少しでテストが通りそうです。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/e56e4c605d2348cb0299299aabc4f40c8d2b86b0>"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1690701766.168879",
        "text": "\"Recursion schemeとHaskell\"　10年前のコードのためか動かない　histo - error: Could not deduce (Comonad (Cofree f))　従って chrono も駄目　（ちなみに　fromList = ... の where は不要）　そこで Data.Fix で代用する　ただし名前は変更されている cata =&gt; foldFix, ana =&gt; unfoldFix, hylo =&gt; refold　後半の histo/futu/chrono は来週にする\nAtCoder 鉄則本 C05 - Lucky Numbers　あっけなく　AC　簡単だった\n本日はこれにて離脱"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1690703662.836439",
        "text": "今日はそろそろ抜けます。\n• 提出はできました(<https://atcoder.jp/contests/abc312/submissions/44101064|https://atcoder.jp/contests/abc312/submissions/44101064>)が、あんまり速くならなかったですね…。\n• 言語環境更新の記事については、方針にしばらく迷ったりダラダラしたりして時間を浪費しましたが、 <https://github.com/haskell-jp/atcoder-haskell-resources|https://github.com/haskell-jp/atcoder-haskell-resources> のフォークに必要なファイルを載せた上で記事からそれを参照することにしよう、と決めました。ここではとりあえずファイル生成まで。"
    },
    {
        "type": "message",
        "user": "UCM4G8PGW",
        "ts": "1690707386.659779",
        "text": "Exercismのeasy問題を1問解いて、その後はLensの復習をしてました\n\n主にこのtutorialを読んでましたが、Store, Comonad, Coalgebraが出てきてから追うのが大変になり、ChatGPTにも教えてもらいながら、読み進めてる途中です。知らん概念を学んでる最中に知らん概念が出てくると大変...\n<https://www.schoolofhaskell.com/user/tel/lenses-from-scratch>"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1690707663.176929",
        "text": ""
    },
    {
        "type": "message",
        "user": "U02NV8V2EEQ",
        "ts": "1690707712.522259",
        "text": "鉄則本のbitDPの問題を解いていました。STUArray や Vector を使った処理をすらすらかけるようになりたいです:muscle:"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1690707841.112209",
        "text": "恥ずかしながら、今週もテキストの説明内容を理解しようとして終わってしまいました。\n自分にとっては、まだまだ先は長そうです。"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1691208066.014869",
        "text": ""
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1691208096.264869",
        "text": "山本悠滋です。いつもどおりmakeMistakesToLearnHaskellとcabal replの件の続きをします！"
    },
    {
        "type": "message",
        "user": "UJBCU6PCH",
        "ts": "1691208671.502749",
        "text": "白鳥です。よろしくお願いいたします。Implementing functional languages: a tutorialのchapter 4 TIMを進めようと思います。"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1691221448.218669",
        "text": "間もなく用事なので今日はここまでにします。なかなか気乗りしなくてあまり進めませんでした:weary:\ncabal replの件: 先週までで全て通したテストケースの他、新しいテストを加えています。\nmakeMistakesToLearnHaskellの進捗: <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/472fd02c90d54f32f6d3ebf39cd51eae3532199e>"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1691226077.651689",
        "text": ""
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1691295583.082029",
        "text": "S.K.です。お世話になっております。\n土曜日開催を希望しておきながら、日曜日開催と思い込んでいて、参加申し込みしたのに無断欠席してしまいました。\n申し訳ありませんでした。"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1691296263.093279",
        "text": "みんな各人で勝手にやってる感じなんで、お気になさらず！ :+1:"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1691393649.720339",
        "text": "別にこの回参加してないからって投票するのをためらう必要はないのよ。参加するつもりがあるなら押しちゃってください！ :pray:"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1691899274.912649",
        "text": ""
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1691899370.614059",
        "text": "山本悠滋です。いつもどおりmakeMistakesToLearnHaskellの続きとcabal replの件の続きをやります。今日も17時前には終えます。"
    },
    {
        "type": "message",
        "user": "UCM4G8PGW",
        "ts": "1691899407.953109",
        "text": "mrsekutです\n今日も問題解いたり、Haskell関連の気になってる資料を読んだりします(recordに対するFunctorのようなものがあるのか知りたい。Homogeneous Records?)"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1691899437.298139",
        "text": "\"Visualizing Prequel Meme Prefix Tries with Recursion Schemes\" by Justin Le (<https://blog.jle.im/entry/tries-with-recursion-schemes.html>)\nあとハシゴで AtCoder 鉄則本 C13 - Select 2 (<https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_fk>)"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1691899883.892469",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\n今週も引き続き、Implementing Functional Languages:a tutorial の、Mark1 TIM のガベージコレクション対応(スペースリーク解消)にトライしようと思います。"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1691899886.899019",
        "text": "gksatoです．よろしくお願いします．ABC314-G を提出した後， AtCoder Haskell Judge の仕様についての記事を書きます．面倒で先延ばしにしてきましたが，もう実装されちゃったので，今日こそは…！！"
    },
    {
        "type": "message",
        "user": "U02NV8V2EEQ",
        "ts": "1691900685.614459",
        "text": "ose20です。鉄則本を解いていきます！できるだけ多くの問題を解くのを目標にします。"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1691912510.747559",
        "text": "間もなく用事なので今日はここまで。\n・cabal replの件は、前回落ちるようになったテストについて、大半を通せました。残りはちょっと型定義を変えたりする必要があり、少し掛かりそうですが今日中に終えられるはず\n・makeMistakesToLearnHaskellの更新:\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/5f5d70ecd61b6cfe3d59891eff104b182a2958ef>"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1691915055.702279",
        "text": "今日はここまで．<https://github.com/haskell-jp/atcoder-haskell-resources/commit/184a725cd2dfa67e753627ce95f6c58f3907bb19> です．インストールコマンドを `md` ファイルに転記した時点で終わってしまい，全然進んでないですね…．何だか見た目も変．あと，ABC314-Gの提出はできました(<https://atcoder.jp/contests/abc314/submissions/44550136>) が，何だかとっても遅いです…"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1691915634.439859",
        "text": "\"Visualizing Prequel Meme Prefix Tries with Recursion Schemes\"　読了　融合変換のFixの説明が白眉　“placeholder” variableを導入し再帰的データ型を分解…とか納得\nAtCoder 鉄則本 C13 - Select 2　AC　速度まずまず　コード長も最ゴルフ的\n本日はこれにて離脱"
    },
    {
        "type": "message",
        "user": "U02NV8V2EEQ",
        "ts": "1691916239.852899",
        "text": "鉄則本の問題A24, A25, B16を解きました。解法の正しさを証明したり、ミュータブルなデータの処理方法にハマったりしてあまり解けませんでしたが楽しかったです"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1691917267.776549",
        "text": ""
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1691917431.019089",
        "text": "スーパーコンビネータ単位で、コンパイル後の命令列を元に使用するスロット番号のリストを表示するようにしてみました。\n自分にとっては、まだまだ先は長そうです。"
    },
    {
        "type": "message",
        "user": "UCM4G8PGW",
        "ts": "1691917484.863989",
        "text": "Exercismの問題を数問解きました。\nそれとHomogeneousなデータ構造についても少し調べた。(TypeScriptに活かせるかなと思いながら調べてたけど、HaskellやPureScriptの良さによるものが大きいので応用するのは難しそうに感じた)"
    }
]