[
    {
        "ts": "1601993066.031900",
        "text": "Twitterでは既に言及しましたが、私が引き継いで実装を進めています。DuplicateRecordFieldsと共通のメカニズムを使っているため、PatternSynonymsから生成したレコードとはうまく協調しないなど完璧ではありませんが、早ければ次のGHC(9.2)には入ると見込んでいるのでお楽しみに <https://gitlab.haskell.org/ghc/ghc/-/merge_requests/4017>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1602001113.033100",
        "text": "<@U01CF0YMQTT> has joined the channel",
        "user": "U01CF0YMQTT",
        "type": "message"
    },
    {
        "ts": "1602026162.033400",
        "text": "この拡張個人的には嬉しいのですが、haddock上ではどのように区別されるのでしょうか？selectorがあるのかどうかドキュメントからわからないと混乱しそうだなと思いました。",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1602030660.034300",
        "text": "<@U01CTA51H5W> has joined the channel",
        "user": "U01CTA51H5W",
        "type": "message"
    },
    {
        "ts": "1602032263.034800",
        "text": "今の所区別する方法はなく、確かにHaddockにも何らかの変更が必要ですね。infixのように、横に灰色でその旨を表示するなどが考えられます",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1602055092.037100",
        "text": "LLVM要らずのArm64のコードジェネレーター、期待が高まりますね！\n<https://twitter.com/angerman_io/status/1313668369418088451>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1602059642.037400",
        "text": "RasPiもちゃんとサポートされそうです！\n<https://twitter.com/angerman_io/status/1313757310955651072>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1602198798.039000",
        "text": "今週のHaskell Weeklyから: Haskellは勉強した人が本番で採用するための情報を集めた本が出るそうです。\n<https://leanpub.com/production-haskell>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1602214390.039900",
        "text": "<@U01C9E3CY3C> has joined the channel",
        "user": "U01C9E3CY3C",
        "type": "message"
    },
    {
        "ts": "1602504087.041800",
        "text": "ghcideの開発状況。パフォーマンスの改善だけでなく、新しい機能ももりもり追加されているそうで。\nNeovim推しだけど、この辺の新しいLSPの機能を使おうと思ったらやっぱりVS Codeからが楽なんだろうなぁ。\n<https://www.tweag.io/blog/2020-10-07-ghcide-fellowship-summary/>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1602508039.044600",
        "text": "プレーンなデータ型宣言からHKDを生成するライブラリ、barbies-thをアップデートしました。細かいところですが、ConstraintsBおよびApplicativeBの定義をすべてTemplate Haskellで生成するようになったので、コンパイル時間や実行時のオーバーヘッドを気にせずに使えます(そして、別のライブラリの新機能の伏線でもあるので乞うご期待) <http://hackage.haskell.org/package/barbies-th-0.1.5/docs/Barbies-TH.html>",
        "user": "U4KUNQF9N",
        "type": "message"
    }
]