[
    {
        "ts": "1569686578.026200",
        "text": "添付の例で期待した結果が得られません\nターミナルで実行すると `[\"` とだけ表示され、あとは `Ctrl+C` するしかない状態になります\n最終行の `(c:r)` の部分が犯人らしいことは分かっているのですが\nどういうわけなのでしょうか",
        "user": "ULTN48U8Y",
        "type": "message"
    },
    {
        "ts": "1569689522.026800",
        "text": "最終行\n```\n    (l,(c:r)) = break (== c) str\n```\nの左辺の `c` は `split` の引数の `c` ではなく、新たに束縛される変数の名前となります。そして、その新たに束縛された `c ` が `break (== c)` で参照されます。つまり、その行は\n```\n    (l,(d:r)) = break (== d) str\n```\nと書いたのと同じ意味になります。\n直し方ですが、この場合は `break` の結果の2番目の最初の文字は必要ないので、単にワイルドカードで受けて\n```\n    (l,(_:r)) = break (== c) str\n```\nと書けば良いでしょう。",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1569720556.027300",
        "text": "<@UNG6PFFUJ> has joined the channel",
        "user": "UNG6PFFUJ",
        "type": "message"
    },
    {
        "ts": "1569728119.028300",
        "text": "<@UNUGRB41J> has joined the channel",
        "user": "UNUGRB41J",
        "type": "message"
    },
    {
        "ts": "1569780114.028700",
        "text": "ここで訊くのが妥当か分からないのですが...\n`Text.Regex.Posix` を用いた正規表現についてです\n以下の最終行で値が返らないのは何故でしょうか？\n```\n&gt; import Text.Regex.Posix\n&gt; \"2019/09/30\" =~ \"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})\" :: Bool\nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/([0-9]{1,2})/([0-9]{1,2})\" :: Bool  \nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"2019/09/30\"\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: Bool\nTrue\n&gt; \"2019/09/30\" =~ \"([0-9]{4})?/?([0-9]{1,2})/([0-9]{1,2})\" :: String\n\"\n```\nなお、西暦や月を省略した日付にも対応するパターンを作りたいというところです",
        "user": "ULTN48U8Y",
        "type": "message"
    }
]