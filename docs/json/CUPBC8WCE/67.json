[
    {
        "ts": "1718528538.444279",
        "text": "結局疲れちゃってmakeMistakesToLearnHaskellの続きしかできませんでした！GHCup v.s. Stackの件は後で！",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1718528965.093759",
        "text": "引数スタックの初期値について、とりあえず現状の自己流の処理のままとすることにしました。また、compileA についても Mark5 のままとすることにしました。\n実行結果を確認すると、一応グローバルフレームにスーパーコンビネータごとにクロージャが作られて、処理が進むにつれて評価結果に置き換えられているように見えるのですが．．．\n勉強会の際に達人の皆様の実装を拝見させていただいて修正しようと思います。その後、ex.4.28まで進めました。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1718529310.350459",
        "text": "Category Theory for Programmers (Part One: Part One: 7. Functors ~ 8. Functoriality) まで読了　ADT や多くのデータ構造が関手的であること　Haskell では Bifunctor/Profunctor によってそれらの合成も関手的であることが自然に導かれる　他方 C++ では病的実装が必要で　もはや見るのも痛々しい\n競プロ典型 90 問 52 日目 - Dice Product（★3）２回挑戦して WA 　Interactive は不慣れが露呈　トホホ",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1718529792.638539",
        "text": "本日のmakeMistakesToLearnHaskellの更新 <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/8dfc8de679ee5c0c3fffff920a703fad879c41e6>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1719115362.929289",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1719115664.995219",
        "text": "<https://bartoszmilewski.com/2015/03/13/function-types/|Category Theory for Programmers> (2014) Bartosz Milewski (Part One: 9. Function Types ~)\nあとハシゴで <https://atcoder.jp/contests/typical90|競プロ典型 90 問> 54 日目 - Takahashi Number（★6）",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1719116088.141249",
        "text": "山本悠滋です。今日は <https://haskell-jp.slack.com/archives/CR2TETE5R/p1718420231272899> のYeohさんとお話ししながらstackとGHCupの件に取り組みます。時間があったらmakeMistakesToLearnHaskellも進めます。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1719116526.811239",
        "text": "S.K.です。申し込むのを忘れてしまいましたが、参加させてください。よろしくお願いします。\n先週に引き続き、Implementing Functional Languages: a tutorial 4.7 Mark 6: Constant applicative forms and the code store の続きを進めていこうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1719133203.674869",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1719134241.509089",
        "text": "ex.4.28 の効果についてテストプログラムを使って確認していました。自分なりに納得したつもりですが、結構心もとないです。その後、ex.4.29 を進めて動作確認中です。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1719134477.213899",
        "text": "Category Theory for Programmers (Part One: Part One: 9. Function Types ~ 10. Natural Transformations) まで読了　functors と natural transforms で 2-category を成す　また morphisms の合成には vertical composition &amp; horizontal composition があるのが興味深い　\n競プロ典型 90 問 54 日目- Takahashi Number（★6）　２つのケースが　TLE 他のケースは通るのに　厳しい現実　これらは頂点数2000以上のクリーク　さて？",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1719141192.964919",
        "text": "外出していて遅くなってしまいましたが、Yeohさんと喋りながらGHCupとstackの問題について調べていました。\n残念ながら（？）懸念していた問題は再現しませんでした。どこかのバージョンで対策されたのかも知れません。\nそれから特に最新のGHCupだと、最初の設定のウィザードでstackがGHCをGHCupを通じてインストールするよう設定するか尋ねる機能が備えられており、デフォルトで問題を回避できるようになっているみたいなことがわかりました（今回はstackとGHCup両方が別々にGHCをインストールするよう設定した上で実験しています）。。\n後、makeMistakesToLearnHaskellの更新はこちら: <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/e75a21d0c9dd8bba07306313a122b4a1e0c0b71b>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1719720153.393459",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1719720245.735579",
        "text": "先週終えたと思っていたGHCup対stackの件について、改めて調査する必要が出てきたので調べます。後、時間が余ったらタイプセーフプリキュアの更新や、いつもどおりmakeMistakesToLearnHaskellの続きをします。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1719720278.748909",
        "text": "あ、山本悠滋です（一応自己紹介）",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1719720506.128009",
        "text": "こんにちは、てぴかと申します。\n前々々々回に引き続き、今回が2回目の参加になります。\n\n引き続き、<https://www.amazon.co.jp/Haskell%E3%81%A7%E4%BD%9C%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3-%E9%81%A0%E5%9B%9E%E3%82%8A%E3%81%97%E3%81%A6%E5%AD%A6%E3%81%B6Yesod%E5%85%A5%E9%96%80-%E6%8A%80%E8%A1%93%E6%9B%B8%E5%85%B8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA%EF%BC%88NextPublishing%EF%BC%89-%E5%B2%A1%E6%9C%AC-%E5%92%8C%E6%A8%B9-ebook/dp/B07GRRQZLZ/ref=sr_1_6?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=15U87U39HMYIH&amp;dib=eyJ2IjoiMSJ9.-PRYfhFTK0MF_US6B-BXJU9gm-SHFKzMJuILTzW6XkvzoYrvtXxmNWdX1Uc2ODOffkjd3iANqOYGxar4ja19MsIk9x6DDDkvTCGGKpULNMRjx5_5uPkvFOpgVRsxHCbSh4HfJXifp_7vLlpuddCRFHh-4ICVisyBR_h4lH_ERbmoUTPkmQMQ3HJ-BOi3Z6yThXvTJMMijZKv5iStIUIk2Z6Uc7vd--YERy7FgCjfrKeVXyaT4b7rAqZk02bC74H-dCQrR52YpUy6TVwX_4UL8S53IaE537pmsy1zSJBMNqU.l-lsFMEmEvbWI1eP5YHczOWGrIIgpHljtbINrFHNaVE&amp;dib_tag=se&amp;keywords=yesod&amp;qid=1717319601&amp;sprefix=yesod%2Caps%2C1113&amp;sr=8-6|こちら>を読み進めて行きたいと思います。",
        "type": "message",
        "user": "U075MF7TX8T"
    },
    {
        "ts": "1719720688.155189",
        "text": "<https://bartoszmilewski.com/2015/04/15/category-theory-and-declarative-programming/|Category Theory for Programmers> (2014) Bartosz Milewski (Part Two: 11. Declarative Programming ~)\nあとハシゴで <https://atcoder.jp/contests/typical90|競プロ典型 90 問> 56 日目 - Lucky Bag（★5）",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1719721008.509359",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\n先週に引き続き、Implementing Functional Languages: a tutorial 4.7 Mark 6: Constant applicative forms and the code store の、続きを進めていこうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1719727086.331609",
        "text": "toyboot4e です。 Mutable な splay 木を作るための arena (空きスロットを連結リストで管理した `Vector`) を作ります",
        "type": "message",
        "user": "U03H9PH8FRP"
    },
    {
        "ts": "1719734602.722389",
        "text": "Arena を作りましたが、必要無かったです:sweat_smile: お先に〜",
        "type": "message",
        "user": "U03H9PH8FRP"
    },
    {
        "ts": "1719738033.085359",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1719738281.115979",
        "text": "Category Theory for Programmers (Part Two: 11. Declarative Programming ~ 12. Limits and Colimits) まで読了　たとえば object a と b からそれらの product を考えるとき　それを 2-category から圏 C へ functor と見るのがいかにも圏論的で感心した　また limit / colimit も丁寧で分かりやすい\n競プロ典型 90 問 54 日目-56 日目 - Lucky Bag（★5）素直にやれば TLE になってしまう　NxS 程度の DP に持ち込めばよさそうだが　時間切れ",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1719738330.869899",
        "text": "GHCup対stackの件のために、VS Code on Docker on WSL 2なる不思議な環境を作ってました。偉い時間かかった上に、なんかmacOSでやったときと挙動が違うのが辛かったです。\nあと、タイプセーフプリキュアの更新をする前に、LTS Haskellのバージョンを上げたところ依存しているmonad-skeltonというパッケージが新しいbaseパッケージに対応できていなかったため、monad-skeltonの代わりにtransformersパッケージを使ってPreCure Monadを書き直しました。当初からmonad-skeltonを使うまでもないだろうことは分かっていたため結果オーライです。肝心の、タイプセーフプリキュアの更新はまだ途中です！",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1719738504.919289",
        "text": "Yesodを勉強するつもりが、なぜかTemplate Haskellについて勉強していました。\nしかし、Template Haskellを理解すると、Yesodの使い方が理解できるような気がしてきました。\n\n一方`stack new MY_PROJECT_NAME yesodweb/minimal`でインストールしたプロジェクトの`src/Foundation.hs`を、\nVSCodeで開くとエラー表示される箇所があります。\nしかし、そこはYesodのことをもう少し理解できたら解消方法が見えてくるのかな？と思っています。",
        "type": "message",
        "user": "U075MF7TX8T"
    },
    {
        "ts": "1719738689.114679",
        "text": "ex.4.29 の効果についてテストプログラムを使って確認していました。\n今日は確認だけで終わってしまいました。結構時間がかかってしまっています。お恥ずかしい。\nex.4.29 の対応により、トータルのステップ数は減っているようですが、途中では ex.4.29 対応前の方が短い箇所もあり、正しく対応できたのかまだ確認できていません。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    }
]