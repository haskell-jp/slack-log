[
    {
        "ts": "1613187519.058400",
        "text": "Haskellで型クラス実装されてなくても動くような、いわゆるSoft Constraintsの言語拡張って難しいんでしょうか？\n```(!) :: (Show? key, Ord key) =&gt; Map key value -&gt; key -&gt; value\n(!) m key = case lookup key m of\n  Just value -&gt; value\n  Nothing -&gt; case show? of\n    Nothing -&gt; error $ \"no value for key\"\n    Just fshow -&gt; error $ \"no value for key: \"++ fshow key\n\n&gt;&gt;&gt; empty ! \"hoge\"\nError: no value for key: \"hoge\"\n&gt;&gt;&gt; newtype T = T Int deriving(Eq,Ord)\n&gt;&gt;&gt; empty ! (T 10)\nError: no value for key```",
        "user": "UDUBKLQMD",
        "type": "message"
    },
    {
        "ts": "1613187902.059600",
        "text": "あったら便利そうですね。力技ですが <https://github.com/mikeizbicki/ifcxt|https://github.com/mikeizbicki/ifcxt> こういうのはあります",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1613189217.061700",
        "text": "ifcxt面白いですね。IfCxtのインスタンスをGHCが自動生成するようにするのが筋が良さそうな気がしますね。",
        "user": "UDUBKLQMD",
        "type": "message"
    },
    {
        "ts": "1613213514.063500",
        "text": "こういうのちょくちょく欲しくなりますね",
        "user": "U4L0B71L1",
        "type": "message"
    }
]