[
    {
        "ts": "1637028445.091600",
        "text": "macOSのFirefoxもChromeも、GHC 9.0.1のソースファイルが「危険だ！」と言ってダウンロードさせてくれない。。\n<https://downloads.haskell.org/ghc/9.0.1/ghc-9.0.1-src.tar.xz>",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1637028524.092300",
        "text": "手元のWindowsのFirefoxでも同じことが起きました :cold_sweat:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1637028729.092700",
        "text": "ドメインが乗っ取られているかとか、判断できないなぁ。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1637028959.093000",
        "text": "さっと中身を覗いた感じは普通なんですけどね...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1637063234.095600",
        "text": "ゲッター・セッターの関係においてDistributiveと対をなす構造、名付けてLogisticを発見したので、ライブラリとしてリリースしました。data V3 a = V3 a a aのようなデータ型からジェネリクスでインスタンスを導出し、let V3 f g h = settersとすると、各フィールドを更新する関数f, g, hが得られます。考察対象としても面白いですが実用性もありそうです <https://hackage.haskell.org/package/data-functor-logistic>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1637068960.101000",
        "text": "<https://zenn.dev/mod_poppo/articles/ghc-8-10-and-9-0> 今更感がありますが書いてみました。",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1637073393.101900",
        "text": "ありがたやありがたや",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1637208670.105000",
        "text": "Hackage の trustee の人だと任意のパッケージのリビジョン上げれるんですね\n<https://hackage.haskell.org/package/Glob-0.10.2/revisions/|https://hackage.haskell.org/package/Glob-0.10.2/revisions/>\n<https://hackage.haskell.org/packages/trustees/|https://hackage.haskell.org/packages/trustees/>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1637239044.106100",
        "text": ":tada: <https://discourse.haskell.org/t/ann-haskell-language-server-1-5-0-release/3683>\n&gt; As we noted in the previous release we have dropped support for ghc versions 8.6.4, 8.10.2, 8.10.3, 8.10.4 in this release \n結構アグレッシブにサポートを切っていく方針なんですね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1637250429.107800",
        "text": "&gt; Hackage \nの trustee の人だと任意のパッケージのリビジョン上げれるんですね\n&gt; \n&gt; \n<https://hackage.haskell.org/package/Glob-0.10.2/revisions/|https://hackage.haskell.org/package/Glob-0.10.2/revisions/>\n&gt; \n&gt; \n<https://hackage.haskell.org/packages/trustees/|https://hackage.haskell.org/packages/trustees/>\n私のパッケージも上げられてびっくりしましたねー",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1637286664.109500",
        "text": "GHC 9.0.1 on macOS は、Haskellコードをコンパイルしている途中で刺さることがあります。9.0 の最新のブランチをビルドして使うと再現しないので、9.0.2 で直ると思います。僕のせいで入り込んだ、IO manager のバグも修正されるでしょう。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1637286797.110000",
        "text": "「刺さる」とは？フリーズするってことですか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1637287045.110300",
        "text": "<https://qiita.com/t_nakayama0714/items/478a8ed3a9ae143ad854> に用例が。",
        "user": "U578W9676",
        "type": "message"
    },
    {
        "ts": "1637287128.111500",
        "text": "ありがとうございます。知らなかったー",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1637287132.111600",
        "text": "stuck (stickの過去分詞) の訳語だと思いますが",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1637287239.112300",
        "text": "「○○がスタックする」なら通じる人は結構いるんじゃないかと",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1637287307.113000",
        "text": "「刺さる」は、処理が止まると言う意味です。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1637287320.113300",
        "text": "ネットワーク用語かな？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1637287667.115800",
        "text": "stick が「刺す」とか「刺さる」という意味で、その過去分詞の stuck が「止まる」「にっちもさっちも行かなくなる」という意味で使われている( The car was stuck in the snow. とか)ので、そこから派生したんだと思います。 英語での用例: <https://www.quora.com/Why-does-my-external-drive-get-stuck-on-certain-files-when-Im-backing-stuff-up>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1637287719.116400",
        "text": "ハードディスクが「刺さる」という言いかたもしばしば聞きますよね。",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1637287838.118200",
        "text": "そういえばフルスタックエンジニアをfull stuck engineerと綴ってしまって笑いものなった例がありましたね！ :dagger_knife:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1637288046.119700",
        "text": "システム(プログラミング)側に寄る程よく聞くようになる表現て気もするけど気のせいかもしれない",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1637288291.121200",
        "text": "90年頃（私が学生の頃）には使われていたように思います。「NFSが刺さった‥」みたいなところから覚えました。（助手がWIDEの人だったので）WIDEの人がいい出したのか？と思っていましたが、本当のところはわかりません :slightly_smiling_face:",
        "user": "UMTRA1VHU",
        "type": "message"
    },
    {
        "ts": "1637288720.122100",
        "text": "「通信用語の基礎知識」だと1999年にエントリが作られてますね <https://www.wdic.org/w/WDIC/%E5%88%BA%E3%81%95%E3%82%8B>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1637288997.123100",
        "text": "まさにその用法でWIDE用語集にも載ってます 「NFSサーバがパニックして，lsコマンドが刺さった．」 <http://member.wide.ad.jp/~sano/glossary.html#L11>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1637317607.124900",
        "text": "まだリリースされてないバージョンを依存の上限に指定するの、意味あるのかなあ（と思いながらがっつり削除する PR 作った\n<https://github.com/Deewiant/glob/pull/44>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1637645389.141100",
        "text": "デフォルト値が入ったレコードに必須のフィールドを混ぜるテクニック。ネストした構造にも使える　<https://twitter.com/fumieval/status/1463009297642655746>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1637749616.142400",
        "text": "<@U02NV1XHYBT> has joined the channel",
        "user": "U02NV1XHYBT",
        "type": "message"
    }
]