[
    {
        "text": "こんなグローバル変数作るための `unsafePerformIO` は許せるかどうか\n```foo = unsafePerformIO $ newIORef Foo```\n",
        "type": "message",
        "ts": "1671012275.019769",
        "user": "U4L0B71L1"
    },
    {
        "text": "デバッグ用のライブラリーで見たことあります",
        "type": "message",
        "ts": "1671012712.316609",
        "user": "U4LGTMTMK"
    },
    {
        "text": "グローバルといってもpureな関数ではその値は読めなくて、IOモナドでは読めるので、必要が有ればいいといいたいですね。",
        "type": "message",
        "ts": "1671012805.852519",
        "user": "U74KTAG0N"
    },
    {
        "text": "他の方法よりも利便性が圧倒的に高いような用途であって、\n• NOINLINEなどの必要なpragmaをつける\n• 型を単相にする\nなどの必要な安全策を取るのであればアリだと思ってます。",
        "type": "message",
        "ts": "1671012960.888239",
        "user": "UGM9F7XQS"
    },
    {
        "text": "ありがとうございます！\n前はナシかな～と思ってたんですけど、最近はまあいいかみたいな気持ちで揺れてたので聞いてみました",
        "type": "message",
        "ts": "1671018134.227559",
        "user": "U4L0B71L1"
    },
    {
        "text": "コマンドラインオプションの情報とかは、プログラム実行中にはただの定数なのに IO モナドが必要というジレンマがあるのでこの書き方がぴったりくる気がしますね\n(<@U56MBRKR9> さんの古い記事にもありました <https://kazu-yamamoto.hatenablog.jp/entry/20090107/1231318138> )。",
        "type": "message",
        "ts": "1671060878.839309",
        "user": "UF8SE896V"
    },
    {
        "text": "うーん、optparse-applicativeとかで普通にunsafePerformIOを使わずにコマンドラインオプションのパースができていることを考えると、ちょっとその情報は古いと思いますね",
        "type": "message",
        "ts": "1671062715.940989",
        "user": "U4LGTMTMK"
    },
    {
        "text": "情報ありがとうございます。なんか古そうだなとは思っていたので、新鮮な情報がいただけるのはありがたいです。\nでも、問題の本質は「オプションのパース」の部分ではなくて、「パースされた結果をプログラム中の任意の場所で参照したい」の方なので、まだ unsafePerformIO の利便性はあるのでは？という意図でした",
        "type": "message",
        "ts": "1671066853.559919",
        "user": "UF8SE896V"
    },
    {
        "text": "そういう目的でしたら `ReaderT IO` の出番ですね。そりゃぁ `unsafePerformIO` でグローバル変数を作る方が楽でしょうけど、普通のグローバル変数同様テストしやすさや再利用性が落ちますし、よほど手を抜きたいとき以外は避けたい手段ですね",
        "type": "message",
        "ts": "1671068251.493049",
        "user": "U4LGTMTMK"
    },
    {
        "text": "最初はとりあえずハードコーディングでグローバル定数で記述していた設定値を、あとからコマンドラインパラメータ化する、とかいうときに、 ReaderT IO 化すると書き直す場所が多くて大変ではないでしょうかね？",
        "type": "message",
        "ts": "1671068561.963279",
        "user": "UF8SE896V"
    },
    {
        "text": "そこはトレードオフですね",
        "type": "message",
        "ts": "1671068680.155369",
        "user": "U4LGTMTMK"
    },
    {
        "text": "unsafePerformIO のグローバル変数がどこらへんまで許せるかどうかという文脈だったので、コマンドラインパラメータを運ぶのは比較的許容しやすいんじゃないかなあ、という例でございました^^;",
        "type": "message",
        "ts": "1671069012.450199",
        "user": "UF8SE896V"
    },
    {
        "text": "僕たちが作っているdnsextでは、Showのインスタンスを拡張可能にするために、黒魔術を使っています。\n<https://github.com/kazu-yamamoto/dnsext/blob/main/dnsext-types/DNS/Types/Type.hs#L124>",
        "type": "message",
        "ts": "1671069109.880769",
        "user": "U56MBRKR9"
    },
    {
        "text": "なんと言いましても、GHCの実現に unsafePerformIO が多用されているので、Haskellerが高尚なことを言うのは、ブーメランだと思われます。。。",
        "type": "message",
        "ts": "1671069377.065089",
        "user": "U56MBRKR9"
    },
    {
        "text": "それこそ、別にunsafePerformIOに限らずGHCが汚いことをしている分せめて我々ユーザーはちゃんとしよう、とも言えるかと。その手の主張をし出すと大抵の「高尚な努力」を否定することになるので不快です :disappointed:",
        "type": "message",
        "ts": "1671070275.246909",
        "user": "U4LGTMTMK"
    },
    {
        "text": "すいません。\n実際、以前にHaskellerがOCamlerからブーメランを受けたことがあるので。。。",
        "type": "message",
        "ts": "1671070926.030579",
        "user": "U56MBRKR9"
    }
]