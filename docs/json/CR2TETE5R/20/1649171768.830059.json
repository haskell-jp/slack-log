[
    {
        "text": "```data Element x = Group [x] | Individual x\n\ngroupMached ::  x =&gt; (x -&gt; Bool) -&gt; [x] -&gt; [Element x]\ngroupMached function list =  ????\n\ngroupMached odd [1,4,5,1,3]  -- 結果 [Group [1], Individual 4, Group [5,1,3]]```\nリストの要素の中でfunctionによってTrueになり，隣接している者同士でグループを作る関数を定義しようとしています．なかなか思いつきません．ご教示いただけると嬉しいです．",
        "type": "message",
        "ts": "1649171768.830059",
        "user": "U01TZ1XM7MG"
    },
    {
        "text": "全く同じではないですが、似たようなことをしているであろう `groupBy` 関数が参考になると思います。\n<https://hackage.haskell.org/package/base-4.16.1.0/docs/Data-List.html#v:groupBy>\nリンク先の右端にある「Source」ボタンをクリックするとソースコードが見えます。",
        "type": "message",
        "ts": "1649203152.747759",
        "user": "U4LGTMTMK"
    },
    {
        "text": "ありがとうございます！どう表現したらいいのかわからない部分がちょうど実装されていました．",
        "type": "message",
        "ts": "1649252513.828609",
        "user": "U01TZ1XM7MG"
    }
]