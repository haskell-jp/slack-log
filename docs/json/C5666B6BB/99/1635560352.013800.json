[
    {
        "ts": "1635560352.013800",
        "text": "既出かもしれませんが\nHaskellでパターンマッチを実行するとき想定外のパターンはエラー（コンパイルエラーか実行時エラー）にしたりすることはできるのでしょうか？\nよくパターンマッチを使うと以下のような警告が出るのですが、そもそもありえないパターンが入ってたりするのです。\n```Warning: Pattern match(es) are non-exhaustive```",
        "user": "U02KK6NUFFE",
        "type": "message"
    },
    {
        "ts": "1635561483.015300",
        "text": "型としてありえないものはコンパイルエラーになりますが値としてありえないものはコンパイルエラーにはなりませんね\n`error` 関数を使うなどして実行時エラーにしたりします",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1635562273.016200",
        "text": "残念ながら「そもそもありえないパターン」かどうかをコンパイラーは判断できないので、kakkunさんの仰るとおり、あり得ないパターンの箇所で `error` 関数などを使って実行時エラーにするしかないです。「Assertion failure」とか「Impossible」みたいなメッセージで「このエラーが起こると言うことは何かおかしい！バグかも！」ということを明示するのがおすすめです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1635572207.017300",
        "text": "なるほど:thinking_face:\nとすると出来るだけ型にしといて、型にできないところはerror使う感じにしようかな\nありがとうございます",
        "user": "U02KK6NUFFE",
        "type": "message"
    }
]