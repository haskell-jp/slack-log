[
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1674372468.666109",
        "text": "`ghc-bignum` ってデフォルトが `native` になってますけど， これを `gmp` にしようと思ったら `ghcup` でGHCをインストールする時点でなんとかしないといけないですか…？"
    },
    {
        "type": "message",
        "user": "U04L725J90T",
        "ts": "1674523876.552029",
        "text": "<@U04L725J90T> has joined the channel"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1674613262.313509",
        "text": "GHC 9.4 で stdc++ に依存するようになってしまったようですが、その理由はなんでしょうか？\ncentos だと、configure が stdc++ を見つけられずに、インストールできません。。。"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1674682624.529619",
        "text": "<@U04LCUXALJ2> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04LKE5ECA2",
        "ts": "1674770921.336499",
        "text": "<@U04LKE5ECA2> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04LSF55D9U",
        "ts": "1674891407.269969",
        "text": "<@U04LSF55D9U> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04MB7BQ50T",
        "ts": "1675173538.017639",
        "text": "<@U04MB7BQ50T> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04MBBNV5QB",
        "ts": "1675174781.070379",
        "text": "<@U04MBBNV5QB> has joined the channel"
    },
    {
        "type": "message",
        "user": "UA6CQEGR5",
        "ts": "1675217802.518109",
        "text": "<@UA6CQEGR5> has joined the channel"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1675566381.795629",
        "text": "<https://haskell-jp.slack.com/archives/CL3AXB1AL/p1675402815431589> （at <#CL3AXB1AL|atcoder-lang-update>)\n&gt; がんばりました。直接installしていない物も含む、全transitive dependencyのライセンスのリスト:　<https://docs.google.com/spreadsheets/d/1HXyOXt5bKwhKWXruzUvfMFHQtBxfZQ0047W7VVObnXI/edit#gid=1835616968&amp;range=E5>\nこの件で，あるパッケージ群の全transitive dependenciesからlicenseを取ってくる作業をしたのですが，私の知識の範囲でできる限り車輪の再開発を避けて:\n1. cabal-installにdependencyを解いてもらい，\n2. それをもとにHackage API を叩いて `.cabal` ファイルをもらってくる，\n3.  `Cabal-syntax` パッケージを使ってその `.cabal` ファイルをパースしてライセンス情報を取る\nみたいな手段を取りました．この1.に関して質問させてください．\n\nここでやりたいことは，「ビルドやインストールはしなくていいけど，現環境から見た，既ビルドのものも含めた全transitive dependenciesのリストが欲しい」ということになります．このために今回は結構乱暴な手段を取りました．Docker環境があったので，まっさらなGHC+Cabalをghcupでインストールしたのち，対象のパッケージ群を全部 `cabal install --lib` して `ghc-pkg　list` でインストールされている全パッケージのリストを取ってきたのです．しかし，これでは余計なパッケージまで見ている気がしますし，もうちょっとなんとかならんのか，という気がします．\n\n色々いじっていると，適当に一個だけcabal packageを持つcabal projectを作り，Cabal packageの `.cabal` ファイルは目的とするパッケージ群をdependenciesに持つ library だけを持つようにし，project の `cabal.project` にはそれらのライブラリについて設定すべきフラグを持たせるようにすると，  `cabal freeze` で `cabal.project.freeze` がなんかそれっぽいファイルになるのですが，これで合ってるのでしょうか…？ `cabal freeze` が良い方法なのか，あるいは別の方法があればお教えいただければありがたいです．"
    },
    {
        "type": "message",
        "user": "ULTBB86UC",
        "ts": "1675937034.855919",
        "text": "RIOパッケージをbase代替として取り入れています。\n`RIO.Utf8Builder` の値を _ロギング用途ではなく_ 標準出力に吐き出すには何を用いるのが良いのでしょうか？\n具体的にやりたいこととしては、情報を標準出力に出力するCLIツールを作ろうとしています。\n今はとりあえずTextやByteStringに変換した後に `putStrLn` 等で出力をしているのですが、他により良い方法があったりしますか？\n\n【現状の方法だった場合: ByteStringにするべきかTextにするべきか】\nText or ByteStringへの変換をする場合、どちらの方が良いとかあるでしょうか？それともあまり考えなくて良いのでしょうか\n最初は`textDisplay` が用意されていることから、Textを使うべきなのかな？と思っていました。\nしかし、`RIO.Utf8Builder`が内部的には `Data.ByteString.Builder.Builder` を用いているようなのでByteStringの方が良いのかな？とも考えて悩んでいます。"
    },
    {
        "type": "message",
        "user": "U04NS1ZNSJK",
        "ts": "1676140328.299019",
        "text": "<@U04NS1ZNSJK> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04P4FYK221",
        "ts": "1676196208.626109",
        "text": "<@U04P4FYK221> has joined the channel"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1676619242.957009",
        "text": "GHCの管理が phabricator から gitlab になり、例えば\n<https://phabricator.haskell.org/D4884>\nのようなリンクが追えないのですが、gitlabへはどう変換されているのでしょうか？"
    },
    {
        "type": "message",
        "user": "U015L5JEP8D",
        "ts": "1676844723.772979",
        "text": "代替Preludeを使いたいと考えているのですが、新しくてまとまっている比較記事などはありますか？"
    },
    {
        "type": "message",
        "user": "U57CUMWQ6",
        "ts": "1676912908.924149",
        "text": "GHC 9からTemplate Haskellでinstanceを定義する時に相互参照が出来なくなってコンパイルが通らなくなったという問題を抱えているのですが、この破壊的変更がどこかにまとまってる場所や、より良い回避方法を知っている方は居ますか?\n具体的にどういうことが起きているのかは自分のサイトに書きました。\n<https://www.ncaq.net/2023/02/21/01/48/48/|GHC 9からTemplate Haskellでinstanceを定義する時に相互参照が出来なくなった - ncaq>"
    },
    {
        "type": "message",
        "user": "U4KU9ABL0",
        "ts": "1677283347.252899",
        "text": "言語拡張 CPP を指定したソースコードの確認のために、CPPの処理だけが済んだ段階のソースコードを出力したいと思うのですが、ghc オプション指定でできないものでしょうか？"
    },
    {
        "type": "message",
        "user": "U04RTA85CH3",
        "ts": "1677690080.128899",
        "text": "<@U04RTA85CH3> has joined the channel"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1678031344.687819",
        "text": "ふと思ったのですが，GHCの compiler backend (LLVMとかNCGとか)って機械語吐くのに必要なんだから，ライブラリだけビルドする時って無関係，なんでしたっけ…？ こういう時どういう資料を漁ればいいかよくわからなくなってしまって．"
    },
    {
        "type": "message",
        "user": "U04T6H7Q56W",
        "ts": "1678377424.257919",
        "text": "<@U04T6H7Q56W> has joined the channel"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1678493250.805059",
        "text": "あるpackage の executable 中に入っている module の関数が欲しくて、copy-and-paste するつもりなのですが、こういう時って LICENSE ファイルを複数作るか、追記するか、どうするのが普通なんでしょう？"
    },
    {
        "type": "message",
        "user": "U04TL7B4RK8",
        "ts": "1678767625.971099",
        "text": "<@U04TL7B4RK8> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04UTFS57A5",
        "ts": "1679039675.127259",
        "text": "<@U04UTFS57A5> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04UUR7L093",
        "ts": "1679400116.294859",
        "text": "<@U04UUR7L093> has joined the channel"
    },
    {
        "type": "message",
        "user": "U050T9D1RCH",
        "ts": "1679925721.880759",
        "text": "<@U050T9D1RCH> has joined the channel"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1680184874.825459",
        "text": "<ttps://haskell-jp.slack.com/archives/CL3AXB1AL/p1680155886899719|https://haskell-jp.slack.com/archives/CL3AXB1AL/p1680155886899719> の関係で `strict-wrapper` のコード (<https://github.com/tomjaguarpaw/strict-wrapper/blob/48a2695995a4c4c9d853b5f45175f6cf1241ebb2/lib/Data/Strict/Wrapper.hs#LL223-L262>) を読んでたんですが，ここの `strict` と `unstrict` 関数が怖いことをしていると思うので，皆様のご意見を伺いたいです．参照先のコードは大体\n\n```data SPair a b = SPair !a !b\n\nstrict :: (a, b) -&gt; SPair a b\nstrict x = case x of\n  (!_, !_) -&gt; unsafeCoerce x\n\nunstrict :: SPair a b -&gt; (a, b)\nunstrict = unsafeCoerce```\nのようなことをしており，これって `SPair a b` と `(a, b)` の runtime representation が完全に一致しているということを主張している気がするんですが，そんな保証ってありましたっけ…？"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1680423862.784269",
        "text": "GHCupって、使用するGHCなどのバージョンをディレクトリーによって置き換える機能はないのでしょうか？ざっとドキュメントを読んだ限り見当たらなかったので。GHCはcabal.projectなどで簡単に切り替えられるからいいんですけど、ghcupでインストールされるhaskell-language-serverがバイナリーを付けてくれないバージョンだったもので..."
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1680424405.298879",
        "text": "IDEが用いるバージョンの固定であれば、VSCodeならhaskell.toolchain 項目で具体的なバージョン集合を指定できますね。HLSの公式バイナリが対応していないバージョンのGHCを使う場合はghcup compile機能で自前でHLSをビルドして、そのカスタムビルドのバージョン文字列を指定して使ったりしてます。\n他のエディタでも多分使えるはずだとは思いますが使ったことがないのでわからないですね"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1680964474.946189",
        "text": "ghc-heapってbundled versionでないものを使うと不具合は起こるのでしょうか…？ なんの気なしにdependencyに入れたらcabal-install が GHC-9.4.4 上に ghc-heap-9.6.1 を引っ張ってきている…"
    },
    {
        "type": "message",
        "user": "U4KU9ABL0",
        "ts": "1681290375.582189",
        "text": "Windows 11 の WSL Ubuntu に ghcup で、stack を含む開発環境をセットアップしたのですが、stack new hoge をすると\n```Downloading template new-template to create project hoge in directory hoge/...\n\nError: [S-1688]\n       Stack failed to download the template new-template from\n       <https://api.github.com/repos/commercialhaskell/stack-templates/contents/new-template.hsfiles>.\n\n       While downloading, Stack encountered an HTTP error. Stack made the request:\n\n       Request {\n  host                 = \"<http://api.github.com|api.github.com>\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = [(\"User-Agent\",\"The Haskell Stack\")]\n  path                 = \"/repos/commercialhaskell/stack-templates/contents/new-template.hsfiles\"\n  queryString          = \"\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n  proxySecureMode      = ProxySecureWithConnect\n}\n\n\n       and the content of the error was:\n\n       ConnectionTimeout```\nとなります。wsl あるいは windows 11 の問題のような気もしますが、もし、なにか対処法にヒントがあれば教えていただけると幸いです。\nネットワークは繋がっていますし、wget で <https://api.github.com/>... にも繋がるように見えています。"
    },
    {
        "type": "message",
        "user": "U052LCRM2GP",
        "ts": "1681367761.457429",
        "text": "<@U052LCRM2GP> has joined the channel"
    },
    {
        "type": "message",
        "user": "U053MT1AGTW",
        "ts": "1681741820.333629",
        "text": "<@U053MT1AGTW> has joined the channel"
    },
    {
        "type": "message",
        "user": "U053GLH63LN",
        "ts": "1681791728.925269",
        "text": "<@U053GLH63LN> has joined the channel"
    }
]