[
    {
        "ts": "1543826850.007000",
        "text": "うまくいったようです。ありがとうございます！ :clap:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544168335.008100",
        "text": "<@U9FAYSN12> has joined the channel",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1544181931.008400",
        "text": "<@UEJUFM013> has joined the channel",
        "user": "UEJUFM013",
        "type": "message"
    },
    {
        "ts": "1544200877.008800",
        "text": "<@UD2G8DC4Q> has joined the channel",
        "user": "UD2G8DC4Q",
        "type": "message"
    },
    {
        "ts": "1544247441.009100",
        "text": "<@UEPSSLZ9D> has joined the channel",
        "user": "UEPSSLZ9D",
        "type": "message"
    },
    {
        "ts": "1544356253.009400",
        "text": "<@UEP6QNUG2> has joined the channel",
        "user": "UEP6QNUG2",
        "type": "message"
    },
    {
        "ts": "1544361151.009700",
        "text": "<@UEP79DXM0> has joined the channel",
        "user": "UEP79DXM0",
        "type": "message"
    },
    {
        "ts": "1544401078.010000",
        "text": "<@UEQPMGVSS> has joined the channel",
        "user": "UEQPMGVSS",
        "type": "message"
    },
    {
        "ts": "1544590221.011000",
        "text": "Textなどをコンソールに出力する際に通常だと\"\\n\"や\"\\t\"があるとnewlineやtabに変換されますが、\nそれををそのままプリントする方法ってありますか？\n例えば \"Hello \\n World\"を出力する際に \"\\n\"をそのままにして、\"Hello \\n World\"として出力するみたいな。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1544590280.011100",
        "text": "`show` でそうなりませんかね",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544590296.011300",
        "text": "`show` じゃダメってことですよね。細かいニーズを考えたら作るしかないと思います。。。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544590310.011500",
        "text": "そうなのかー",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544590359.011700",
        "text": "いや、私が深読みしすぎているだけかもしれないですが。。。 :sweat_drops:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544590397.011900",
        "text": "jsonにするとか？",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1544590454.012200",
        "text": "なるほど、一度JSONにしてから出力すればいいのか！",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1544590517.012400",
        "text": "&gt;&gt;&gt; &gt; putStrLn $ show (\"\\n\" :: Text)\n\"\\n\"",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544590680.012600",
        "text": "JSONへの変換でよくてshowじゃダメな理由って何ですか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544590728.012800",
        "text": "`show` がダメというのは <@U4LGTMTMK> さんの誤読なのでは……？",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544590830.013000",
        "text": "とくにないです。。\n`show`でくるんだらできました。。自分は疲れてるかもしれない。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1544590872.013300",
        "text": "ありがとうー",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1544605206.013900",
        "text": "蛇足だとは思いますが、 `\"\\n\"` と `\"\\\\n\"` はまったく別の文字列ですので、要件は整理したほうがいいと思いますよ。処理したいのが `\"\\\\n\"` という文字列でそれを表示したいのであれば、文字列の生成時に `\\` を適切にエスケープすべきです。逆に、改行文字を含む文字をエスケープして画面に出したいのであれば、改行文字をエスケープする関数( `show` はその一種だが、 `\"` で括ったりするのでエスケープ方法としては独特)を作ってそれを噛ませて表示すべきです。",
        "user": "U4MAYDV9C",
        "type": "message"
    },
    {
        "ts": "1544747872.014400",
        "text": "<@UET37UPQR> has joined the channel",
        "user": "UET37UPQR",
        "type": "message"
    },
    {
        "ts": "1544775666.014700",
        "text": "<@UET91JXLZ> has joined the channel",
        "user": "UET91JXLZ",
        "type": "message"
    },
    {
        "ts": "1544829240.015000",
        "text": "<@UEH3V5NRE> has joined the channel",
        "user": "UEH3V5NRE",
        "type": "message"
    },
    {
        "ts": "1544846046.017000",
        "text": "「Haskellによる並列・並行プログラミング」_Parallel and Concurrent Programming in Haskell_ (<https://www.oreilly.com/library/view/parallel-and-concurrent/9781449335939/ch04.html>)  の p.69 `Rate-limiting the Producer` にある流量制限をする `exercise` の解を教えて下さい　非力のため実行時エラーが取れません\n`stack overflow` (<https://stackoverflow.com/questions/24773130/parallel-haskell-rate-limiting-the-producer>)　にヒントがありますが　完全解は省略されています\nよろしくお願いします",
        "user": "U584T7GAH",
        "type": "message"
    },
    {
        "ts": "1544860031.017300",
        "text": "ちょっとまだ状況把握できてないので解けるかどうかも自信がないのですが、いずれにしても、\n<@U584T7GAH> さんが自分でどこまで書いてみてどううまくいかなかったのか、教えていただけないでしょうか？\nそうでなければアドバイスしにくいです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544863867.017500",
        "text": "`parconc-examples` から `rsa-pipleline.hs` と `Stream.hs` を取り出して　`streamFromList` や他を次のように変えると　エラーになります　``` $ cabal unpack parconc-examples\n$ cd parconc-examples-0.4.7\n$ cabal install --only-dependencies\n\n$ diff rsa-pipeline2.hs rsa-pipeline.hs\n14c14\n&lt; import Stream2\n---\n&gt; import Stream\n42c42\n&lt;   s0 &lt;- streamFromList f c (chunk (size n) b)\n---\n&gt;   s0 &lt;- streamFromList (chunk (size n) b)\n47,49d46\n&lt;   where\n&lt;   f = 100\n&lt;   c = 200\n\n\n$ diff Stream2.hs Stream.hs\n10c10\n&lt; module Stream2\n---\n&gt; module Stream\n25d24\n&lt;   | Fork (Par ()) (IList a)\n34d32\n&lt;   rnf (Fork _ a) = rnf a\n40,41c38,39\n&lt; streamFromList :: NFData a =&gt; Int -&gt; Int -&gt; [a] -&gt; Par (Stream a)\n&lt; streamFromList f c xs = do\n---\n&gt; streamFromList :: NFData a =&gt; [a] -&gt; Par (Stream a)\n&gt; streamFromList xs = do\n43c41\n&lt;   fork $ loop f c xs var                -- &lt;2&gt;\n---\n&gt;   fork $ loop xs var                    -- &lt;2&gt;\n46,51c44,45\n&lt;   loop _ _ [] var = put var Nil         -- &lt;4&gt;\n&lt;   loop 0 c (x:xs) var = do\n&lt;     tail &lt;- new\n&lt;     let op = loop 0 c xs tail\n&lt;     put var (Fork op (Cons x tail))\n&lt;   loop f c (x:xs) var = do              -- &lt;5&gt;\n---\n&gt;   loop [] var = put var Nil             -- &lt;4&gt;\n&gt;   loop (x:xs) var = do                  -- &lt;5&gt;\n54c48\n&lt;     loop (f-1) c xs tail                -- &lt;8&gt;\n---\n&gt;     loop xs tail                        -- &lt;8&gt;\n67,68c61,62\n&lt;       Nil               -&gt; put outstrm Nil\n&lt;       Cons h t          -&gt; do\n---\n&gt;       Nil -&gt; put outstrm Nil\n&gt;       Cons h t -&gt; do\n72d65\n&lt;       Fork p (Cons h t) -&gt; fork p &gt;&gt; streamMap fn t &gt;&gt; return ()\n83,85c76,77\n&lt;     Nil               -&gt; return acc\n&lt;     Cons h t          -&gt; streamFold fn (fn acc h) t\n&lt;     Fork p (Cons h t) -&gt; fork p &gt;&gt; streamFold fn (fn acc h) t\n---\n&gt;     Nil      -&gt; return acc\n&gt;     Cons h t -&gt; streamFold fn (fn acc h) t\n\n\n$ ghc -O2 -threaded -rtsopts  rsa-pipeline2.hs\n\n$ ./rsa-pipeline2 /usr/share/dict/words &gt;/dev/null +RTS -N2\nrsa-pipeline2: no result\nCallStack (from HasCallStack):\n  error, called at ./Control/Monad/Par/Scheds/TraceInternal.hs:250:11 in monad-par-0.3.4.8-6smWrlrr5w82FJ0Oii5wmF:Control.Monad.Par.Scheds.TraceInternal\n```\n長くなってすみません",
        "user": "U584T7GAH",
        "type": "message"
    },
    {
        "ts": "1544864425.017700",
        "text": "diffを当てるのも面倒なので、gistあたりに書いたものをアップロードしちゃってください。\n別にこのSlackに完結する必要はないです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544888022.018700",
        "text": "<@UEU4W901W> has joined the channel",
        "user": "UEU4W901W",
        "type": "message"
    },
    {
        "ts": "1544890905.018900",
        "text": "遅れましたがこちらになります　`<https://gist.github.com/karoyakani/3ef51ac74e0a7b72e44a1c6a418c44ec>`",
        "user": "U584T7GAH",
        "type": "message"
    },
    {
        "ts": "1544943394.019200",
        "text": "どれかのライブラリーに用意されてますかね？ <https://twitter.com/kakkun61/status/1073752004244033536>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544944017.023100",
        "text": "これって、昔どっかで見たけど、[Word8] をWord32に変換する関数はありますかってやつと同じですよね？ ByteStringはLazyな方という仮定ですけど その質問の回答のコピーですと 無いです 探せばあるかもですが、、、",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1544945460.023300",
        "text": "`[Word8]` 経由しない方がパフォーマンス的にはいいっちゃいいですけど\nとりあえず経由してもいいです",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544945499.023500",
        "text": "ヒントをいうと， `streamMap` の実装がおかしいと思います",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1544947825.023900",
        "text": "<@UEW4CKSLX> has joined the channel",
        "user": "UEW4CKSLX",
        "type": "message"
    },
    {
        "ts": "1544951437.024100",
        "text": "```\nfromIntegral (word32 bytestring) :: Int32\n```\nでよさそう\n<https://www.stackage.org/haddock/lts-12.22/network-byte-order-0.0.0.0/Network-ByteOrder.html#v:word32>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1544965184.025500",
        "text": "<@U9PALRVN3> has joined the channel",
        "user": "U9PALRVN3",
        "type": "message"
    },
    {
        "ts": "1545040142.025700",
        "text": "<@UEVGDDBCJ> has joined the channel",
        "user": "UEVGDDBCJ",
        "type": "message"
    },
    {
        "ts": "1545133272.026300",
        "text": "<@UEW2WMB7T> has joined the channel",
        "user": "UEW2WMB7T",
        "type": "message"
    }
]