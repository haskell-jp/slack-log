[
    {
        "ts": "1570879223.007700",
        "text": "ありがとうございます！\n\nこれですね:eyes:\n<https://gitlab.haskell.org/ghc/ghc/merge_requests/1934>",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1570879950.008000",
        "text": "今月切られる予定の ghc-8.10のbranch には間に合わないので、ghc-8.12 くらいへの反映になります。\nそれまでの当面は、 `~/.ghci` に、 `:def! k! (\\e -&gt; return (\":kind! \" ++ e))` の\nように書くと、 `k!` のエイリアスを作れます。\n（:def については、こちらです。 <https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#ghci-cmd-:def> ）",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1570892473.008400",
        "text": "lts 指定した場合って /root/.stackとかキャッシュした方がいいのかな",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571060497.009300",
        "text": "<@UPELDRYJJ> has joined the channel",
        "user": "UPELDRYJJ",
        "type": "message"
    },
    {
        "ts": "1571073112.009800",
        "text": "<@UPC9L1C68> has joined the channel",
        "user": "UPC9L1C68",
        "type": "message"
    },
    {
        "ts": "1571139302.010900",
        "text": "Dhall、去年の Haskell Day の紹介から使い始めたんだけど、1年前からすごい変わっててびびった....\n<https://github.com/dhall-lang/dhall-haskell/blame/master/dhall/CHANGELOG.md>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1571139349.011500",
        "text": "format が変だなって思ったらいつのまにか multiline let がついてるし（1年前）",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1571139585.011700",
        "text": "Dhall standard も v10.0 を数え、去年とは別物になっているようですね（最近触ってない）",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1571141434.012300",
        "text": "そうなんですよね\nhackage での dhall は 1.26 なんですけど",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1571141502.012500",
        "text": "1.17 あたりから別に v1.0 に対応して、\n1.18 が v2.0、 1.19 が v2.0 という具合に別に言語のバージョンが振られてる",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1571141561.012700",
        "text": "language standard のバージョンと Haskell implementation のバージョンは別ですね．前者のバージョンアップに対して，後者が追従する形です．",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1571142018.013000",
        "text": "language standard は言語仕様で Haskell implementation はリファレンス実装みたいな感じなんですかね？（よく分かってない",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571142383.013200",
        "text": "以下私の記憶が正しければですが (どこで読んだか忘れた)，Closure とかも実装があって (<https://github.com/f-f/dhall-clj>) これも一級市民 (language standard に対する投票権的なのがある) だった気がします．\nHaskell の impl がリファレンス実装というわけではなくて，他の言語の impl と立場としては一緒なはずなんですが，事実上そうなっているという側面はありそうですね．",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1571142444.013500",
        "text": "出典ありました\n<https://github.com/dhall-lang/dhall-lang/blob/76494a43c48e6a5c3db6510918d138c27d055835/.github/CONTRIBUTING.md#how-do-changes-get-approved>",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1571142495.013800",
        "text": "へぇ、そういう関係だったんだ",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1571142512.014000",
        "text": "Haskell の implementation は Gabriel Gonzalez がメンテしてるので，結局一番早いし正確っていうｗ",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1571146221.014500",
        "text": "Clojure?",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571149351.014900",
        "text": "にわかが露呈してしまった :cold_sweat:",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1571184216.015300",
        "text": "半年くらい前は、速度がとてもおそい（dhall-cabalの実行が1分くらいかかる）という問題があったんですけど、最近どうなってるんだろう",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1571194221.015700",
        "text": "<@UPGMNDPPZ> has joined the channel",
        "user": "UPGMNDPPZ",
        "type": "message"
    },
    {
        "ts": "1571194430.016100",
        "text": ":serval: すっごーい！ <https://twitter.com/mr_konn/status/1184138224853114885>\n<https://chrispenner.ca/posts/wc>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571259372.017100",
        "text": "<@UPJ0N5RPH> has joined the channel",
        "user": "UPJ0N5RPH",
        "type": "message"
    },
    {
        "ts": "1571269181.018600",
        "text": "<http://hackage.haskell.org/package/ghc-datasize-0.2.2/docs/GHC-DataSize.html>\n任意の値がヒープを何バイト消費しているかを計算してくれる関数を提供するそうです。 :sugoi:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571283653.019200",
        "text": "実行が遅いの，だいたい `dhall freeze` してないことが原因な気がします．\n(`dhall freeze` しておくとローカルのキャッシュを見に行くはずなので．)",
        "user": "U9FAYSN12",
        "type": "message"
    },
    {
        "ts": "1571318262.019800",
        "text": "<@UPH191QVB> has joined the channel",
        "user": "UPH191QVB",
        "type": "message"
    },
    {
        "ts": "1571404278.020300",
        "text": "<@UPJG8R8CV> has joined the channel",
        "user": "UPJG8R8CV",
        "type": "message"
    },
    {
        "ts": "1571571555.021300",
        "text": "<@UP77BA75Y> has joined the channel",
        "user": "UP77BA75Y",
        "type": "message"
    },
    {
        "ts": "1571638639.022700",
        "text": "どっちの結果になるかぱっと分からなかったやつ <https://twitter.com/kakkun61/status/1186133897643352064>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571639428.023400",
        "text": "`StateT IO` の落とし穴ですね... これが意図通りに動かないので `ReaderT` を使えと <https://www.fpcomplete.com/blog/2017/06/readert-design-pattern> でも書いてるやつだ。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571640428.023700",
        "text": "SQL でいうところの ROLLBACK をしてると思えば自分は納得なので、意図通りじゃないかどうかは微妙ですね",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571647116.024100",
        "text": "<@UPNPJJNDC> has joined the channel",
        "user": "UPNPJJNDC",
        "type": "message"
    },
    {
        "ts": "1571722780.024800",
        "text": "トランザクショナルな処理を表現するのに中途半端な状態が出来てしまうと困るので、実は大事な性質ですね。lisztのインサート処理も内部で意図的にStateTを使っています",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1571735651.025200",
        "text": "<@UPMKSF5M2> has joined the channel",
        "user": "UPMKSF5M2",
        "type": "message"
    },
    {
        "ts": "1571797937.026700",
        "text": "Eta のホームページ（トップページ）見たら猫耳の人載ってるんですね\n<https://eta-lang.org/>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571830531.027600",
        "text": "みんなの開発環境が知りたいぞ <https://kakkun61.hatenablog.com/entry/2019/10/23/%E6%9C%80%E8%BF%91%E3%81%AE%E8%87%AA%E5%88%86%E3%81%AE_Haskell_%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%EF%BC%88Windows%EF%BC%89>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571831082.028000",
        "text": "- もともと Win で、最近は Mac\n- build tool は stack (resolver は lts の最新)\n- editor は Atom に IDE-Haskell を雑に使ってるだけ (HIE は使ってない)\n\nぐらい？開発環境をカスタマイズするのが苦手なので基本いじってない。",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1571831341.028200",
        "text": "自分もエディターのカスタマイズなんかは最小限に済ましたい\n後で分からなくなるから",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571831625.028400",
        "text": "- Linux\n- 実行するアプリはstack（resolverはltsをできるだけ上げていく）、ライブラリはcabal\n- SpacemacsのHaskell layerにhie\nみたいな感じですかね",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1571838289.029000",
        "text": "&gt; （ghcup はなんで Haskell 製じゃないんだ？）\n\n`PATH` を書き換えたりする必要があるので必然的にシェルに依存せざるを得ないのではないかと。\n単にインストールするだけの為にツールを作るのも確かにありですけど。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571838804.029200",
        "text": "ちなみに私はNeovim + languageclient-neovimを惰性で使ってます。\nが、HIEのGHC 8.8向けのビルドスクリプトがまだ提供されてないのでまだかなーと思いながら概ね筋力で書いてます。多分やろうと思えばビルドできるんだろうけどね",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571839123.029500",
        "text": "エディタは職場とLinux機でspacemacs、Win機では試しにvscodeですが、spacemacsでいいんじゃないかなって感じです。ide engineは一回セットアップしたけどバージョンアップで壊れて以来直してません",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1571839196.029700",
        "text": "ビルド面倒くさくて結局惰性で書いちゃいますよねー",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571842037.030000",
        "text": "Spacemacs わりと人気",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571873432.032200",
        "text": "Windows, Stack (lts-12.26 で固定), vim (フォーマッターなし)\n\nHaskell をあまり使ってないので特殊なケースだと思います",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1571877706.032500",
        "text": "OS: Linux\nビルドツール: stack\nエディター: vscode\nide: ghcid\nHIEは気に入ってたけど、パソコンの問題なのか、プロジェクトがある程度の規模になると壊れるので、使うのやめました。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1571879809.033000",
        "text": "Haskellとは関係ないけど、Slackでもついにダークモードが実装されました。\n<https://slackhq.com/intl-ja-jp-dark-mode-for-slack-desktop>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1571883251.033700",
        "text": "HIE 小さいプロジェクトだと動くけど、大きくなるとなぜかあやしくなるんですよね……",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571888064.034000",
        "text": "頑張って改善してはいるらしいっすよ。大きさというよりコードの内容に依存するのかも。\nGHC本体のコードだとするとTHとか特殊なことはあまりしてないでしょうし。\n<https://github.com/haskell/haskell-ide-engine/issues/1357#issuecomment-520127513>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1571897828.035200",
        "text": "postgresql-pure リリースしました\n&gt;&gt;&gt; Hello.\n\nI published a library “postgresql-pure”, which is a PostgreSQL driver\nwritten in pure Haskell, a few days ago.\n\nThis library is developed to aim:\n\n- to increase the performance on multi CPU core environments\n- to run on multi platform\n  - to build it easier especially on Windows to remove the dependency\non libpq, which is made by C\n  - there is postgres-wire which is a fast implementation but it\ndoesn't support Windows\n\nI confirmed that:\n\n- the performance was proportional to the number of cores\n- the performance on 12 cores were 28% better than postgres-wire, 300%\nbetter than postgresql-simple\n\nBoth test cases are simple constant value queries like “SELECT\n2147483647 :: int4, …” to decrease server's load.\n\nI'm writing a report about this development and I will send email again.\n\nPlease try this and feel free to report issues.\n\nBest,\nKazuki Okamoto\n\nHackage: <http://hackage.haskell.org/package/postgresql-pure>\nGitHub: <https://github.com/iij-ii/postgresql-pure>\n\n<https://mail.haskell.org/pipermail/haskell-cafe/2019-October/131609.html>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1571898824.035900",
        "text": "ちなみに HDBC インタフェースを提供しているので relational-record のバックエンドとして使える\n<https://github.com/iij-ii/postgresql-pure/blob/master/test-relational-record/Spec.hs>",
        "user": "U4L0B71L1",
        "type": "message"
    }
]