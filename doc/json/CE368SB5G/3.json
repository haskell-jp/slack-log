[
    {
        "ts": "1544164244.040700",
        "text": "Windows + stack `%USERPROFILE%/AppData/Local/Programs/stack/x86_64-windows/ghc-8.4.4/lib/settings`",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544164447.041400",
        "text": "(PPL、去年は1月22日だった、登録開始 <https://jssst-ppl.org/workshop/2018/>)",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1544164454.041600",
        "text": "```\n~/AppData/Local/Programs/stack/x86_64-windows/ghc-8.4.4/mingw/bin15:28$\n&gt; ./ld.exe -V\nGNU ld (GNU Binutils) 2.29.1\n  Supported emulations:\n   i386pep\n   i386pe\n```",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544164488.042200",
        "text": "```\n~/AppData/Local/Programs/stack/x86_64-windows/ghc-8.4.4/mingw/bin15:29$\n&gt; ./ld.gold.exe -V\nGNU gold (GNU Binutils 2.29.1) 1.14\n  Supported targets:\n   elf32-iamcu\n   elf32-i386\n   elf32-i386-freebsd\n   ... 以下略 ...\n```\n全部ELFだね。。。 :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544164872.042600",
        "text": "<https://kazu-yamamoto.hatenablog.jp/entry/20180306/1520314185>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1544164956.043000",
        "text": "8.6.3が近そう <https://github.com/ghc/ghc/commit/31cd867e4d37072c3ce1d51efadc94e66ddc1c28>",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1544167945.043600",
        "text": "<https://github.com/kayhide/try-ghc86>",
        "user": "U4LNDESN8",
        "type": "message"
    },
    {
        "ts": "1544169243.043900",
        "text": "<https://qiita.com/waddlaw/items/65b57517f105fcbbe724>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544195755.044500",
        "text": "今日の MonadPlus IO の話が出たときの Parsec の話。\n\nやはり Parsec の `(p &lt;|&gt; q)` でも、\n`p` が失敗したときに入力を消費していないことが、\n`q` を実行する条件。\n`p` が失敗したときに入力を消費しているときには、 `(p &lt;|&gt; q)` が失敗する。\nなので、Parsec では effect が中途半端に実行されて実行が続いてしまうことは起こらない。\n\n<http://hackage.haskell.org/package/parsec-3.1.13.0/docs/Text-Parsec.html#v:-60--124--62->\n\n私の記憶違いではなかったらしい。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544196313.046600",
        "text": "なのでどこかで `try` で捕まえなければ、結果的に全体が失敗する。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544196353.047000",
        "text": "間違えた <https://mail.haskell.org/pipermail/haskell-cafe/2018-August/129829.html> のようです。\nそしてmegaparsecも日比野さんの仰る実装のようです。 :relieved:\n<http://hackage.haskell.org/package/megaparsec-7.0.4/docs/Text-Megaparsec.html#v:try>\nよく意味がわかってませんですみませんでした。。。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544196653.049500",
        "text": "バックトラックしたい箇所だけ選んで `try` を入れることで無駄なバックトラックを減らして効率化する方式なんですね。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544196990.049800",
        "text": "hasmoku でも話題にしたことがあるけど、\n```\np *&gt; q &lt;|&gt; p *&gt; r === p *&gt; (q &lt;|&gt; r)\n```\nMonadPlus(Alternative) の分配法則が成立しないの、\nプログラム書きづらいと思うんですよね。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544197124.051100",
        "text": "そこは。。。そんなにAlternativeでのコンビネーターを書くことがないのでやっぱりピンとこないです。。。書いたとしても、特定のインスタンス向けのものしか意識しません。。。 :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544197387.052400",
        "text": "むしろ、途中まで effect が実行された方が嬉しい例というのがあれば見てみたい。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544404174.053400",
        "text": "次の勉強会ネタで、fumi くんが「GHC 8.8の機能」と言って、僕が「まだリリースされてないと思うよ」と言ってしまいましたが、よく考えるとリリースされてなくてもいいですね。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544405082.053500",
        "text": "途中で仕様が変わったのかと思い、最初である parsec 2.0 のコードを読んでみましたが、その時点で <@U4KNU6N48> さんの説明通りに実装されていることを確認しました。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544405154.053700",
        "text": "<https://web.archive.org/web/20140529211116/http://legacy.cs.uu.nl/daan/download/parsec/parsec.html>",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544405167.053900",
        "text": "&gt; For reasons of speed, the (&lt;|&gt;) combinator is predictive; it will only try its second alternative if the first parser hasn't consumed any input. Consider the following example parser:",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544405175.054100",
        "text": "おお、もっと前からだ。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544405396.054300",
        "text": "wai-app-file-cgi では、たとえば index.html.ja、index.html の優先順位でファイルを返答するときに、両者を読み込むコードは全く独立で、最初がエラーになったら次のアクションに行くという作りになっています。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544405448.054500",
        "text": "IO は Alternative にすべきではないという意見があったので、io-choiceというパッケージを作って使っています。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544445688.055200",
        "text": "遅くなりましたが私の資料も上げておきました。\n<http://the.igreque.info/slides/2018-12-07-ghc8x.html#(1)>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544491973.056300",
        "text": "<@U4KNU6N48> さんが言うように、GHC 8 以降は IO が Alternative になっていて、実装を読んでみたら io-choice と一緒だった。io-choice は obsoleted でいいかな？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544492025.056600",
        "text": "自分のしか依存がない！ <https://packdeps.haskellers.com/reverse/io-choice>",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544511895.057500",
        "text": "<@U4M9NJ7QE> 高速な pure Haskell integer ライブラリって、どれのことでしょうか？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544512076.057600",
        "text": "<https://github.com/ch1bo/ghc-proposals/blob/patch-1/proposals/0000-integer-openssl.rst> で提案されている integer-opensslのことですね！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544513463.058000",
        "text": "ありがとう！",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544513678.059100",
        "text": "補足ですがpure HaskellではなくC bindingです",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1544513750.059300",
        "text": "libcryptoというライブラリーを使っているので実際にはPure Haskellではないですが、libgmpのような、ライセンスの都合上での面倒ごとがない、ということでしたよね？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1544513869.059600",
        "text": "NamedFieldPuns と RecordWildCards ついて調べました。\nNamedFieldPuns は x=x の代わりに x と書ける。\nRecordWildCards は、x=x の代わりに .. と書ける。\nのようです。\nRecord{x} は NamedFieldPuns\nRecord{..} は RecordWildCards\nRecord{x,..}は、NamedFieldPuns + RecordWildCards\nです。\n\n以前は、Record{..}を多用していたのですが、どのフィールドを使っているのかよく分からないから明記しろという指令が下りましたので、Record{x,z} のように書くようになりました。\n\nなので、RecordWildCards が減り NamedFieldPuns が増えました。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544513955.059700",
        "text": "インターンが来たら、libgryptoを参考に、<https://github.com/erikd/haskell-big-integer-experiment/issues/8> を完成させることにします。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544525075.060400",
        "text": "&gt; index.html.ja、index.html の優先順位でファイルを返答するときに\n\nこの例だとファイルの読み込みが\n副作用の痕跡を残さないことを\n暗黙に期待している例になっていると思うので、\n実は effect が途中まで実行されて嬉しい例にはなっていないと思います。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544525674.060700",
        "text": "IO の MonadPlus のインスタンスですが、\nマニュアルに書いてある MonadPlus の満たすべき性質の 2つめ\n\n```\nv &gt;&gt; mzero = mzero\n```\n\nを満たせていないですね。\n\n<http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:MonadPlus>",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544525688.060900",
        "text": "これが満たされるときには、\n連続実行の後に失敗があれば、\nそれは何もしなかったのと同じになる。\n\nおそらくこのときには分配法則も成立する。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544526484.061100",
        "text": "Simon さんが STM のプレゼンで、\nミサイル発射しちゃったら巻き戻せない、\nみたいな例を挙げていたのを思い出しました。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1544576128.062700",
        "text": "ミサイルが発射されないように使えばOK。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1544585324.064000",
        "text": "io-choice をやめて Alternative IO にした mighty を <http://www.mew.org/> で動かし始めました。\n何かおかしければ教えて下さい。\nhttps で話しかけると、TLS 1.3 (hs-tls の master) を喋ります。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1545102583.065200",
        "text": "もう10日以上経ったけど、簡単に記事書きました\n何か間違ってたら突っ込んでください :bow:\n<https://matsubara0507.github.io/posts/2018-12-18-ghc8x.html>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1546581229.000100",
        "text": "FYI. 例のinteger-opensslについての議論によると、libtommathというのも検討しているそうです。\n<https://www.libtom.net/>\n<https://github.com/ghc-proposals/ghc-proposals/pull/183#issuecomment-440629129>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547013372.001100",
        "text": "well-typed の研修を受けるという話はどうなっているでしょうか？ うちの締めは3月末です。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1547724317.001400",
        "text": "<@UFES5NULC> has joined the channel",
        "user": "UFES5NULC",
        "type": "message"
    },
    {
        "ts": "1548409323.001600",
        "text": "<@U5LV76EJH> has joined the channel",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1548557823.002500",
        "text": "<@U56MBRKR9> DM を送りましたので、まずはそちらを見ていただけますでしょうか？",
        "user": "U4LNDESN8",
        "type": "message"
    }
]