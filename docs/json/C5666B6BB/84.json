[
    {
        "ts": "1588315812.091400",
        "text": "詳しい事情はhaskell-cafeあたりで何度か触れられていると思います（自分もぶっちゃけよく調べてない...\n<https://takenobu-hs.github.io/haskell-wiki-search/?siteview=full> からチェックを入れて検索してみてください。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1588315838.091600",
        "text": "みてみます！\nありがとうございます",
        "user": "ULTBB86UC",
        "type": "message"
    },
    {
        "ts": "1588315860.091800",
        "text": "あと、base-4.13以降のドキュメントについては <https://wiki.haskell.jp/Hikers%20Guide%20to%20Haskell#base-4.13%E4%BB%A5%E9%99%8D%E3%81%AE%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88> でも触れているとおり、GHC添付のドキュメントを探れ、とのこと。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1588315927.092000",
        "text": "ｵｫ…知らなかった…\nありがとうございます\nちょっとわかりづらい…",
        "user": "ULTBB86UC",
        "type": "message"
    },
    {
        "ts": "1588396588.092400",
        "text": "<@U012WHCBRSR> has joined the channel",
        "user": "U012WHCBRSR",
        "type": "message"
    },
    {
        "ts": "1588400929.092700",
        "text": "<@U012R7RMZB8> has joined the channel",
        "user": "U012R7RMZB8",
        "type": "message"
    },
    {
        "ts": "1588404058.093000",
        "text": "<@UEC0PN1PA> has joined the channel",
        "user": "UEC0PN1PA",
        "type": "message"
    },
    {
        "ts": "1588404290.093200",
        "text": "質問させていただきます.\nこのプログラムのlikeReturn に相当するような処理は実現可能でしょうか?\n\nST s (STArray s a b) を引数にとって, &lt;ST action&gt; をその内部に適用しつつ,runSTをその内部で利用したいというかなりわがままな利用ができたら色々とキレイに書けるので試行錯誤しています.\n\n&gt;  update i test = readArray  test i &gt;&gt;= writeArray (_test test) (i + 1) \nの形にしたり,\n&gt; runSTTest :: STTest s -&gt; Int -&gt; ST s Int\nにするとシンタックスが手続き型っぽくなるので,できないものかと.\n\nunsafePerformIOを使ってunsafeRunSTを作ればできそうですが悩みどころです.\n\n現行で発生するエラーは下記になります\n\n&gt;  *• Couldn’t match type ‘s1’ with ‘s’*\n&gt;    *‘s1’ is a rigid type variable bound by*\n&gt;     *the type signature for:*\n&gt;      *likeReturn :: Test s -&gt; STTest s*\n&gt;     *at /Users/akagi/Documents/Programs/Haskell/VirtualEconomy/src/Sample.hs:26:1-36*\n&gt;    *‘s’ is a rigid type variable bound by*\n&gt;     *the type signature for:*\n&gt;      *likeReturn :: forall s. Test s -&gt; STTest s*\n&gt;     *at /Users/akagi/Documents/Programs/Haskell/VirtualEconomy/src/Sample.hs:25:1-42*\n&gt;    *Expected type: ST s1 (Test s1)*\n&gt;     *Actual type: ST s1 (Test s)*\n&gt;   *• In the expression: ST (\\ s -&gt; (# s, x #))*\n&gt;    *In an equation for ‘likeReturn’:*\n&gt;      *likeReturn x = ST (\\ s -&gt; (# s, x #))*\n&gt;   *• Relevant bindings include*\n&gt;     *x :: Test s*\n&gt;      *(bound at /Users/akagi/Documents/Programs/Haskell/VirtualEconomy/src/Sample.hs:26:12)*\n&gt;     *likeReturn :: Test s -&gt; STTest s*\n&gt;      *(bound at /Users/akagi/Documents/Programs/Haskell/VirtualEconomy/src/Sample.hs:26:1)*",
        "user": "UEC0PN1PA",
        "type": "message"
    },
    {
        "ts": "1588409583.094600",
        "text": "質問の意図が取れているか自信がないのですが、\n• runSTTestが `ST s Int` ではなく `Int` を返せば、 `runSTTest ... &gt;&gt;= f` ではなく `f (runSTTest ...)` と書けるので恰好いい\n• なので、runSTTestの中でrunSTを呼び、外側のSTに紐づいたSTMArrayを参照したい\nというモチベーションでしょうか。内側にいるとはいえ、STのRankN多相で守られた配列を参照しようとしている事になるので、無理っぽい気がします",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1588409638.094800",
        "text": "```type STTest s = forall s. ST s (Test s)```\nこの宣言ですが、右辺のforall sで新しいスコープの変数sが定義されてしまって、左辺のsは使用されないのでは。",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1588410842.095100",
        "text": "ご返信ありがとうございます.\n意図はそのとおりで,単に見た目が数式のとおりになるので,という話なのですが,難しそうですね.\n\nたしかに,左辺のsは使用しませんね.左辺のsを消すと\n\n&gt;  forall s. Test s -&gt; STTest\nとなり\n動かない理由が直感的にもわかりやすいですね.\n\n実際のコードでは,複数の時系列変数が大量につまったTest sのようなものを引き連れているので, わかりやすさと更新の速さを両立させたいですが,なかなかうまく行きません.",
        "user": "UEC0PN1PA",
        "type": "message"
    },
    {
        "ts": "1588411225.095500",
        "text": "更新を伴う大量のデータを引数に引き回す際にもともとはMapをつかっていたものをSTに変更しようとしていましたがrunSTをかませるとコードがかなり複雑になってしますので,難しいところです",
        "user": "UEC0PN1PA",
        "type": "message"
    },
    {
        "ts": "1588456424.095900",
        "text": "<@U012YCXSY90> has joined the channel",
        "user": "U012YCXSY90",
        "type": "message"
    }
]