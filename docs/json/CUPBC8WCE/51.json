[
    {
        "type": "message",
        "user": null,
        "ts": "1676174490.883499",
        "text": ""
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1676174641.460229",
        "text": "kkです．2回目まして．\nmixfix operators対応の自作パーサを作成しています．\nリストに応用できる可変長のdelimiter operatorと関数適用に対応したので，テストを拡充させます．\n関数適用はトークンが2つ以上並んだものを関数と認識するだけで済んで簡単でしたが，リストはトークンの種類数を倍以上にする必要があり大変です．\n<https://gist.github.com/ijaketak/7ea6bf3f509250b6d9739216e546f144>"
    },
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1676174768.753789",
        "text": "toyboot4e です。こんにちは。 13:20 ~ こちらのバーチャルコンテストに出てみます\n<https://mojacoder.app/users/Ajinoko/contests/Ajinoko_ASC>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1676174859.848619",
        "text": "山本悠滋です。\nいつもどおり、makeMistakesToLearnHaskellをちょっと進めた後、cabal replの件を進めます。今日は作ったものの動作確認なんで、手近なタイプセーフプリキュアのプロジェクトでテストするので、上手く動いていたらそのままキュアスカイのサポートもするかも"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1676174889.682219",
        "text": "\"Recursion Schemes, Part V: Hello, Hylomorphisms,\" Patrick Thomson <https://blog.sumtypeofway.com/posts/recursion-schemes-part-5.html>\nあとハシゴで AtCoder 鉄則本 A46 - Heuristic 1 <https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_at>"
    },
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1676175694.939889",
        "text": "しまった、、 Haskell で提出できないコンテストだったので終わります (・ω・)"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1676178346.278579",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\n引き続き、Implementing Functional Languages:a tutorial の\nコア言語のPack構文をパースできるようにすることから進めていこうと思います。"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1676192479.506949",
        "text": ""
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1676192941.793139",
        "text": "どうしてもわからず、またしてもnobsun様のGitHubを参照させていただき、何とか同じようにパースできる様になりました。\npAexprパーサの中でPackからEConstrを生成できるようにして、pExprパーサの中でpAexprパーサを呼び出せるようにすれば、\n自然に関数適用の形になる模様。まだまだ理解不十分なことを痛感しました。nobsun様、今回もありがとうございました。"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1676193066.766249",
        "text": "・cabal replの件は手元のプロジェクトで動作確認しています。~思ったよりちゃんと動いているっぽいです~\n・makeMistakesToLearnHaskellについては課題17を少し <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/24f14257e21eafa7ffc9eb3d5188f676ebb27dea>"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1676193105.697299",
        "text": "\"Recursion Schemes, Part V\" 読了\nAtCoder 鉄則本 A46 - Heuristic 1 結果 AC　他に Haskell で通している人がいない"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1676193912.400409",
        "text": "自作パーサ，バグを1つ発見，修正しました．\n最終的にはmixfix operatorsだけで言語仕様を定義できるのではないかと妄想しています．インデントが鬼門か．"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1676778325.784899",
        "text": "今日は急用によりほとんど参加できなさそうです。時間があったら今日か明日にmakeMistakesToLearnHaskellの続きを少し上げるかも知れません"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1676779303.944129",
        "text": ""
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1676779689.621339",
        "text": "\"Recursion Schemes, Part VI: Comonads, Composition, and Generality,\" Patrick Thomson <https://blog.sumtypeofway.com/posts/recursion-schemes-part-6.html>\nあとハシゴで AtCoder 鉄則本 A50 - 山型足し算 <https://atcoder.jp/contests/tessoku-book/tasks/future_contest_2018_qual_a>"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1676781305.489159",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\nImplementing Functional Languages:a tutorial 3.8.5 The Compiler の Exercise 3.35 の続きから進めていこうと思います。"
    },
    {
        "type": "message",
        "user": "UJBCU6PCH",
        "ts": "1676782010.155019",
        "text": "白鳥です。よろしくお願いします。「コンピュータシステムの理論と実装」10章を進めます"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1676795254.517839",
        "text": "kkです．3度目まして．\nmixfix operators対応の自作パーサを作成しています．\nテストの拡充ですが，コードカバレッジ100%を達成しました．error部分には到達していないので正確にはほぼ100%ですが．\n前に発見した到達不可能らしきパスはコードのリファクタリングによって除去されました．めでたい．\nパーサだけならこれで完成だと思います．\n<https://gist.github.com/ijaketak/7ea6bf3f509250b6d9739216e546f144>"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1676795364.907379",
        "text": "（Haskellっぽい）mixfix operators対応言語の実装のために重要なのはインデントと型検査です．\nインデントは文法にインデント量の比較を付与する文脈自由言語の拡張を定義する論文を発見しました．\n型検査は構文解析それ自体にも適用できないか検討中です．\n全ての予約語をn項演算子と考えると，型宣言やインスタンス定義に現れる予約語でさえただの関数と定義できるはずです．\n難点は型検査が2回必要になることです．\nコードの実行はどうしよう...コンパイラは書く自信が無いのでLLVM任せ？インタプリタと両立できれば最高ですね．"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1676797266.370319",
        "text": ""
    },
    {
        "type": "message",
        "user": "UJBCU6PCH",
        "ts": "1676797708.719899",
        "text": "「コンピュータシステムの理論と実装」10章の構文解析器を作る問題のトークナイザ部分のデバッグとテストをしました"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1676798037.063699",
        "text": "Exercise 3.35 の、またしてもPack構文対応処理のところでつまづいています。\nlet(rec)構文で局所定義が全て渡されるのとは勝手が違うようです。改めて理解不足を痛感しました。"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1676798229.414509",
        "text": "Recursion Schemes 自身が一般化であるのに　さらにその上を行く gcata gana 等々は圧巻でした\n鉄則本 A50 - 山型足し算はまったく手付かず　どっからどうしたもんか A49 での悪夢の再現かも"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1676799157.414239",
        "text": "本日の進捗 <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/56a6683d376b822d9accbdc79c40f14b0e0080be|https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/56a6683d376b822d9accbdc79c40f14b0e0080be>"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1677384086.514719",
        "text": ""
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1677384353.615319",
        "text": "\"Recursion Schemes for Higher Algebras,\" Bartosz Milewski\" <https://bartoszmilewski.com/2018/08/20/recursion-schemes-for-higher-algebras/>\nあとハシゴで AtCoder 鉄則本 A52 - Queue <https://atcoder.jp/contests/tessoku-book/tasks/tessoku_book_az>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1677384415.102409",
        "text": "山本悠滋です。makeMistakesToLearnHaskellの続きだけ進めます。メインPCの故障や、雑務がいろいろあるので早めに切り上げます。"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1677384459.908899",
        "text": "kkです．\nmixfix operators対応の自作言語を作成しています．\n今日はインデントとコメント，ついでに文字列リテラルに対応しようと思います．\nインデントはタブ文字非対応，コメントは開始と終了にASCII制御文字を割り当てようと思います．\n実装が楽なのと，予約記号をできるだけ減らしたいのが理由です．"
    },
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1677385298.057969",
        "text": "toyboot4e です。競プロ勢の黒魔術 Haskell を読んで、自分のテンプレートに取り込んで行きます。"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1677386703.392919",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\nImplementing Functional Languages:a tutorial の Exercise 3.35 はとりあえず自分なりに何とか実装できたつもりなので、\n確認して問題なさそうだったら、Exerceise 3.36 から、それが難しそうだったらスキップして、\n3.8.6 Using the new boolean representation in comparisons から進めようと思います。"
    },
    {
        "type": "message",
        "user": "U04NS1ZNSJK",
        "ts": "1677397171.356529",
        "text": "<@U04NS1ZNSJK> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04NS1ZNSJK",
        "ts": "1677397260.048529",
        "text": "mocamocaです。\nプログラミングHaskell第2版を読み進めます。"
    },
    {
        "type": "message",
        "user": null,
        "ts": "1677402076.896059",
        "text": ""
    },
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1677402368.638449",
        "text": "主な学び:\n- `ByteStringBuidler` への変換関数 (`intDec`, `floatDec`, ..) を型クラスで共通化する\n- `VU.backpermute` のように、ライブラリが提供する効率的な関数を利用する\n\n取り込めなかったもの:\n- `StateT` 型のパーサ\n- 整数剰余型\n- `vecToBuilder` などなど……"
    },
    {
        "type": "message",
        "user": "U04BD6ZFKQ8",
        "ts": "1677402516.537709",
        "text": "できたと思った Excercise 3.35 ですが、既存のテストプログラムが一部動かなくなっていて、デバッグしてました。\n誤動作の原因が1つ判明して対策したのですが、あくまでも対症療法という感じです。お恥ずかしい限りです。"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1677402691.392409",
        "text": "結局ほとんどmakeMistakesToLearnHaskellの続きをやったりサボったりしてました。進捗はこちら:\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/99df34672344e7f879d8323b4c6fa5792286b0a8>"
    },
    {
        "type": "message",
        "user": "U584T7GAH",
        "ts": "1677402838.091019",
        "text": "\"Recursion Schemes for Higher Algebras\" 読了　難解至極\n鉄則本 A52 - Queue　Data.Sequence の基本中の基本だった"
    },
    {
        "type": "message",
        "user": "U04NS1ZNSJK",
        "ts": "1677403400.068369",
        "text": "プログラミングHaskell 4章読んでいました"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1677404904.856149",
        "text": "自作言語，コメントと文字列リテラル，shebangの実装は完了しましたが，本丸のインデントまで辿り着けず．\n文字列リテラルのエスケープ処理が未完なので次回です．"
    }
]