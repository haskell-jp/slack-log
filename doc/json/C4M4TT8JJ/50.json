[
    {
        "ts": "1557763007.085000",
        "text": "<@UJQ5HAP8E> has joined the channel",
        "user": "UJQ5HAP8E",
        "type": "message"
    },
    {
        "ts": "1557788011.085900",
        "text": "`show`した結果をブラウザーで読めるようにしてくれるらしい。大きなデータ構造を読むときに便利そう。 <https://github.com/chrisdone/webshow>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1557834448.086300",
        "text": "どんな極意でしょう？ :kininaru:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1557887560.086700",
        "text": "30分で頑張ってまとめてみました！\n<https://gist.github.com/HirotoShioi/1ee8ff7b0eb21ca72ffe0d1a782da889>\n来月から極意をまとめて公開する作業を開始します。今月は色々と忙しいので無理そうです。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1557898610.087600",
        "text": "ihaskell要らなくなった説?(もとより使ってないけど)",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1557901304.089200",
        "text": "IHaskellブラウザー上で対話的にHaskellを実行したりデータ型の表示方法をカスタマイズしたりできるみたいなんで、webshowとは大分違うんじゃないかと思います。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1557916691.089600",
        "text": "<@UJPHLKMDJ> has joined the channel",
        "user": "UJPHLKMDJ",
        "type": "message"
    },
    {
        "ts": "1558072376.090200",
        "text": "ただのクイズです。暇つぶしにどうぞ :slightly_smiling_face:\n<https://twitter.com/waddlaw/status/1129201360312852480>\n<https://twitter.com/waddlaw/status/1129249930562772992>\n<https://twitter.com/waddlaw/status/1129254363518472192>\n<https://twitter.com/waddlaw/status/1129261164284637184>\n<https://twitter.com/waddlaw/status/1129261279074381824>",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1558075696.090600",
        "text": "おぉ！面白かったです！ :arigatougozaimasu:",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1558118977.000400",
        "text": "<@UJFL2FNFM> has joined the channel",
        "user": "UJFL2FNFM",
        "type": "message"
    },
    {
        "ts": "1558157976.000700",
        "text": "<@UJV7X56B1> has joined the channel",
        "user": "UJV7X56B1",
        "type": "message"
    },
    {
        "ts": "1558178988.000900",
        "text": "<https://mizunashi-mana.github.io/blog/posts/2019/05/ghc-io-inside/>\n\"このように， ST も IO と同じように特別なことはしておらず，既存の汎用的な仕組みを利用して，うまく実装されている\"\nすごい。だからPrimMonadみたいなIOとST両方を抽象化した型クラスなんて作れるのね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1558185074.001100",
        "text": "Haskell ってすげーって感動していたとき内部構造が気になって見てみたら Magic って書いてあって、あ！だからHaskellってバグ無いのね！と思ってたのはバグに出会う前でした",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1558320880.002600",
        "text": "可変長引数のtype familyを作れってことですかね。どうやるんでしょう。 :thinking_face:\nどなたか気が向いたらやってみてください（興味本位で、そんなに困ってもいないのでこちらのチャンネルで。）\n<https://twitter.com/Iceland_jack/status/1130226695921917962>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1558351704.003300",
        "text": "をを、ちょうど「あれ、なんで IO と ST ってどっちも使えるんだっけ、根源的にはもう一層下の仕掛けがあるってことか？」みたいな疑問をもったところでした^^;",
        "user": "UF8SE896V",
        "type": "message"
    },
    {
        "ts": "1558400616.003700",
        "text": "<@UJV4YDYAZ> has joined the channel",
        "user": "UJV4YDYAZ",
        "type": "message"
    },
    {
        "ts": "1558438449.004000",
        "text": "<@UJVGPMPFX> has joined the channel",
        "user": "UJVGPMPFX",
        "type": "message"
    },
    {
        "ts": "1558444416.005000",
        "text": "<https://engineering.itpro.tv/2019/05/21/announcing-the-haskell-weekly-podcast/>\n\"Announcing the Haskell Weekly podcast\" Haskell WeeklyのPodcast版をやるそうで。\n英語のリスニングの練習をしたいHaskellerのみなさんいかがでしょうか。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1558608761.006700",
        "text": "失敗系のMonadの使い方を中心に学んで、MonadやApplicativeへの理解を深める本らしい。\nHaskell全く知らない人向けではない。\n<https://leanpub.com/finding-success-in-haskell>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1558685573.000400",
        "text": "2019年初の日本語Haskell本？ <https://www.shoeisha.co.jp/book/detail/9784798158662>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1558685814.000600",
        "text": "目次\n```\nユニット1　関数型プログラミングの基礎 \nユニット2　型の紹介 \nユニット3　型を使ったプログラミング \nユニット4　I/Oを使う \nユニット5　コンテキストにおいて型を使う \nユニット6　コードの整理とプロジェクト構成 \nユニット7　応用：Haskellプログラミング\n```\nわかりやすそうな本ですね~",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1558685947.000800",
        "text": "この本の翻訳っぽいですね\n<https://www.amazon.co.jp/dp/1617293768>",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1558691271.001600",
        "text": "あれ、ぼくが知っているカバーじゃない。最終版でこのシリーズになったのか。",
        "user": "U4M5CACDD",
        "type": "message"
    },
    {
        "ts": "1558925430.002800",
        "text": "<@U4KUNQF9N> <https://wiki.hask.moe/> の証明書がまた切れてしまっているようです... :sob: :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1558925633.003400",
        "text": "<@U4LGTMTMK> あら…今更新しました。いいかげんhaskell-shoenに統合するか…",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1558963421.003800",
        "text": "<@UJPKD2R2P> has joined the channel",
        "user": "UJPKD2R2P",
        "type": "message"
    },
    {
        "ts": "1559004035.004800",
        "text": "各位、某所で Haskell (GHCJS) について話す機会があったので、スライドの最後で Haskell Day 2019 についても宣伝しておきました。<https://twitter.com/y_taka_23/status/1133170386441363457>",
        "user": "U4M4XHKB8",
        "type": "message"
    },
    {
        "ts": "1559009020.005400",
        "text": "<@UJQ0WEJG2> has joined the channel",
        "user": "UJQ0WEJG2",
        "type": "message"
    },
    {
        "ts": "1559036793.007900",
        "text": "Haskell Quiz です\n今回は ``foo`` についてです\n<https://twitter.com/kakkun61/status/1133303689576210432>\n<https://twitter.com/kakkun61/status/1133304710163644416>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1559036903.008400",
        "text": "「`」のせいでうまい表示にならない（全角のバックチックを使う裏技があるんだけど",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1559094017.015900",
        "text": "<https://haskell-jp.slack.com/customize/loading> に書いてある\n&gt; 《関数のApplicative》`\\x -&gt; f (g x) (h x)`は、`f &lt;$&gt; g &lt;*&gt; h`とも書ける。\nがすごい役に立った。\n\n:point_down: みたいな感じの、callbackをたくさん入れたデータ型があって、\n```\ndata Handlers = Handlers\n  { handleFoo :: Foo -&gt; IO ()\n  , handleFooBar :: Foo -&gt; Bar -&gt; IO ()\n  , handleBar :: Bar -&gt; IO ()\n  -- ...\n  }\n```\n「必ず呼ばれる処理（ライブラリー側が提供）」の後に「ユーザーが設定した `Handlers` を呼ぶ」みたいなことを表現しようとして\n```\nHandlers\n  { handleFoo = (&gt;&gt;) &lt;$&gt; baseHandleFoo &lt;*&gt; handleFoo userHandlers\n  , handleFooBar = (&gt;&gt;) &lt;$&gt; baseHandleFooBar &lt;*&gt; handleFooBar userHandlers\n  , handleBar = (&gt;&gt;) &lt;$&gt; baseHandleBar &lt;*&gt; handleBar userHandlers\n  -- ...\n  }\n```\n\nと書けた。当たり前っちゃ当たり前なんだけど、各レコードラベルに入れる関数の引数の数や型がバラバラでも、ちゃんと関数Applicativeとして扱ってくれるのすごい。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1559118620.017100",
        "text": "<@UJRDL35U3> has joined the channel",
        "user": "UJRDL35U3",
        "type": "message"
    },
    {
        "ts": "1559265453.001600",
        "text": "ところで上のような全フィールドが同じような型を持つレコードを扱うアプローチはhigher-kinded dataと呼ばれていますが、最近Genericsを応用した新しいライブラリができたそうです <https://github.com/i-am-tom/higgledy>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1559265747.002000",
        "text": "i-am-tom",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1559268125.002800",
        "text": "既に定義されてるレコードを後からhigher-kinded dataにできるの便利そうですね~\n```\ndata User\n  = User\n      { name :: String\n      , age  :: Int\n      , ...\n      }\n  deriving Generic\n\n-- HKD for free!\ntype UserF f = HKD User f\n```",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1559272358.005100",
        "text": "先週のHaskell Weeklyに（たしか）あった <https://chrispenner.ca/posts/hkd-options> の話ですね！\n結構また似たパッケージが出てきましたね... :sweat_smile:\n私が知っている限りbarbiesとczipwithか。でも既存のレコードをHKDにできるのいいですね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1559278635.006200",
        "text": "extensibleとは別に <https://github.com/fumieval/moldable> というのも作ってました",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1559362819.006800",
        "text": "かなり出遅れましたが、heapsも欲しいです",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1559363754.007100",
        "text": "ありがとうございます。更新しました。\n<https://gist.github.com/waddlaw/b6a14d4dbc94d282a175abe7f9596ae7>\n\n- ライブラリ案に `heaps` を追加。\n- 環境構築方法についての案として Dockerfile を4種類追加しました。(ベースイメージは 18.04 LTS を仮で利用)\n- Haskell (AtCoder) に関するリソースにリンクを2件追加しました。\n- 環境構築方法によるコンパイル時間の比較を追加しました。",
        "user": "U5B3EGEFQ",
        "type": "message"
    }
]