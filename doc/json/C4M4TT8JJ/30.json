[
    {
        "ts": "1542213101.104100",
        "text": "`skip-msys` は試したことなかったですね。\nなるほど。\nとはいえ、やること同じになりそう。\n今回は hsexif を使おうとしたら iconv に依存していたのでした",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1542213508.104300",
        "text": "今更気づいたんですが、iconv 不依存でビルドするフラグが用意されていた\n<https://www.stackage.org/haddock/lts-12.18/hsexif-0.6.1.6/Graphics-HsExif.html>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1542320147.104900",
        "text": "<@UE51MD4E6> has joined the channel",
        "user": "UE51MD4E6",
        "type": "message"
    },
    {
        "ts": "1542322668.105500",
        "text": "\"This book aims to be the comprehensive manual for type-level programming\" <https://leanpub.com/thinking-with-types/>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1542341440.105900",
        "text": "<@UE4JVGDRP> has joined the channel",
        "user": "UE4JVGDRP",
        "type": "message"
    },
    {
        "ts": "1542428355.107900",
        "text": "Dhall 移植作業、だいたいわかったので雑に作った\n<https://github.com/matsubara0507/yaml-to-dhall>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1542596772.110100",
        "text": "DhallのC/C++バインディングって存在してないんですね。 `hsc2hs` でCとHaskellの型をそれぞれ生成して、C/C++からFFIすれば読めそうなイメージ",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1542596795.110600",
        "text": "Dhall布教のために、ちょっと検証してみましょうか",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1542598436.113100",
        "text": "…と思ったのですが、Haskellの `data` で定義した型をCから読めるようにするのは `hsc2hs` では出来なさそうでした",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1542603305.113800",
        "text": "Dhall のコメントアウトって冒頭しか残らないのか、フォーマッターとかで",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1542603505.114000",
        "text": "dhall format の仕様でそうなっていますね",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1542603613.115100",
        "text": "AST構築の関係でそうなっているっぽい？ <https://github.com/dhall-lang/dhall-haskell/issues/145>",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1542603962.116300",
        "text": "なるほどコメントアウトを保持して整えるのって大変なのか",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1542606084.116900",
        "text": "<https://taylor.fausak.me/2018/11/18/2018-state-of-haskell-survey-results/#>\nグラフとその下にある表のパーセンテージが全然噛み合ってないように見える（多分未回答の人の分もカウントしてるから？）から最初戸惑った。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1542682272.117300",
        "text": "<@UE7LADZQT> has joined the channel",
        "user": "UE7LADZQT",
        "type": "message"
    },
    {
        "ts": "1542694337.118100",
        "text": "各回のHaskell Dayのページを作っていただきました！\n<https://wiki.haskell.jp/Workshop/HaskellDay/2018>\n<https://wiki.haskell.jp/Workshop/HaskellDay/2016>\n<https://wiki.haskell.jp/Workshop/HaskellDay/2012>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1542770014.119700",
        "text": "Hasパターン使うと、env を共有できるのか（していいのかはわからないけど）",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1542785814.120000",
        "text": "<@UE8N92RKN> has joined the channel",
        "user": "UE8N92RKN",
        "type": "message"
    },
    {
        "ts": "1542797416.124500",
        "text": "Haskell-jpではプロジェクトのビルドといえばstackが定番ですが、最近cabal-installはNix-style local buildという、依存関係をプロジェクト単位で管理する仕組みが充実してきています。そこで、ディスク使用量削減も兼ねて私のstack関係のデータを全消しし、代わりにcabal new-buildでビルドしてみる、名付けて「脱stack計画」の実行を宣言します。このスレッドで経過を報告するのでお楽しみに",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1542807324.127200",
        "text": "ダツスタ",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1542808571.128500",
        "text": "僕もしばらくcabal new-buildをメインに使っています。ライブラリを作る人は複数バージョンのGHCが試しやすいのでおすすめします。/opt/ghcにいろんなバージョンのGHCをインストールしてPATHを通しておき、-w ghc-8.6.2とオプションを渡すだけでバージョンを切り替えられて便利です。",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1542808902.131900",
        "text": "個人的な印象では不可解なビルドエラーに悩まされることがcabalの方が少ない、複数バージョンのGHCを切り替えやすい、backpackやパッケージ内複数ライブラリの対応など最新の機能がcabalから実装されること、プロファイルや最適化オプションの変更時などstackでは適切にリビルドしてくれないことが多かったことなどからnew-buildがメインになりました",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1542813365.133100",
        "text": "実はstackしか使わず、cabal hellを伝え聞くだけの身としてcabalをなまで扱うのは恐れがあったりします",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1542834333.136700",
        "text": "そうそう意外と、cabalも昔ほど地獄じゃなくなったんですよね。 ただ、stackを使う利点だなと思ってる事は、stack.yaml が与えられらプロジェクトでは安定したビルドが得られる (allow-newer が指定されてる場合を除く)事だと思ってるんですよね。 まぁ、正確にはcabalだけでも同じ事は出来ますが、build-dependsを全部正確に書いてるプロジェクトをそこまで見た事ないですね。",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1542837525.137600",
        "text": "cabalの場合はビルドが成功した時点でcabal new-freezeすると依存バージョンを固定できます",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1542839656.138700",
        "text": "`stack build --file-watch` 相当のものってあるんですかね。（まぁ、なくても他のアプリで代替できるでしょうけども）",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1542840709.138900",
        "text": "ないと思います",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1542842423.140200",
        "text": "ghcid 使えば、それっぽい事は出来るんじゃ？。。。ってあれ？これじゃ、stackの存在意義って。。？",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1542843348.141300",
        "text": "ghcidねぇ、プロジェクトによってはstack build --fastの方が速かったりもしたり、必ずしもイケてるとは思えないんですよねぇ。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1542843517.143800",
        "text": "いずれにしても、「必ずビルドできるバージョン群」を提供する本来のStackage（と、その簡単なクライアントであるstack）の意義はなくならないと思いますよ。一発でビルドできない場合もあるでしょうから。\nそのうち置き換えられる可能性は確かにあると思いますが",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1542856023.146300",
        "text": "たしかstackのモチベーションとしてライブラリ作者は自分で依存マネージができるけどユーザや初心者はそうではないから…というのがあった記憶が",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1542870218.148400",
        "text": "この辺りですよね？書いてあることを読んだら Stack でやっていることと同じでびっくりでした <https://www.haskell.org/cabal/users-guide/nix-local-build-overview.html>",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1542870347.150400",
        "text": "あ、後、githubにホストされているライブラリに依存する機能が代替できるか気になります",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1542870417.150600",
        "text": "出来ます <https://cabal.readthedocs.io/en/latest/nix-local-build.html?highlight=source-repository-package#specifying-packages-from-remote-version-control-locations>",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1542887570.152100",
        "text": "脱スタ1日目: .stackと.stack-workを削除。.stackは19GB、各プロジェクトの.stack-workは合わせると9.6GBで、合計およそ29GBの領域を食っていました。~/.stack/config.yamlを残しておさらば :wastebasket:",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1542915122.153300",
        "text": "<@UEBLMNJP8> has joined the channel",
        "user": "UEBLMNJP8",
        "type": "message"
    },
    {
        "ts": "1542960246.154000",
        "text": "脱スタ2日目: ghcup (<https://github.com/haskell/ghcup>) を使う。ghcupスクリプトを適当な所にダウンロードし、 `ghcup install 8.4.4` とかを実行すればインストールしてくれる。そして `ghcup install-cabal` でcabal-installをインストール",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1543021792.156600",
        "text": "やはりdep hellに遭遇する頻度と、解決への労力が気になる:eyes:\nnew-freezeいいな",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1543062992.157400",
        "text": "脱スタ3日目: 手元にある自分のライブラリはだいたいcabal new-buildでビルドできました。stackと違ってプリコンパイルされたものは使わないので最初はゆっくりですが、resolverごとにビルドする必要はないため、パッケージが揃ってくるとどんどんサクサク感が出てきます",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1543136069.158100",
        "text": "<@UEB81R18T> has joined the channel",
        "user": "UEB81R18T",
        "type": "message"
    },
    {
        "ts": "1543144412.158400",
        "text": "<@UEB8VS15H> has joined the channel",
        "user": "UEB8VS15H",
        "type": "message"
    },
    {
        "ts": "1543158472.158700",
        "text": "<@UEBAETNPM> has joined the channel",
        "user": "UEBAETNPM",
        "type": "message"
    },
    {
        "ts": "1543197675.161500",
        "text": "Google なんかはオープンにしないコードは single repository で管理しているという話があり、そういう環境では stack で外部の依存合意を使う必要はないので cabal-install で自前依存管理するのが妥当だなあという気がしてきました。",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1543242260.163800",
        "text": "そう言えば、思い出したんですけど、 intero ってcabalだけで出来ますかね？ intero に慣れすぎてあれなしでは生きられない(?)んですけど、、、",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1543273882.164700",
        "text": "私が調べた時点ではstack必須だったはずです。だからあれは手出したくないんですよねぇ :disappointed_relieved:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1543274417.165300",
        "text": "クロスコンパスのHaskeller募集。日本人も募集しているかは定かではないですが共有しておきます。\n<https://www.reddit.com/r/haskell/comments/a0iq61/job_cross_compass_is_currently_hiring_haskell/>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1543284975.169700",
        "text": "こんにちは、クロスコンパスの kayhide です。\n\n日本人も募集しています。\nチームには外国人もいるのですが、みなさんかなり日本語を喋れますので、英語力に自信がなくても大丈夫です。\n“Ideal candidate”のところは高すぎる理想像なので、満たしていない方でも全然大丈夫です。（外国人むけに、そこは強気でだしています）\n興味がある、もっと詳しく聞きたい、などありましたら気軽に DM してください。\n東京近傍であれば、ランチ食べながらでもお話しましょう！",
        "user": "U4LNDESN8",
        "type": "message"
    },
    {
        "ts": "1543285176.170100",
        "text": "応募自体は日本語でも大丈夫です！",
        "user": "U4LNDESN8",
        "type": "message"
    },
    {
        "ts": "1543301711.171300",
        "text": "<@UEC0PN1PA> has joined the channel",
        "user": "UEC0PN1PA",
        "type": "message"
    }
]