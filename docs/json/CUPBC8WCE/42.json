[
    {
        "text": "ose20です．\nこちら (<http://www.nct9.ne.jp/m_hiroi/func/haskell09.html>) のお気楽 Haskell プログラミング入門というサイトを参考にしながら色々なパズルを解くプログラムを Haskell で書いてみます．",
        "type": "message",
        "ts": "1644725099.876789",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "チェシャ猫です。今更ですが in します。前回 Gloss の概要はわかったので、表示は一旦置いといて今日はゲームのロジック部分を粛々と進めてます。",
        "type": "message",
        "ts": "1644738691.835019",
        "user": "U4M4XHKB8"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1644742909.790329",
        "user": null
    },
    {
        "text": "makeMistakesToLearnHaskellの成果:\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/2e61e4372dd43ab76bb347121c72c047cdde37bc>\ncabal replについて: cabal replやstack replが `ghc --interactive` に渡すオプションを参考に、 `stack repl` がやっていることを `ghc --interactive` を直接起動することで再現できるか試してみてます。思ったより難しい。",
        "type": "message",
        "ts": "1644743098.554709",
        "user": "U4LGTMTMK"
    },
    {
        "text": "1 時間ぐらいしかやってないですが、とりあえずコマンドが一つ追加できました。`RIO.Vector` が破壊的更新をエクスポートしていないので、そこだけ `Data.Vector.Generic.Mutable` を直接インポートするという邪道に出ています。",
        "type": "message",
        "ts": "1644743522.581639",
        "user": "U4M4XHKB8"
    },
    {
        "text": "お気楽 Haskell 入門のパズルの解法の部分を読んでいました．\n紹介されている関数の (++) を使わない実装を試してみたり，中にはそれで実行速度が速くなったのもあって楽しかったです．例えば concatNumber という数字のリストを分解する関数が速くなりました:blush:\n```-- 例: concatNumber' [1..3] = [[1,2,3],[1,23],[12,3],[123]]\nconcatNumber' :: [Int] -&gt; [[Int]]\nconcatNumber' xs = aux xs id [] where\n  aux [] _ _          = []\n  aux [x] f cum       = f [x] : cum\n  aux (x:y:zs) f cum  = aux (y:zs) (f . (x:)) (aux ((10*x+y):zs) f cum)```",
        "type": "message",
        "ts": "1644743633.085739",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1645329781.895589",
        "user": null
    },
    {
        "text": "山本悠滋です。いつもどおりのmakeMistakesToLearnHaskellの続きと、 <https://www.youtube.com/watch?v=fwoXXLmUiU8> の配信で今ぶち当たっている問題について解決方法を探ります。",
        "type": "message",
        "ts": "1645329798.040959",
        "user": "U4LGTMTMK"
    },
    {
        "text": "ose20です．今回も『お気楽Haskell』の記事を読みながらプログラムを書いてみます．アルゴ式でSTモナドを使ったプログラムを書きたいのでその辺を読みます",
        "type": "message",
        "ts": "1645330112.605329",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "wai-sampleの問題の解決... の前段階として、ファイルの分割を行いました。\n<https://github.com/igrep/wai-sample/commit/2c5d6766bf10b41ba8d792b970d317042daf6c58>",
        "type": "message",
        "ts": "1645347721.449649",
        "user": "U4LGTMTMK"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1645347740.692209",
        "user": null
    },
    {
        "text": "WriterモナドやReaderモナドを自分で作ったり，プログラムの部分項まで丁寧に型を追ったりしていました．以前触れたときより結構理解が進んで楽しかったです．",
        "type": "message",
        "ts": "1645347869.037779",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "あと、参考ライブラリーとしてworld-pieceというパッケージのソースを読んでました。良くも悪くも依存が少なく、拡張可能和に必要なコードが1ファイルにまとまっていて読みやすいです。\n<https://github.com/cdepillabout/world-peace/blob/master/src/Data/WorldPeace/Union.hs>",
        "type": "message",
        "ts": "1645347871.386259",
        "user": "U4LGTMTMK"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1645848162.427529",
        "user": null
    },
    {
        "text": "いつもどおりmakeMistakesToLearnHaskellの続きと、余裕があれば <https://twitter.com/igrep/status/1490285921966903301> の件の続きをやります。",
        "type": "message",
        "ts": "1645848441.759649",
        "user": "U4LGTMTMK"
    },
    {
        "text": "アルゴ式で動的計画法の問題をHaskellで解いていきます．制約的に素朴な実装でもまだ間に合いますが，ST sモナドの使い方を覚えたいのでこれを使ってたくさん問題を解きたいです．",
        "type": "message",
        "ts": "1645848534.246669",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1645866090.824829",
        "user": null
    },
    {
        "text": "アルゴ式の動的計画法の部分を，ST sモナドを使って解いたり，Data.List の関数をうまく使って簡潔に書く方法を色々と試しました．段々とST sモナドを使った書き方やhaddockを読むのにも慣れてきて今はHaskellでプログラムを書くのがとても楽しいフェイズです:blush:",
        "type": "message",
        "ts": "1645866319.135949",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "Haskell-jp関係の雑務をした後、makeMistakesToLearnHaskellの続きを書いてました。コミットは後ほど",
        "type": "message",
        "ts": "1645866338.690209",
        "user": "U4LGTMTMK"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1646539349.331459",
        "user": null
    },
    {
        "text": "先週と同様Haskell-jp関係の雑務の続きをやった後、makeMistakesToLearnHaskellの続きと、余裕があれば <https://twitter.com/igrep/status/1490285921966903301> の件の続きをやります。",
        "type": "message",
        "ts": "1646539636.652799",
        "user": "U4LGTMTMK"
    },
    {
        "text": "Graham Huttonの“Monadic Parser Combinators”という論文を読みます．これを理解することと，実践としてアルゴ式の正規表現の問題を解いたり簡単なプログラミング言語のパーサを作ることを目標にやっていきます．",
        "type": "message",
        "ts": "1646540214.183739",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "\"Haskell In Depth,\" Bragilevski V., (Manning 2021), Ch. 6. Structuring programs with monad transformers",
        "type": "message",
        "ts": "1646540340.827029",
        "user": "U584T7GAH"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1646557294.241889",
        "user": null
    },
    {
        "text": "Haskell-jp Slack Workspaceについてのアナウンスと、makeMistakesToLearnHaskellの続き <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/4cb747fce654cf19fc19d424814a5fcebf589364> と、cabal replの件を進めました。cabal replの件はcabal.projectの構文エラーで思いのほか苦戦しました :sweat_drops:",
        "type": "message",
        "ts": "1646557664.499239",
        "user": "U4LGTMTMK"
    },
    {
        "text": "用事があってフルで時間取れなかったのですが，論文の3章まで読みました．このままもう少し読み進めます:writing_hand:",
        "type": "message",
        "ts": "1646557692.642379",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "<@U036M5J21N2> has joined the channel",
        "type": "message",
        "ts": "1647143952.498189",
        "user": "U036M5J21N2"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1647144156.057909",
        "user": null
    },
    {
        "text": "山本悠滋です。unicode-showのリファクタリング（とエクスポートする関数の整理）makeMistakesToLearnHaskellの続きをします。",
        "type": "message",
        "ts": "1647144297.511559",
        "user": "U4LGTMTMK"
    },
    {
        "text": "初めましてhakamoriです。Haskellに少し興味があったので参加してみました！\nHaskell経験は全くないので、コード書きながら文法を覚えようと思います。",
        "type": "message",
        "ts": "1647144397.838459",
        "user": "U036M5J21N2"
    },
    {
        "text": "おっ。適当なボイスチャンネルに常駐してますんで、何か口頭で聞きたくなったらどうぞ",
        "type": "message",
        "ts": "1647144683.686769",
        "user": "U4LGTMTMK"
    },
    {
        "text": "ありがとうございます",
        "type": "message",
        "ts": "1647144712.678539",
        "user": "U036M5J21N2"
    },
    {
        "text": "\"Haskell In Depth,\" Bragilevski V., (Manning 2021), Ch. 9. Haskell data and code at run time.",
        "type": "message",
        "ts": "1647145429.479499",
        "user": "U584T7GAH"
    },
    {
        "text": "遅れました！先週に引き続きGraham Hutton, Erik Meijer “Monadic Parser Combinators”を読みます:relieved:",
        "type": "message",
        "ts": "1647145522.358159",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "ご飯食べるのでボイスチャンネルから抜けますね。（通常こんな告知をする必要は全くありませんが、今回は「ボイスチャンネルに常駐する」と予告したので）",
        "type": "message",
        "ts": "1647153054.533899",
        "user": "U4LGTMTMK"
    },
    {
        "text": "戻りました :white_check_mark:",
        "type": "message",
        "ts": "1647158375.596059",
        "user": "U4LGTMTMK"
    },
    {
        "text": "参考までに、開発環境をどのようにしているか聞いていいでしょうか？\n僕は最初scoopでstack入れてたんですけど、nixが使えないのがわかりました。\nとりあえずアンインストールして、(dockerと迷いましたが）wslで環境構築し直そうかと考えてます。",
        "type": "message",
        "ts": "1647159906.638039",
        "user": "U036M5J21N2"
    },
    {
        "text": "nix、個人的には余り好きじゃないし敢えてこだわる必要もないかなぁと思います。",
        "type": "message",
        "ts": "1647160495.774429",
        "user": "U4LGTMTMK"
    },
    {
        "text": "私はChocolateyで入れたstackを使っていますが、おいおいghcupとcabalですべて賄うよう切り替える予定です。",
        "type": "message",
        "ts": "1647160557.266039",
        "user": "U4LGTMTMK"
    },
    {
        "text": "misoっていうweb frameworkを試そうと思ったんですが、それがnixでbuildするみたいでして…",
        "type": "message",
        "ts": "1647161115.369759",
        "user": "U036M5J21N2"
    },
    {
        "text": "あぁー、GHCJSが絡むとnixは確かに事実上必須らしいですねぇ :weary:\nGHCJS自体がそれでなくとも茨の道、という印象なので、試してみてもいいですが余り期待しない方がいいかもしれません。",
        "type": "message",
        "ts": "1647161251.007789",
        "user": "U4LGTMTMK"
    },
    {
        "text": "なるほど。ありがとうございます。\n微妙かもしれませんが、満足するまでいじってみようと思います。",
        "type": "message",
        "ts": "1647161482.271669",
        "user": "U036M5J21N2"
    },
    {
        "text": "GHC 9.4からだったか、GHCにJSバックエンドができてGHCJSが事実上統合される、という話も伺っているのでそれでマシになるといいんですが（ソースがパッとググって出てこないな...",
        "type": "message",
        "ts": "1647161515.914379",
        "user": "U4LGTMTMK"
    },
    {
        "text": "これだ <https://gitlab.haskell.org/ghc/ghc/-/issues/21078>\nGHC 9.4ではなさそう",
        "type": "message",
        "ts": "1647161808.575999",
        "user": "U4LGTMTMK"
    },
    {
        "text": "",
        "type": "message",
        "ts": "1647162082.377729",
        "user": null
    },
    {
        "text": "文法は少しわかりましたが、ほとんどの時間を開発環境について調べるのにつかってしましました…( ; ω ; )\n次参加するなら、もう少し進めたいです。",
        "type": "message",
        "ts": "1647162369.309229",
        "user": "U036M5J21N2"
    },
    {
        "text": "unicode-showパッケージのリファクタリングをしてます。テストが通らねぇ。\n<https://twitter.com/igrep/status/1502933999937007620>",
        "type": "message",
        "ts": "1647162378.122309",
        "user": "U4LGTMTMK"
    },
    {
        "text": "論文の4章までを読んでいました．たくさんプログラムが出てくるので自分で手も動かせていい感じです",
        "type": "message",
        "ts": "1647162929.175899",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "<@U036M5J21N2> Nix は Windows に対応してませんねえ",
        "type": "message",
        "ts": "1647178589.273059",
        "user": "U4L0B71L1"
    }
]