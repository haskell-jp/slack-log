[
    {
        "text": "`Bifunctor`  って第一引数を固定すると `Functor`  になると思うんですが，そういうインスタンス定義は提供されてないみたいなので，\n```instance Bifunctor f =&gt; Functor (f a) where\n  fmap = second```\nと書いてみるとこれはコンパイル通りません．エラーメッセージは\n```[1 of 1] Compiling Main             ( adv.hs, interpreted )\n\nadv.hs:70:25: error:\n    • Illegal instance declaration for 'Functor (f a)'\n        (All instance types must be of the form (T a1 ... an)\n         where a1 ... an are *distinct type variables*,\n         and each type variable appears at most once in the instance head.\n         Use FlexibleInstances if you want to disable this.)\n    • In the instance declaration for 'Functor (f a)'\n   |\n70 | instance Bifunctor f =&gt; Functor (f a) where\n   |                         ^^^^^^^^^^^^^\nFailed, no modules loaded.```\nで，指示通り `{-# LANGUAGE FlexibleInstances #-}` をつけるとコンパイルは通りますが，デフォルトだとなんでこんな制約があるんでしょう？",
        "type": "message",
        "ts": "1637817370.043200",
        "user": "U02NV1XHYBT"
    },
    {
        "text": "質問失礼します．\nRPELで\n```hoge 0 = 0\nhoge 1 = 1\nhoge x = hoge (x-1) + hoge (x-2)```\nを定義する方法はありますか?caseを使うしかないのでしょうか?\nこのように定義すると，単に関数の定義を上書きしているとみなされてしまいます．",
        "type": "message",
        "ts": "1638018727.046600",
        "user": "U01TZ1XM7MG"
    },
    {
        "text": "質問連投すみません．\nこちらをMain.hsに入力しました：\n```hoge 0 = 0\nhoge 1 = 1\nhoge x = hoge (x-1) + hoge (x-2)```\nREPLを起動してロードしても，定義されていないことになっており，行き詰まってしまいました．．．\n```Resolving dependencies...\nBuild profile: -w ghc-8.10.4 -O1\nIn order, the following will be built (use -v for more details):\n - fake-package-0 (lib) (first run)\nConfiguring library for fake-package-0..\nPreprocessing library for fake-package-0..\nWarning: No exposed modules\nGHCi, version 8.10.4: <https://www.haskell.org/ghc/>  :? for help\nLoaded GHCi configuration from /var/folders/xq/fpvgsjwd3ms24_w3lwl_4d780000gn/T/cabal-repl.-18964/setcwd.ghci\nPrelude&gt; :l Main\n[1 of 1] Compiling Main             ( Main.hs, interpreted )\nOk, one module loaded.\nPrelude&gt; hoge 5\n\n&lt;interactive&gt;:2:1: error: Variable not in scope: hoge :: t0 -&gt; t\nPrelude&gt; ```\n",
        "type": "message",
        "ts": "1638020585.048800",
        "user": "U01TZ1XM7MG"
    },
    {
        "text": "<@U02NV8V2EEQ> has joined the channel",
        "type": "message",
        "ts": "1638084178.049800",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "Calculate Polytypically! にある crush 演算子を Haskell で定義したい人です．本当は依存型のような仕組みを使って n-ary functor を扱いたかったのですが，よくわからなかったため，とりあえず論文にある例を動かすためには Bifunctor まで扱えればいいかなということで，<https://haskell-jp.slack.com/archives/CR2TETE5R/p1637818267043300?thread_ts=1637817370.043200&amp;cid=CR2TETE5R|このへん> を参考にしつつ書いてみました．たぶん動いてはいるんですが，これ以前に書いた Haskell のコードが Hutton 本 2 の演習問題くらいしかないので，Haskell らしい良い書き方というものがわからず，いまいち自信がもてません．ぱっと見で改善点があれば教えてほしいです．コードはスレッドにぶら下げておきます．",
        "type": "message",
        "ts": "1638431774.056900",
        "user": "U02NV1XHYBT"
    },
    {
        "text": "<@U02PHQ2D9D0> has joined the channel",
        "type": "message",
        "ts": "1638601411.058300",
        "user": "U02PHQ2D9D0"
    },
    {
        "text": "はじめまして\n1年くらい前にすごいH本を買って読んで辞めてを数回繰り返してたくらいの知識です。\n今度こそちゃんと勉強しようとまず環境をそろえているのですが、VSCodeのHaskellの拡張機能がインテリセンスをしてくれないです。。\n初歩にすら立っていない質問で恐縮ですが、どなたかご教示いただけますと幸いです。\n環境はubuntu18.04のPCにRemote Developerで接続しています。\nhaskellは良く調べずに初めにapt installで古いhaskellをインストールしてから拡張機能が動かないのでghcupでインストールした次第です。\n何卒宜しくお願い致します。",
        "type": "message",
        "ts": "1638601966.063500",
        "user": "U02PHQ2D9D0"
    },
    {
        "text": "<@U02P4JW563Z> has joined the channel",
        "type": "message",
        "ts": "1638711222.065000",
        "user": "U02P4JW563Z"
    },
    {
        "text": "<@U02PMKJTR8S> has joined the channel",
        "type": "message",
        "ts": "1638792128.065500",
        "user": "U02PMKJTR8S"
    },
    {
        "text": "別に質問じゃないんですが，Pearls of Functional Algorithm Design って超むずくないですか．最初の章からわからないことばかり．（比較対象として言うと，Programming in Haskell 2nd Edition は補遺を除いてわからないと思うことがほとんどありませんでした．身についたかは別として．）",
        "type": "message",
        "ts": "1639026447.067800",
        "user": "U02NV1XHYBT"
    },
    {
        "text": "`flip (.)` の名称として一番よく使われているものってなんでしょうか",
        "type": "message",
        "ts": "1639027158.069100",
        "user": "U015L5JEP8D"
    },
    {
        "text": "`$` と`.`の使い分けのポイントはありますでしょうか？\n以下のような例ではどちらの書き方も可能で結果も同じになります。\n```list :: [Int]\nlist = [1..3]\nf :: Int\nf = sum . map (+2) $ list\ng :: Int\ng = sum $ map (+2) list```\nhaskellの拡張機能のインテリセンスも特に何もサジェストしてくれないので好みでいい感じなのでしょうか。",
        "type": "message",
        "ts": "1639064116.075200",
        "user": "U02PHQ2D9D0"
    },
    {
        "text": "<@U02RB7KA56Y> has joined the channel",
        "type": "message",
        "ts": "1639806628.075900",
        "user": "U02RB7KA56Y"
    },
    {
        "text": "`unsafePerformIO` は禁断だとか型安全性を壊すとかヤバいとかいう話はよく見かけるのですが、実際に`unsafePerformIO` が使われる場面ってどんなのがあるのでしょうか",
        "type": "message",
        "ts": "1639932574.077200",
        "user": "U015L5JEP8D"
    },
    {
        "text": "<@U02RQ8E76DP> has joined the channel",
        "type": "message",
        "ts": "1639977076.093100",
        "user": "U02RQ8E76DP"
    },
    {
        "text": "<@U02RZNLGUV7> has joined the channel",
        "type": "message",
        "ts": "1640130779.093600",
        "user": "U02RZNLGUV7"
    },
    {
        "text": "今日のAtCoder の AtCoder Beginner Contest 233で `StateT (MaybeT (ST s))` モナドを使い、\n\n```lift . MaybeT . return :: Maybe a -&gt; StateT (MaybeT (ST s)) a```\nを捻り出すのに割と時間を取られてしまったのですが、もうちょっと簡単な書き方ってありますか？",
        "type": "message",
        "ts": "1640444272.097200",
        "user": "UL1HFJATE"
    },
    {
        "text": "<@U02RVSD1XC5> has joined the channel",
        "type": "message",
        "ts": "1640473345.097700",
        "user": "U02RVSD1XC5"
    },
    {
        "text": "<@U02SP3AHZEC> has joined the channel",
        "type": "message",
        "ts": "1640526502.104200",
        "user": "U02SP3AHZEC"
    },
    {
        "text": "<@U02RKUT28TH> has joined the channel",
        "type": "message",
        "ts": "1640592968.104400",
        "user": "U02RKUT28TH"
    },
    {
        "text": "<@U02S5NRT8QL> has joined the channel",
        "type": "message",
        "ts": "1640678102.104700",
        "user": "U02S5NRT8QL"
    },
    {
        "text": "<@U02S0UVRQH3> has joined the channel",
        "type": "message",
        "ts": "1640688274.105200",
        "user": "U02S0UVRQH3"
    },
    {
        "text": "<@U02RPSLC4MV> has joined the channel",
        "type": "message",
        "ts": "1640702922.105400",
        "user": "U02RPSLC4MV"
    },
    {
        "text": "<@U02S6LB73C2> has joined the channel",
        "type": "message",
        "ts": "1640767554.105600",
        "user": "U02S6LB73C2"
    },
    {
        "text": "Haskellで、MonadThrowのthrowMをhspecでテストするときにcatchしたいのですが、いうならばshouldcatchのような関数はありますか？",
        "type": "message",
        "ts": "1640875616.107200",
        "user": "UQERMQX8W"
    },
    {
        "text": "いまLinux環境にHaskellのツール一式を導入したいとおもったら何を使うのがよさげですか",
        "type": "message",
        "ts": "1641006950.108400",
        "user": "U015L5JEP8D"
    },
    {
        "text": "<@U02RZTDNVFH> has joined the channel",
        "type": "message",
        "ts": "1641085373.117100",
        "user": "U02RZTDNVFH"
    },
    {
        "text": "<@U02T0K000AV> has joined the channel",
        "type": "message",
        "ts": "1641308127.117500",
        "user": "U02T0K000AV"
    },
    {
        "text": "質問失礼します\nstack buildをしてもError encountered while unpacking GHC with\n         tar jxf /Users/basechange/.stack/programs/x86_64-osx/ghc-8.10.7.tar.bz2\n         run in /Users/basechange/.stack/programs/x86_64-osx/ghc-8.10.7.temp/\n       The following directories may now contain files, but won't be used by stack:\n         - /Users/basechange/.stack/programs/x86_64-osx/ghc-8.10.7.temp/\n         - /Users/basechange/.stack/programs/x86_64-osx/ghc-8.10.7/\n       というエラーが出てしまいました\n次に何をしたら良いのか教えていただけないでしょうか？",
        "type": "message",
        "ts": "1641642723.002800",
        "user": "U018KEA7Y83"
    },
    {
        "text": "質問内容: stack と cabal のどちらを使う方が良いでしょうか？\n迷っている理由: 読みたい本ではstackがお薦めされているのでこちらを使いたいが、M1 mac で無事に遂行できるか心配\n\n初めまして。型システムや関数型言語に対する興味からHaskell に惹かれて入門中です。『Programming in Haskell』を読んだあと、次はより実践的なアプリを作ってみたく『Haskell入門』を読もうと思っています。Haskellのプロジェクト管理ツール？としてはstackとcabalが主流とのことですが、どっちを使えばよいでしょうか？『Haskell入門』でもstackを使っているのでこちらを使いたいのですが、私はM1 macを使用しており、現在のstackではArm版に対応していないので、Rosetta2の使用などで対応した時に途中で行き詰まってしまわないか心配です。また、どちらを使用するにしても、公式ドキュメントを見て学習する予定なので、ドキュメントのわかりやすさなどの観点からのアドバイスがあればそちらもお聞きしたいです。",
        "type": "message",
        "ts": "1641657241.003000",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "Haskellの型検査の仕組みについて勉強したいのですが、何か参考になる文献はありますか？",
        "type": "message",
        "ts": "1641729546.006600",
        "user": "U02CE9YGEAU"
    },
    {
        "text": "Stack を使って初めてプログラムをビルド、実行したのですが、ターミナルの表示がうまくいきません。具体的には、『Programming in Haskell』にあった計算機のプログラム（を少し変えたもの）を使いました。このプログラムはうまくいけば電卓のインターフェースがターミナルに表示されてREPLのように振る舞うのですが、画像のようにパスワードを入力するようなモードになってしまい、プログラムの出力も、こちらからの入力も見えない状態になってしまいました。control + c で終了するとその間の入力および出力が保存されていることはわかります。原因をご存知の方がいれば教えていただけないでしょうか。",
        "type": "message",
        "ts": "1641745084.012100",
        "user": "U02NV8V2EEQ"
    },
    {
        "text": "stack installでcryptoniteのインストールをしたのですが\nCould not load module ‘Crypto.Hash’\n    It is a member of the hidden package ‘cryptonite-0.29’.\n    Perhaps you need to add ‘cryptonite’ to the build-depends in your .cabal file.\n    Use -v (or `:set -v` in ghci) to see a list of the files searched for.\n  |\n4 | import Crypto.Hash\nと出てしまい、ロードできません\n初歩的な質問で申し訳ないのですが次に何をすれば良いのか教えてもらえないでしょうか？",
        "type": "message",
        "ts": "1641915779.016200",
        "user": "U018KEA7Y83"
    },
    {
        "text": "<@U02TPLXSZQC> has joined the channel",
        "type": "message",
        "ts": "1641949461.016600",
        "user": "U02TPLXSZQC"
    }
]