[
    {
        "ts": "1616430017.009100",
        "text": "<@U01S215169G> has joined the channel",
        "user": "U01S215169G",
        "type": "message"
    },
    {
        "ts": "1616510275.009900",
        "text": "もしかしてこれは自分が作りたいなぁと思っていたものではないか :open_mouth:\n```anythingToString :: forall a. a -&gt; String```\n<https://hackage.haskell.org/package/recover-rtti-0.3.0.0/docs/Debug-RecoverRTTI.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1616510930.011600",
        "text": "convertible パッケージの `Data.Convertible.Convertible` クラス、別パッケージに分離してほしいな\ndata-default-class パッケージのように\nconvertible の依存する old-time が build-type: configure で Windows において手間がかかるので",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1616568538.012100",
        "text": "<@U01RTQG4GBH> has joined the channel",
        "user": "U01RTQG4GBH",
        "type": "message"
    },
    {
        "ts": "1616663990.013900",
        "text": "<https://github.com/haskell-jp/blog/issues/206|https://github.com/haskell-jp/blog/issues/206> 一人では経験が足りなくて作れない記事を、せっかくなので haskell-jp のブログに投げました。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1616714605.018400",
        "text": "まだちゃんと読んでないのですが今週のHaskell Weekly, `ReaderT` より `ImplicitParams` 使えよって記事と `ImplicitParams` 使うと危ないって記事が両方載ってるっぽくて興味深いですね :smirk:\n<https://haskellweekly.news/issue/256.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1616739694.019600",
        "text": "読めました。こちらがその「 `ImplicitParams` 使うと危ないぞ」という記事 <https://chrisdone.com/posts/whats-wrong-with-implicitparams/>\nどうも問題は、単に\n```?param```\nと書いたときに `ReaderT` でいうところの `param &lt;- ask` をさしているのかそれともよそで `ask` した結果の `param` を参照しているのか、型推論した結果からしか分からないところにあるみたいですね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1617033943.020400",
        "text": "<@U01SMHCTZN1> has joined the channel",
        "user": "U01SMHCTZN1",
        "type": "message"
    },
    {
        "ts": "1617034812.020600",
        "text": "<@U01S9U2ENS3> has joined the channel",
        "user": "U01S9U2ENS3",
        "type": "message"
    },
    {
        "ts": "1617034906.020900",
        "text": "<http://hackage.haskell.org|hackage.haskell.org> 落ちてる <https://twitter.com/bgamari/status/1376569577249865731>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1617034915.021200",
        "text": "<https://twitter.com/bgamari/status/1376570157691195399>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1617110038.022100",
        "text": "GHC 9.2のブランチが切られました。 alpha版のリリースも近いとのことです。\nGHC 9.2 has branched\n<https://mail.haskell.org/pipermail/ghc-devs/2021-March/019756.html>\nなお、9.0.2 と 8.10.5 のマイナーリリース版もそれぞれ別途準備中です。",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1617262797.022800",
        "text": "<@U01T1F8PCTV> has joined the channel",
        "user": "U01T1F8PCTV",
        "type": "message"
    },
    {
        "ts": "1617263491.023400",
        "text": "（間違えて <#C4LFB6DE0|general> に投稿してしまったのでこちらの投稿し直します。すみませんでした :man-bowing: ）\nGADTsの構文ってまだ「subject to change」って扱いだったんですね。知らなかった！\n<https://github.com/ghc-proposals/ghc-proposals/pull/402>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1617318060.024300",
        "text": "GHC 9.2.1-alpha1 now available :tada:\n<http://haskell.1045720.n5.nabble.com/ANNOUNCE-GHC-9-2-1-alpha1-now-available-td5900422.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1617326736.024600",
        "text": "かなり、いい感じだね。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1617327295.025100",
        "text": "GHC2021とレコード周りの修正がめっちゃありがたいですねー。プロファイリングやデバッグ周りもよさげな新機能が :eyes:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1617520312.026300",
        "text": "<@U01TLQGSE3B> has joined the channel",
        "user": "U01TLQGSE3B",
        "type": "message"
    },
    {
        "ts": "1617544774.028200",
        "text": "`listDirectory` 関数が返すリストの順番に依存したコードを書くと、ある日突然何の脈絡もなく順番が変わってしまってバグり出す、という恐怖体験が続きました... :fearful:\n<https://haskell-jp.slack.com/archives/CBY49962V/p1617544631003000>",
        "user": "U4LGTMTMK",
        "type": "message"
    }
]