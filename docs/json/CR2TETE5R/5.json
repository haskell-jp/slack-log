[
    {
        "ts": "1582468022.004600",
        "text": "なるほど、そうだったんですね！ありがとうございます！",
        "user": "UU1H0UC75",
        "type": "message"
    },
    {
        "ts": "1582469361.004800",
        "text": "`stack new` でテンプレートを作ってそこで作業するのが重要ですね強いていえば",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1582469396.005000",
        "text": "上のチュートリアルにもある話でした",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1582686575.006900",
        "text": "stackを使ってライブラリを作って公開するのにはどうすればいいでしょうか? 普通にstack newするとバイナリパッケージ用の構成になるっぽいので...",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1582687657.007100",
        "text": "~`executable`~ `executables:`  のセクションを `package.yaml` から削除すればライブラリーだけになりますよ！\n`stack new project simple-library` してみてできるプロジェクトを参考にしてみるのもよいかと。\n\nちなみに、公開する際はhackageのアカウントを作った上で（そういえば今どうやって作るんだろう）\n`stack upload .` すればできます。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1582700530.007400",
        "text": "`stack new project simple-library` だとpackage.yamlができないんですね",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1582700902.007600",
        "text": "ああー、そういえばそうでしたね...\n<https://github.com/commercialhaskell/stack-templates>\nsimple-libraryやデフォルトのsimple含め各種テンプレートは :point_up: のリポジトリーに置いてあるんですが、ここ、あんまり真面目にメンテされてないんですよねぇ。 :disappointed_relieved:\nとりあえず、先ほど触れたとおり単純に `executables:` の箇所を削除するだけでライブラリーのみのビルドになるのでそれだけやればよいかと！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1582701033.008000",
        "text": "ちなみにcabalからpackage.yamlへの変換は <https://github.com/yamadapc/hpack-convert> でいけるっぽいです",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1582701934.008300",
        "text": "オレオレ templates を作ろう！",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1582707786.008700",
        "text": "ディレクトリ構成をtemplatesにギュっとするスクリプトを昔作ったので良かったら使ってやってください（ただしプレースホルダーとかには非対応なのでちょっと中途半端…）<https://github.com/matonix/hsfiles>",
        "user": "U59GW4U4T",
        "type": "message"
    },
    {
        "ts": "1582802758.009300",
        "text": "<@U7Z4F723Z> has joined the channel",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1583031605.009400",
        "text": "Reminder: \nbeginnersチャンネルは、新しい人がスムーズにHaskellに慣れるための質問を歓迎するチャンネルです。\nHaskell-Beginners ML や IRCの#haskell-beginners  や RedditのMonthly Hask Anythingのような位置づけを意図しています。\n\nbeginnersチャンネルでの回答側は、以下の左側のような応答を厳禁とする運用です。\n• それはくだらない質問だ → くだらない質問など無い\n• その質問は以前にもあった → 質問者はそんなこと知らない\n• Google検索せよ → 検索できないから質問している\nbeginnersチャンネルでは、例えば以下のレベルの質問から歓迎します。\n• `:` とは何のことですか。\n• タプルとは何ですか。\n",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1583159785.009600",
        "text": "<@UUR9NQ680> has joined the channel",
        "user": "UUR9NQ680",
        "type": "message"
    },
    {
        "ts": "1583672131.009800",
        "text": "<@UV1S80CKX> has joined the channel",
        "user": "UV1S80CKX",
        "type": "message"
    },
    {
        "ts": "1583714881.010000",
        "text": "<@UV26V0YD6> has joined the channel",
        "user": "UV26V0YD6",
        "type": "message"
    },
    {
        "ts": "1584159088.010300",
        "text": "<@U01021LKUH5> has joined the channel",
        "user": "U01021LKUH5",
        "type": "message"
    },
    {
        "ts": "1584191322.010500",
        "text": "<@UE4JVGDRP> has joined the channel",
        "user": "UE4JVGDRP",
        "type": "message"
    },
    {
        "ts": "1584212837.010700",
        "text": "<@UV35RL3V1> has joined the channel",
        "user": "UV35RL3V1",
        "type": "message"
    },
    {
        "ts": "1584212948.011800",
        "text": "Haskellの魅力に陥り、現在勉強中です。よろしくお願い申し上げます。",
        "user": "UV35RL3V1",
        "type": "message"
    },
    {
        "ts": "1584403234.017100",
        "text": "3/1 の Slackbot の投稿で気づいたのですが，自分 `:`  が分かっていません……．検索もうまくできず……すみません．タプルは「すごい  Haskell 楽しく学ぼう」に書いてあったのですが……．`:` について，も し良ければご教授いただけたらと思っております．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584407031.019900",
        "text": "`data` とか代数的データ型とか言われて(聞き覚えではなく)親しみはありますか？",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407070.020700",
        "text": "（この回答によって答え方を変えた方がいいかと思うので）",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407085.020900",
        "text": "いえ……すみません．自分本当に初心者で何も分かっていない状態です．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584407267.025300",
        "text": "なるほど。リストって、じつは配列（メモリ上にデータがずらっと並んでるやつ）じゃなくて、メモリ上表現は大体タプルなんですよ。つまり、どう言うことかって言うと、リストっていうのは、一番目の要素と残りの要素からなるリストの組なんですね。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407336.027100",
        "text": "これだけだと有限列を表現できないので、「空のリスト」に対応する値が特別に用意されていて、これを `[]` といいます",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407341.027300",
        "text": "はい．リストを先頭とその他で分けてる例は自分が読んだ書籍でも良く出てきていました．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584407485.030700",
        "text": "`:` というのは、要素 `x :: a` と リスト `xs :: [a]` が与えられたときに、その組として作られるリストを `x:xs :: [a]` と表すことにせよ、という記号です。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407527.030900",
        "text": "有限列を表現できない理由って，先頭ではない他の要素が無限に続くかもしれないからでしょうか？ <@UL1HFJATE> san",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584407621.033300",
        "text": "最初の要素が `a` で残りのリストが `[a]`  という理解で合っているでしょうか……？",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584407650.034200",
        "text": "えーと、リスト `x:xs` があった時、`xs` もリストなので、もし `:` 以外に `[]` がなかったら、どうやってリストが終えられるのかわからないですよね。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407839.036700",
        "text": "すみません，自分の理解が浅く，非常に初歩的な質問になってしまっていて申し訳ありません．\n`:`  はリストの終わりを示すものの一種ということでしょうか？",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584407884.038000",
        "text": "正確には、最初の要素は `x` です。これの型=値の種類が `a` なんですね。残りのリストは `xs` 、これの型=値の種類が `[a]` です。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407935.039400",
        "text": "なんて言えばわかりやすいのかわからないので、先に答えをいうと、いいえ。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584407984.040700",
        "text": "もしこの世に `[]` がなかったら、というはなしなのでわかりにくかったんでしょうね。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584408121.043300",
        "text": "今教えていただいたものの自分の理解は `x:xs`  で先頭とその他を合わせたリストが書けるというもので `:` はその記法のための記号という感じなのですが合っているでしょうか？ <@UL1HFJATE> san",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584408235.045300",
        "text": "大体合っています。もっと踏み込むと、\n\n型 `a` の要素からなるリストとは、\n• `[]` か、\n• `x :: a` と 型 `a` の要素からなるリスト `xs` の組 `x:xs` か\nのどちらかであるものである。型 `a` の要素からなるリスト全てからなる型を `[a]` と書くことにする。\n\nというのが定義なんですね。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584408372.045700",
        "text": "`a` と `[a]`  から成るタプルという",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584408382.045900",
        "text": "なるほど．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584408426.046200",
        "text": "最初に教えていただいたメモリ上はタプルというお話も自分の中で飲み込めました．そのような定義になっているんですね．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584408492.047500",
        "text": "だから、むしろ `[3,4,5,6] :: [Int]` みたいなのは `3:4:5:6:[] :: [Int]` の省略記法なんですね。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584408631.047700",
        "text": "`3:[]` というように書くと `[3]` と書いたのと同じというのは自分が読んだ書籍で紹介されていました．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584408701.048900",
        "text": "はい。ですが本当は、`[3]` と書くと `3:[]` と書いたのと同じ、というのが正しいわけです。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584408738.050100",
        "text": "いや、まあ、同じ、ということばを厳密に捉えるならどっちも同じ意味ではあるんですが。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584408797.050300",
        "text": "そういうことなんですね．最後に空リストを置いていることでそこがリストの終わり？を示していることと等価ということでしょうか．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584408826.051200",
        "text": "リストというかメモリ上のタプルという方が正しいのでしょうか．",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584409010.055600",
        "text": "等価というか、そのために `[]` が存在するんですね。`[]` は0要素タプル、つまり `()` みたいなものです。（と言っても、構造が同じというだけで、`:`  と `(,)` 、`[]` と `()` は厳密に区別されているので、そこは誤解しないでくださいね！）",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584409108.057800",
        "text": "つまり「リストはタプルである」というのは、Haskellにおいては「タプル」とは `(a_1, ... ,a_n)` のこと、とされているので、誤りであるわけです。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584409120.058000",
        "text": "最初に教えていただいた `:` がなかったらリストの有限列が表現できないというお話が呑み込めました！",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1584409211.059500",
        "text": "`[]` がなかったら、のあやまりですか？",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584409270.059700",
        "text": "すみません，そうです．`:` 以外に `[]` がなかったらというお話のことです．",
        "user": "UTXJK93BL",
        "type": "message"
    }
]