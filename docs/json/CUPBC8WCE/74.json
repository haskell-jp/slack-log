[
    {
        "ts": "1740905428.954989",
        "text": "出先の用事が長引いてしまったので、今日は帰ってから延長戦で軽くやります:bow:",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1740906017.055899",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1740906283.810519",
        "text": "Applied Category Theory, Chapter 5: Signal flow graphs: Props, presentations, and proofs. Part 1 の動画視聴 + text 読了　prop と presentation の定義が　膨大な量の例で示される　新しい概念いっぱい出て来て正直辟易とする　おそらく次回にそれらが signal flow graph として統合されるのだろうが　それを楽しみとしよう　ひたすら我慢の子\nCompetitive Programming in Haskell: Scanner は Haskell 競プロ勢に必読の良記事　さっそく Kattis の Popular Vote と Board Wrapping に使用した（後者は目下 Debug 中）",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1740907132.951999",
        "text": "先週に続き、Ex.5.9 のデバッグのために、Ex.5.10. の実行結果を確認していました。\n再確認の結果、関数適用ノードやグローバルノードのロック方法や、ロックされたノードの解除方法は、とりあえず一応テキストの遷移規則通りに実装しているように見えました。\n先週間違いかと思ったヒープ内容変更処理も一概にそうとは言えないかもと思われたので、エラーの直接の原因となった getArg 関数の non-exhaustive を解消してみたところ、ex.5.10 のテストプログラムが最後まで動いて、前回と異なり処理結果もOutputに出力されました。\nこの動作が正しいのかどうか確認していこうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1740911080.059189",
        "text": "時間外でmakeMistakesToLearnHaskellとHaskell-jp Blogの続きをちょっとずつやりました。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/fcdf847efbdfdec26867da219e2df436c80155eb>\n<https://github.com/haskell-jp/blog/commit/0f241700e75a2d766d2d40b795a8a8d9a931c318>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1741492824.590299",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1741493576.379539",
        "text": "<https://ocw.mit.edu/courses/18-s097-applied-category-theory-january-iap-2019/|Applied Category Theory> (MIT OCW 18.S097 2019) Chapter 5: Signal flow graphs: Props, presentations, and proofs.  Part 2 担当 Fong 先生\nあとハシゴで <https://byorgey.github.io/blog/posts/2019/10/12/competitive-programming-in-haskell-reading-large-inputs-with-bytestring.html|Competitive Programming in Haskell: Reading large inputs with ByteString> : Brent Yorgey 先生のこの blog をもとに Kattis の問題を解きます",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1741495018.276669",
        "text": "S.K.です。今週もお世話になります。よろしくお願いいたします。\n先週行った Implementing Functional Languages: a tutorial, 5.3.2 The instruction set, Ex.5.9 の修正結果の確認を、Ex.5.10 のテストプログラムを使って進めて行こうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1741510825.165309",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1741511567.660509",
        "text": "Applied Category Theory, Chapter 5: Signal flow graphs: Props, presentations, and proofs. Part 2 の動画視聴 + text 読了　props の signal flow graphs が線形代数の matrices で表現され　微積素子を含む複雑な制御系をつなぐ応用などが示される　この辺今まで豊富な諸概念を用意した伏線を回収していて　なかなかのモノ　やっと山の中腹まで登った感\nCompetitive Programming in Haskell: Reading large inputs with ByteString :　はほとんどを写経して Kattis の Amy Strength を解いた　ただし chunksOf が非標準の Data.List.Split であるため　自分で再定義が必要　これを改善するため Yorgey 先生の ScannerBS を使うよう試行中",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1741512505.625639",
        "text": "Ex.5.9 修正後の Ex.5.10 テストプログラムの動作結果確認をしていました。\n各子タスクの開始と終了のタイミングは把握できましたが、手計算で確認した結果が返されているかどうかの確認が未完了です。\n確認に時間がかかりそうだったので、とりあえずテストプログラムを、\n・twice に渡す関数を恒等関数→インクリメント関数\n・引数を 3 → 0\nの様に変更して確認してみたところ、シーケンシャルマシンとパラレルマシンで同じ結果が返ったので、現状明らかに間違ってるわけではなさそうかなと思いますが、引き続き細かく確認を進めて行こうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1741512737.563179",
        "text": "用事で外出していましたが、一応時間外にmakeMistakesToLearnHaskellもHaskell-jp Blogも少し進めたので後で共有します :bow:",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1741515793.173519",
        "text": "本日のmakeMistakesToLearnHaskellの更新: <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/e4513632b4d37bf8daf44566ba7c774a0a387571>\nHaskell-jp Blogの更新: <https://github.com/haskell-jp/blog/commit/a5c188d4f3e3e320a43640e4b7b2de47464b0e5e>",
        "type": "message",
        "user": "U4LGTMTMK"
    }
]