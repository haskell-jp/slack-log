[
    {
        "ts": "1634452624.126300",
        "text": "こんにちは、一つ質問をさせてください！\n現在型安全に状態遷移を表現する方法について悩んでいます。\n\n```data State\n  = Ready 'StateA -- 型の上で次の状態を指定すれば、型安全な状態遷移を実現できるのではないか\n  | StateA [Text] 'StateB\n  | StateB [Text] 'Finished\n  | Finished [Text] '()\n\ntoStateA :: State -&gt; Text -&gt; State -- この型上で何かしらパターンマッチングをしないといけない？\ntoStateA (Ready 'StateA) text = -- 値でパターンマッチングをすることはできない\n  StateA [text]```\n理解が足りず、実現する手がかりがありません……\n\n型安全な状態遷移をするのに必要なことは\n• 型に次の状態を入れ込む\n• 関数のシグネチャで、特定の遷移先の情報を持っている型のみ引数に取るようにする\nだと考えているのですが、どのように状態の型を定義すればいいか少々混乱しています。なにかお力添えいただけないでしょうか？",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1634463345.126600",
        "text": "愚直にやるなら、単純に `State` 型の各コンストラクターをそれぞれ別の型にすれば良いかと思うのですが、それでは間に合わない事情があるのでしょうか。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1634467961.126800",
        "text": "<@U4LGTMTMK> さん\nいつもご返信ありがとうございます。\n現在<https://hackage.haskell.org/package/brick-0.64.1|brick>を利用してTUIを作成しているのですが(前回回答いただいたプロジェクトです)、\nすべてのstateを一つの型として定義する必要があり、\n\n• data/newtypeで定義すると名前の重複\n• typeで定義する際はunion typeが使えず\nと言った具合で、どうにも実現できなかった次第です。\n確実に私の理解・知識不足だと思うのですが、一寸先は闇状態で…\nなにか常識的な解法がありそうだと踏んで質問させていただきました。",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1634468915.127100",
        "text": "いやー、そんなに謙遜する必要もないです。\n依存型などの仕組みが必要な問題なのでかなり面倒な問題です。常識的な解法は「ある意味でない」と私は思います。個人的には、そこで依存型を真剣に勉強して詰まるよりは、普通にランタイムエラーが起こるのを覚悟で作って試行錯誤した方がいいんじゃないかなぁと思います。Haskellの依存型はまだ完全なものではなく使いづらいですし...。もちろん、何をultimate goalとしてやっているのか次第で、依存型などのそうした技術を本当に勉強したいのであれば調べればいいと思います。そうでないなら、アプリができるよう手を動かしましょう。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1634469754.127300",
        "text": "なるほど…。そこまで高難易度な問題だったのですね。\n確かに以前idrisや依存型等調べていたときに、プログラムの証明等沼に入り込むことになるからやめたほうがいい…\nのような趣旨の文言を目にしました。\n\nこの問題は腰を据えて勉強するべきものなんですね。それがわかってよかったです！\n現状最優先事項は型レベルプログラミングの勉強をすることではなく、完成させることなので続けて実装します！ありがとうございます！",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1634558813.127700",
        "text": "私も似たようなことが必要になったので、\nその時は、\n`data State hasA hasB` みたいに型引数突っ込んで、\n`type ReadyA = State Identity Maybe` みたいに具象化してました。",
        "user": "U57CUMWQ6",
        "type": "message"
    }
]