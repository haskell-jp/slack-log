[
    {
        "ts": "1566966991.000500",
        "text": "確率関係は正しいと思います。利点としては、実用上ソート済みのデータがうっかり入ってしまう事が多々ある（意図的な攻撃含む）ので、そういう場合に容易にワーストケースに入ってしまうのが危険だからだと思います",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1566967219.001100",
        "text": "確か内部でソートしてるサーバーにワーストケースを放り込む事でDoS攻撃するみたいな手法があった気がする",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1566967304.001300",
        "text": "あった <https://www.slideshare.net/kazoo04/quicksort-killer>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1567045006.002300",
        "text": "<@UMET4N6Q3> has joined the channel",
        "user": "UMET4N6Q3",
        "type": "message"
    },
    {
        "ts": "1567321299.002700",
        "text": "<@UMKGDJ2RZ> has joined the channel",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1568260180.003100",
        "text": "<@UL5BYTF4J> has joined the channel",
        "user": "UL5BYTF4J",
        "type": "message"
    },
    {
        "ts": "1568327114.003400",
        "text": "<@UL5D01VL2> has joined the channel",
        "user": "UL5D01VL2",
        "type": "message"
    },
    {
        "ts": "1568472903.000200",
        "text": "<@UNCCD41PS> has joined the channel",
        "user": "UNCCD41PS",
        "type": "message"
    },
    {
        "ts": "1568773307.000400",
        "text": "確率関係について，より正確な主張をすると，「列の長さを固定してありうる入力それぞれが等確率で出現する」と仮定すると，全て正しいです．入力の出現の確率分布が一様分布でないときに問題が起きるわけなので．",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1569302282.000800",
        "text": "<@UK50TKYSE> has joined the channel",
        "user": "UK50TKYSE",
        "type": "message"
    },
    {
        "ts": "1570660661.000800",
        "text": "モノイド以上、群未満な構造の型クラス集だそうです。\n<https://github.com/blamario/monoid-subclasses>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1570752248.001100",
        "text": "<@UP6J2B1LL> has joined the channel",
        "user": "UP6J2B1LL",
        "type": "message"
    },
    {
        "ts": "1570756334.001400",
        "text": "<@U5KSMQ5AS> has joined the channel",
        "user": "U5KSMQ5AS",
        "type": "message"
    },
    {
        "ts": "1571234934.001700",
        "text": "<@UPELDRYJJ> has joined the channel",
        "user": "UPELDRYJJ",
        "type": "message"
    },
    {
        "ts": "1571393539.002000",
        "text": "<@UPJ0N5RPH> has joined the channel",
        "user": "UPJ0N5RPH",
        "type": "message"
    },
    {
        "ts": "1571404421.002200",
        "text": "<@UPJG8R8CV> has joined the channel",
        "user": "UPJG8R8CV",
        "type": "message"
    },
    {
        "ts": "1571744176.002400",
        "text": "<@UPNPJJNDC> has joined the channel",
        "user": "UPNPJJNDC",
        "type": "message"
    },
    {
        "ts": "1571908205.002700",
        "text": "<@U90TTJDB7> has joined the channel",
        "user": "U90TTJDB7",
        "type": "message"
    },
    {
        "ts": "1572638965.003000",
        "text": "<@UQ2LX0WCQ> has joined the channel",
        "user": "UQ2LX0WCQ",
        "type": "message"
    },
    {
        "ts": "1573431736.003300",
        "text": "<@UPZ9K5L1G> has joined the channel",
        "user": "UPZ9K5L1G",
        "type": "message"
    },
    {
        "ts": "1573480831.003600",
        "text": "<@UQBK4AKNG> has joined the channel",
        "user": "UQBK4AKNG",
        "type": "message"
    },
    {
        "ts": "1573483192.003900",
        "text": "<@UQ200195H> has joined the channel",
        "user": "UQ200195H",
        "type": "message"
    },
    {
        "ts": "1573978119.004200",
        "text": "<@UQ8SYE30S> has joined the channel",
        "user": "UQ8SYE30S",
        "type": "message"
    },
    {
        "ts": "1574073881.004500",
        "text": "<@UQN0WMTQC> has joined the channel",
        "user": "UQN0WMTQC",
        "type": "message"
    },
    {
        "ts": "1574403457.004900",
        "text": "またまたモジュラー演算のライブラリーが <https://github.com/Bodigrim/mod>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1575806360.005200",
        "text": "<@U7907NMGF> has left the channel",
        "user": "U7907NMGF",
        "type": "message"
    },
    {
        "ts": "1575854345.005400",
        "text": "<@URB930G94> has joined the channel",
        "user": "URB930G94",
        "type": "message"
    },
    {
        "ts": "1576496799.001500",
        "text": "示せない定理があるので、分かりそうな方見てもらいたいです。よろしくお願いします\n<https://mizunashi-mana.github.io/blog/posts/2019/12/algebraic-compact-functor/|https://mizunashi-mana.github.io/blog/posts/2019/12/algebraic-compact-functor/>",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1576506413.001700",
        "text": "この件解決しました",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1576638359.002200",
        "text": "TaPLすら読んでないので素人考えなんですが、\nHask is not a categoryってやつ、\n「undefinedと何かの比較結果はundefined」とおけば、\n「Haskは圏でなくはない」までなら示せるのではないでしょうか。\n\nというか、直観主義からいうと比較できちゃってる方がおかしい気がする\n\n<https://wiki.haskell.org/Hask>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1576644260.013500",
        "text": "直観主義論理、syntacticにはintermediate truthであることが証明できる論理式はないので、面白いとは思いますがどういう風に一般的に定義しようか迷いますね…。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1576655755.013700",
        "text": "以前このスレッドで話題になった不動点意味論を採用し、ある計算ステップに注目して示す、みたいなのを妄想してます\n\n不動点意味論の計算ステップでは、⊥は「他の値に計算される途中」の場合もありますから、 `() &lt;&gt; ⊥` などとできないのは自然だと思います",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1577006836.000200",
        "text": "<@URZCHQGGM> has joined the channel",
        "user": "URZCHQGGM",
        "type": "message"
    },
    {
        "ts": "1577196085.000500",
        "text": "<@URX5KJDLY> has joined the channel",
        "user": "URX5KJDLY",
        "type": "message"
    },
    {
        "ts": "1577754995.000800",
        "text": "<@US4UKMB29> has joined the channel",
        "user": "US4UKMB29",
        "type": "message"
    },
    {
        "ts": "1578235545.001100",
        "text": "<@URZHY2K97> has joined the channel",
        "user": "URZHY2K97",
        "type": "message"
    },
    {
        "ts": "1579217408.001400",
        "text": "<@USC6N666N> has joined the channel",
        "user": "USC6N666N",
        "type": "message"
    },
    {
        "ts": "1582251728.000200",
        "text": "<@UTXJK93BL> has joined the channel",
        "user": "UTXJK93BL",
        "type": "message"
    },
    {
        "ts": "1583194192.001000",
        "text": "圏論に詳しい方、 ArrowApply の圏論的な解釈について教えて欲しいです\n<https://haskell-jp.slack.com/archives/C5666B6BB/p1582881982039500?thread_ts=1582424231.001100&amp;channel=C5666B6BB&amp;message_ts=1582881982.039500|https://haskell-jp.slack.com/archives/C5666B6BB/p1582881982039500?thread_ts=1582424231.001100&amp;channel=C5666B6BB&amp;message_ts=1582881982.039500>",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1583229703.002000",
        "text": "mealy machine って「関数プログラミングの楽しみ」10章の Auto と同じ型ですかね。そうだとしたら ArrowApply ではなかったはず。\n「Auto 用の、型は合うこれこれの app を定義できるが外延性を満たさないことを示せ」という練習問題までありました。",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1583230383.002400",
        "text": "Lugendre さんの Qiita の記事、ちょっと typo がありますね。\n「右から左の」と「app :: a (a b d, c) d」。",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1583244901.002600",
        "text": "私もそう思ってたんですが、ところがMerlyのArrowApplyインスタンスはあるんですよね <https://www.stackage.org/haddock/lts-15.1/machines-0.7/src/Data.Machine.Mealy.html#driveMealy>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1583244932.002800",
        "text": "ちゃんとlawを満たしてるか確認していないので明日あたりやってみます",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1583548047.003200",
        "text": "<@US5EYP5HQ> has joined the channel",
        "user": "US5EYP5HQ",
        "type": "message"
    },
    {
        "ts": "1583681650.003400",
        "text": "やってみたところ、lawを破っているという事実が発覚しました <https://gist.github.com/as-capabl/0bce5645f9eba1eae2cf7a83b3418626>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1583681893.003600",
        "text": "• 原理的に不可能なのか？それとも単なるバグか？\n• lawを満たすものについては、常に同型があるのか？もっと言うと、lawから同型を導けるか？\nについて、引き続き考えて行きたいと思います。",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1583803888.004200",
        "text": "• 「関数プログラミングの楽しみ」に「Auto は（ArrowApply の）インスタンスではない」と書いてあるくらいなので原理的に不可能なのだと思いますが「存在しないこと」の証明は難しかったりしますよね。\n• 型（関手？）としての同型があることが前提でその上で law を満たせばモナド同型ということではと思います。（検証してなくての想像）",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1583827066.005100",
        "text": "ここでも無理そうと言ってるみたいですね。 <https://stackoverflow.com/questions/27603108/what-is-wrong-with-this-instance-arrowapply-automaton>",
        "user": "U57CGDBMG",
        "type": "message"
    }
]