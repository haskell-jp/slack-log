[
    {
        "ts": "1566488489.032100",
        "text": "ループができるのはもともとそうなってるのか\n今回特有のことじゃないのかな",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566488781.033200",
        "text": "Working with Source Plugins\n\n文字通りSource Pluginsの作り方や例などの紹介\n<https://qiita.com/waddlaw/items/65b57517f105fcbbe724>\nと大体同じ内容かな... 作り方がちょっと詳しかった？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566520965.034000",
        "text": "（実況めっちゃ助かります!!）",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1566545886.035500",
        "text": "HIWのKeynote:\nHaskell Use and Abuse at Scale\n\nGoogle XはめっちゃHaskell使ってるよ、という話。\nCoding Styleの無さとか、簡単にスペースリークするコードが書けるとか、改善するためにいろいろできちゃうこととか、心当たりのありすぎるHaskellのつらみが挙げられててつらい :disappointed:\n\nLocally briliiant globally incoherent. :naruhodo:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566546773.036500",
        "text": "Haskell採用、やっぱりいかにfancyな機能（各種GHC拡張なりLensなどの汎用性の高いライブラリーなり）の使用を絞るかにかかってる気がするなぁ。誰かがかちっと決めないと。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566547022.036800",
        "text": "LTで紹介するexampleに致命的なバグがあったので直してたんであんま聞けなかったけど、めっちゃ質問時間も盛り上がってて追いつけてないのつらい",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566547225.037200",
        "text": "Haskell書きたがる人はbrilliantなことをしたがる、か... :cold_sweat:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566548951.037900",
        "text": "LT応募したぞ！参加者が多いのか、5分に縮められてる :cold_sweat:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566549155.038700",
        "text": "GHC 拡張70以上はやすぎでしょ感",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566549156.038900",
        "text": "Matthew Pickering、昨日から続けて3連続発表 :serval:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566549337.039700",
        "text": "Configuration, but without CPP",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566549366.039800",
        "text": "CPP の #ifdef の問題点が示されてる",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566549474.040000",
        "text": "ifdef の分岐で型が一致してなかったり検出できない",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566549610.040300",
        "text": "「2回目参加するんだったらなんか発表して、少なくとも応募して」とkazuさんから言われてるので... :sweat_smile:\nまぁ、それでなくともLTならいけそう、と去年思ったからだけども。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566549799.040500",
        "text": "choice type の紹介\n```\nD&lt;Int, String&gt;\n```",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566549873.040700",
        "text": "プログラム全体で左なら左が選ばれる",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566550188.041000",
        "text": "すごい実践的な話かと思いきや割と理論的な話だった。\nCPPに代わる条件付きコンパイルを検討して、どうやってそれを型チェックするか、みたいな話。\nchoice typeはそのためのkey idea",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566550462.041300",
        "text": "HIE files in GHC 8.8",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566550543.041400",
        "text": "コンパイルできないとコードのセマンティクスが取得できないこと etc. が問題",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566550698.041600",
        "text": "cf. <https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1561845933077800>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566550829.041900",
        "text": "hiedb コマンドが提供されるのかな\nhie ファイルのデータをそれで問い合わせができるっぽい",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566550919.042200",
        "text": "参照先へのジャンプだけじゃなくて、参照箇所の検出も出来るっぽいな。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566551053.042400",
        "text": "hie-lsp: Language Server\n  hie-lsif: Convert in Language Server Index Format for GitHub's online code navigation.\n    Make CI server use it.",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566551152.042600",
        "text": "Future:\n    Type classｎインスタンスがどう解決されたかも出す。\n    定義ジャンプしたとき実装に飛べるようにする",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566552658.043500",
        "text": "Tagging Tags: Inferring the presence of pointer tags at compile time.\n\n現状はStrictなフィールドかどうかにかかわらず参照時にindirectionが発生するので、それを静的に検出してどういい感じに最適化するか、という話らしい",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566552749.043600",
        "text": "（OverloadedStrings とかいい加減デフォルトでも良さそう）",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1566552765.043800",
        "text": "Strictness analysis <http://fixpt.de/blog/2017-12-04-strictness-analysis-part-1.html> に対する拡張っぽい",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566552830.044000",
        "text": "いやー、実際通るべきところでambiguous typeが発生したりして結構うっとうしいかなーと思うときはありますね...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566553974.044600",
        "text": "LT終了。案の定時間切れ :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566553996.044700",
        "text": "",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566554189.045300",
        "text": "MatthewさんLTもやるのか... :open_mouth:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566559894.045600",
        "text": "Monad Transformers and Modular Algebraic Effects: What Binds Them Together",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566560770.047500",
        "text": "Status Update on the Helium for Haskell compiler\n<https://github.com/Helium4Haskell/helium>\n\nエラーメッセージをわかりやすくして、プログラミングを初めてやる人でも使いやすくすることを目指したHelium。\nDSLを作ったときにDSL向けのエラーメッセージを作ることも出来る。\n当初型クラスのないHaskell 98であったが、リリース予定のver. 1.9で実装される。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566561548.048100",
        "text": "monad transformers と modular algebraic effects との対比\nmt → mae への変換またその逆のときにどういう手法があって、構成する要素がどう対応しているか\nmt と mae だと mt の方が大きいので mt → mae は何でもできるわけではない（ `catch` や `local` は mae にならない",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566561893.048700",
        "text": "Scoping Monadic Relational Database Queries",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566561902.048800",
        "text": "<http://hackage.haskell.org/package/selda>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566562402.052700",
        "text": "The Gibbon Compiler: Accelerating a small subset of Haskell\n<https://github.com/iu-parfunc/gibbon/tree/master/gibbon-compiler>\n\n最適化の実験のために作られたコンパイラー。Haskellのサブセットが対象。\nTreeやListなどのポインターによるアクセスを前提とするデータ構造を、処理する関数がどのような順番でアクセスしているかを見て自動でpacked arrayに変換する、という特殊な最適化をサポートする。\n将来的には `Packed` という型クラスでpacked arrayに変換する仕組みを提供することで、Haskell本体（GHC?）に統合することを目指す。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566562468.052900",
        "text": "今年のHIW、いろんなHaskell Compilerが出てきて面白い（去年はGHCの話が多かった",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566562782.053000",
        "text": "発表内容と関係ないけど、スライドを上下に分けて、1つ前のページと今のページと片方ずつ進んでいくの見やすい",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566563070.053600",
        "text": "```\nSELECT a, b\nFROM\n  table0\n    LEFT JOIN\n      (SELECT b FROM table1 WHERE colA0 == colB1)\n```\nというような SQL があるとき colA0 が table0 のカラムだとエラーになる。\n単純なモナドベース EDSL だと型エラーにできない。\n型関数などを使って型エラーにすることができた。",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566563263.053800",
        "text": "```\ndo\n  colA0 :*: colA1 &lt;- from table0\n  leftJoin $ do\n    colB0 :*: colB1 &lt;- from table1\n    ristrice $ colA0 .== colB1\n```\nみたいな EDSL",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566563272.054000",
        "text": "ON 句が抜けたか",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566563749.055100",
        "text": "Copilot 3.0: a Haskell runtime verification framework for UAVs\n\nCのソースを吐くHaskell製EDSL。runtime verificationが組み込まれたソースが吐かれるんだろうか。\n関連: <https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1554850965072300>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566567072.055800",
        "text": "HoleFitPlugins and the future of interactive development in GHC",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566567113.055900",
        "text": "type hole で提案が出てくるけど、その提案を出す部分をコンパイラープラグインにしよう（もうなってる？）という紹介っぽい",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1566567259.056100",
        "text": "_で始まる識別子を書き換えるでどのようにcandidateを探すか指定できる",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566567369.056300",
        "text": "<https://ghc.gitlab.haskell.org/ghc/doc/users_guide/extending_ghc.html#hole-fit-plugins>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566567411.056500",
        "text": "開発中のドキュメントに書いてあるものだし、まだ出てないんじゃないかな",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566567634.056700",
        "text": "対象を検索するための構文を拡張しよう！というプランも\n```\n    g :: [a] -&gt; [[a]]\n    g = _{hoogleLookup \"+Control.Applicative\"}\n```",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1566567773.057100",
        "text": "Liquid Haskell の refinement type の条件を書いてそれに合うものだけ提案してもらうとかも",
        "user": "U4L0B71L1",
        "type": "message"
    }
]