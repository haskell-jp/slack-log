[
    {
        "ts": "1740905428.954989",
        "text": "出先の用事が長引いてしまったので、今日は帰ってから延長戦で軽くやります:bow:",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1740906017.055899",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1740906283.810519",
        "text": "Applied Category Theory, Chapter 5: Signal flow graphs: Props, presentations, and proofs. Part 1 の動画視聴 + text 読了　prop と presentation の定義が　膨大な量の例で示される　新しい概念いっぱい出て来て正直辟易とする　おそらく次回にそれらが signal flow graph として統合されるのだろうが　それを楽しみとしよう　ひたすら我慢の子\nCompetitive Programming in Haskell: Scanner は Haskell 競プロ勢に必読の良記事　さっそく Kattis の Popular Vote と Board Wrapping に使用した（後者は目下 Debug 中）",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1740907132.951999",
        "text": "先週に続き、Ex.5.9 のデバッグのために、Ex.5.10. の実行結果を確認していました。\n再確認の結果、関数適用ノードやグローバルノードのロック方法や、ロックされたノードの解除方法は、とりあえず一応テキストの遷移規則通りに実装しているように見えました。\n先週間違いかと思ったヒープ内容変更処理も一概にそうとは言えないかもと思われたので、エラーの直接の原因となった getArg 関数の non-exhaustive を解消してみたところ、ex.5.10 のテストプログラムが最後まで動いて、前回と異なり処理結果もOutputに出力されました。\nこの動作が正しいのかどうか確認していこうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1740911080.059189",
        "text": "時間外でmakeMistakesToLearnHaskellとHaskell-jp Blogの続きをちょっとずつやりました。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/fcdf847efbdfdec26867da219e2df436c80155eb>\n<https://github.com/haskell-jp/blog/commit/0f241700e75a2d766d2d40b795a8a8d9a931c318>",
        "type": "message",
        "user": "U4LGTMTMK"
    }
]