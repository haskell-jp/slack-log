[
    {
        "ts": "1631109881.013400",
        "text": "<@U02DS2FBKQT> has joined the channel",
        "user": "U02DS2FBKQT",
        "type": "message"
    },
    {
        "ts": "1631310973.013600",
        "text": "<@U02E9R6AZ36> has joined the channel",
        "user": "U02E9R6AZ36",
        "type": "message"
    },
    {
        "ts": "1631596292.017900",
        "text": "`stack.yaml.lock` に関する質問です。\n`stack.yaml` を更新したのに、ビルドで `stack.yaml.lock` を更新するのを忘れて、またPRを出し直すことがたまにあります。\nよって、CircleCIなどのCIツールでそれを抑止したいです。\n今私が主に使っているのはCircleCIです。\n例えばJavaScriptのパッケージマネージャのyarnには `yarn install --frozen-lockfile` というオプションがあり、lockファイルの更新が発生しようとするとエラーになってくれます。\nこれをCIのコマンドに追加していればCIで教えてくれるわけです。\nstackにも似たような機能があればそれで問題ないので、一通り探したのですが見つかりませんでした。\n`stack --lock-file read-only build` は本当にread onlyになるだけでlockファイルとの矛盾があっても関係ないようです。\nどなたかこういった機能が存在するかご存知でしょうか?\nもしくは、このミスを抑止する他の方法があればお聞きしたいです。",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1631682935.018700",
        "text": "<@U02E1JRGKEK> has joined the channel",
        "user": "U02E1JRGKEK",
        "type": "message"
    },
    {
        "ts": "1631755708.021300",
        "text": "お久しぶりです。\n昔に質問したと思うのですが、覚えていないのと自力解決を臨んでみたもののうまくいかなかったので質問します。\n```DP2.hs:12:1: error:\n    Could not find module 'Data.Vector.Unboxed'\n    Use -v (or `:set -v` in ghci) to see a list of the files searched for.\n   |\n12 | import qualified Data.Vector.Unboxed as U\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^```\n`DP2.hs` を `stack runghc DP2.hs` で走らせようとした時に生じたエラーメッセージです。\n\nこれに対し私は `package.yaml` の `dependencies`  に\n`Data`  を書き加えたのですが、全く同じエラーが出ます。\n解決方法を求めます。お願いします。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1631755708.021300",
        "text": "お久しぶりです。\n昔に質問したと思うのですが、覚えていないのと自力解決を臨んでみたもののうまくいかなかったので質問します。\n```DP2.hs:12:1: error:\n    Could not find module 'Data.Vector.Unboxed'\n    Use -v (or `:set -v` in ghci) to see a list of the files searched for.\n   |\n12 | import qualified Data.Vector.Unboxed as U\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^```\n`DP2.hs` を `stack runghc DP2.hs` で走らせようとした時に生じたエラーメッセージです。\n\nこれに対し私は `package.yaml` の `dependencies`  に\n`Data`  を書き加えたのですが、全く同じエラーが出ます。\n解決方法を求めます。お願いします。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1632030465.028000",
        "text": "<@U02FM2G52D6> has joined the channel",
        "user": "U02FM2G52D6",
        "type": "message"
    },
    {
        "ts": "1632111175.028200",
        "text": "<@U02EVE5LNSZ> has joined the channel",
        "user": "U02EVE5LNSZ",
        "type": "message"
    },
    {
        "ts": "1632185023.028400",
        "text": "<@U02F2NM6EKC> has joined the channel",
        "user": "U02F2NM6EKC",
        "type": "message"
    },
    {
        "ts": "1632232971.029900",
        "text": "<@UGM9F7XQS> <@UL1HFJATE> もしくは他の方でも構いません\n「Haskellで戦う競技プログラミング」でプリミティブ型についての説明をされている部分があったのですがいまいちピンとこなかったので質問させてください。\n以下第4章 P.33より抜粋\n&gt;  ここでの「プリミティブ型」という言い方は便宜的なものです。GHC 的にはプリミティブ型と言った\n&gt; ら GHC.Prim で定義されている unboxed 型のことでしょうが、ここでは「GHC の unboxed 型を\n&gt; ラップした型」程度の意味です。\n「GHC的にはプリミティブ型といったらGHC.Primで定義されているunboxed型」と「GHC の unboxed 型をラップした型」これらの文が理解できませんでした。\nGHC.Primが何のモジュールなのかもHackage見ただけではイマイチ理解できないレベルです。ざっくりとでも構いません、以上の文を噛み砕いていただけると助かります",
        "user": "U024U0DCJ3T",
        "type": "message"
    },
    {
        "ts": "1632233831.031900",
        "text": "<@U02FHKCM32M> has joined the channel",
        "user": "U02FHKCM32M",
        "type": "message"
    },
    {
        "ts": "1632241964.077600",
        "text": "はじめまして！\n\n環境構築について質問です。\n\nm1チップのmacbookでvscodeを使ってhaskellを学習したいのですが、vscode上でhlsがうまく動いてくれません。以下のようなエラーメッセージが出ます。\n• `Error on initialize: $HOME/.cache/ghcide: createDirectory: permission denied (Permission denied)`\n• `Couldn't start client Haskell` \n• `The Haskell server crashed 5 times in the last 3 minutes. The server will not be restarted`\n一つ目のエラーで 権限がないとのことなので、\n```$ chmod -R +w $HOME/.cache```\nとしたのですが、依然としてエラーが出ます。\n\nちなみに今は、ghcupを使ってghc, cabal-install, hlsを入れています。（stackは入りませんでした。）\nvscodeの拡張機能の設定でhlsのpathは`$HOME/.ghcup/` 以下のbinを指定しています。\n\nどなたかm1チップのmacとvscodeで環境構築できた方がいたら構築方法をご教示いただけないでしょうか？\n\nよろしくお願いします:man-bowing:",
        "user": "U01KE6706CR",
        "type": "message"
    },
    {
        "ts": "1632560266.086500",
        "text": "VSCodeで\n```The Haskell server crashed 5 times in the last 3 minutes. The server will not be restarted.```\nというエラーが発生しました。\n`stack clean --full` でキャッシュを掃除してVSCodeを再起動したのですが依然と同じエラーが出ます。\n解決方法を募集したいです。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1632566224.088800",
        "text": "となると多分デフォルトの値なんでしょうね。\nVSCode使わないから正直これ以上どう調べるか分からないなぁ。どなたか使っている方助け船を！ :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1632963970.095800",
        "text": "こんにちは、Template Haskellを書いている最中に\nIllegal variable name: Mail\nというエラーが出てきて困っています。\n\nエラーとしては\n```mailscript/app/Main.hs:18:1: error:\n    Illegal variable name: 'Mail'\n    When splicing a TH declaration:\n      main_0 = do {bodyTpl_1 &lt;- eitherParseFile \"./template/body.txt\";\n             titleTpl_2 &lt;- eitherParseFile \"./template/title.txt\";\n             Data.Traversable.mapM (\\property_3 -&gt; GHC.Base.pure (Language.Haskell.TH.Syntax.BindS (Language.Haskell.TH.Syntax.VarP (Language.Haskell.TH.Syntax.mkName GHC.Base.$ (\"input\" GHC.Base.++ property_3))) (Language.Haskell.TH.Syntax.VarE System.IO.getLine))) ps;\n             let {env_4 = fromPairs [(Data.Text.Lazy.unpack GHC.Base.$ Lib.key (Lib.Schema (Data.Text.Lazy.pack \"mail\") [Data.Text.Lazy.pack \"todayWorkSchedule\",\n                                                                                                                         Data.Text.Lazy.pack \"todayOutcome\",\n                                                                                                                         Data.Text.Lazy.pack \"tomorrowWorkSchedule\",\n                                                                                                                         Data.Text.Lazy.pack \"thoughts\"])) Data.Aeson.Types.ToJSON..= (Data.Aeson.Types.ToJSON.toJSON GHC.Base.$ Data.Foldable.foldl (GHC.Base.$) Main.Mail ps)];\n                  body_5 = Data.Either.either GHC.Err.error toStrict GHC.Base.$ (bodyTpl_1 GHC.Base.&gt;&gt;= (`eitherRender` env_4));\n                  title_6 = Data.Either.either GHC.Err.error toStrict GHC.Base.$ (titleTpl_2 GHC.Base.&gt;&gt;= (`eitherRender` env_4))};\n             uprint body_5;\n             uprint title_6}\n   |\n18 | do\n   | ^^...```\n現在、会社の日報のためにメール送信スクリプトを作成しようと考えています。jsonでデータの構造を書いておき、そのインスタンスをEDEでメールの定型文に読み込む方針で す。\n\n対象となるコードはこちらになります。Template Haskell自体まだ概念に馴染めておらず、なかなか苦戦しております…\nなにかおすすめの資料等あれば教えていただけるとありがたいです:writing_hand:\n\n```data Properties = Properties [Text] deriving Show\ninstance FromJSON Properties where\n    parseJSON (Array v) = Properties &lt;$&gt; parseJSON (Array v)\n    parseJSON _ = mzero\n\ndata Schema = Schema\n    { key :: Text\n    , properties :: [Text]\n    } deriving (Lift, Show)\ninstance FromJSON Schema where\n    parseJSON (Object v) =\n        if size v /= 1 then\n            fail \"expected a pair.\"\n        else\n            do hs &lt;- parseJSON (Object v)\n               let ls = toList hs\n               return . (\\(key, Properties properties) -&gt; Schema key properties) $ head ls\n\n\ntoTitle :: Text -&gt; String\ntoTitle =\n    let\n        toTitleString (c:cs) =\n            (toUpper c):cs\n    in\n    toTitleString . unpack\n\n\nschemaToData :: Schema -&gt; Q [Dec]\nschemaToData schema =\n  do\n    name &lt;- ( newName . toTitle $ key schema )\n    pure\n      [ DataD [] name [] Nothing\n        [ RecC\n            ( mkName . toTitle $ key schema )\n            ( Prelude.map\n                (\\property -&gt; ( mkName $ unpack property, Bang Language.Haskell.TH.NoSourceUnpackedness Language.Haskell.TH.NoSourceStrictness, ConT ''Text ))\n                ( properties schema )\n            )\n        ]\n        [ DerivClause Nothing [ConT ''Show, ConT ''Generic]\n        ]\n      , InstanceD Nothing [] (AppT (ConT ''ToJSON) (ConT name)) []\n      , InstanceD Nothing [] (AppT (ConT ''FromJSON) (ConT name)) []\n      ]```",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1632969952.096400",
        "text": "Template Haskellの `[e| ... |]` などについてもっと詳しく解説してる記事があれば誰補足してほしいです... :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1633183727.097000",
        "text": "<@U4LGTMTMK>\nすごく小さなスクリプトですが、とうとう完成できました！ありがとうございます！\nstage restrictionで長い間手こずりましたが……\n\nここで質問があります。\n1. ~日本語を表示する際unicode-showを使っているが、“が追加されるのを回避する方法はあるか？(showの挙動なので回避できない？)~\n2. SMTPでメール送信をしたいと考えているが、その際のメールアカウントのパスワードはどのように保存するべきか?\n\n~1番に関しては、後々TUIにしようと考えているので大きな問題ではないですが、もし何か解決法があるならお伺いしたいです。~\n馬鹿な勘違いでした:persevere:\n\n2番に関しては秘密鍵をコンパイル時に生成してコードに埋め込み、暗号化したパスワードをファイルに保存しようかと思っています。\nこれってセキュリティ的に問題があるんですかね？(使用するのは個人のパソコンなので問題ないのか？とも思っていますが……)",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1633238141.098800",
        "text": "<@U02G96VNDFG> has joined the channel",
        "user": "U02G96VNDFG",
        "type": "message"
    },
    {
        "ts": "1633247122.099000",
        "text": "<@U02G1B0Q7PZ> has joined the channel",
        "user": "U02G1B0Q7PZ",
        "type": "message"
    },
    {
        "ts": "1633304061.100200",
        "text": "<#C7Y71415W|math> に投げるか迷ったのですがこちらで。\nLensってありますよね、getterとsetterがあるという認識なのですが、これらの概念は、圏論的にはどのようなものとして説明されるのでしょうか？\nもしよろしければ、お教えいただけると幸いです。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1633311289.100800",
        "text": "",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1633971342.116400",
        "text": "<@U02HRM2QQ65> has joined the channel",
        "user": "U02HRM2QQ65",
        "type": "message"
    },
    {
        "ts": "1634002716.116600",
        "text": "<@U02HEH2GUQ2> has joined the channel",
        "user": "U02HEH2GUQ2",
        "type": "message"
    },
    {
        "ts": "1634361154.116800",
        "text": "<@U02HX93AXNH> has joined the channel",
        "user": "U02HX93AXNH",
        "type": "message"
    },
    {
        "ts": "1634452624.126300",
        "text": "こんにちは、一つ質問をさせてください！\n現在型安全に状態遷移を表現する方法について悩んでいます。\n\n```data State\n  = Ready 'StateA -- 型の上で次の状態を指定すれば、型安全な状態遷移を実現できるのではないか\n  | StateA [Text] 'StateB\n  | StateB [Text] 'Finished\n  | Finished [Text] '()\n\ntoStateA :: State -&gt; Text -&gt; State -- この型上で何かしらパターンマッチングをしないといけない？\ntoStateA (Ready 'StateA) text = -- 値でパターンマッチングをすることはできない\n  StateA [text]```\n理解が足りず、実現する手がかりがありません……\n\n型安全な状態遷移をするのに必要なことは\n• 型に次の状態を入れ込む\n• 関数のシグネチャで、特定の遷移先の情報を持っている型のみ引数に取るようにする\nだと考えているのですが、どのように状態の型を定義すればいいか少々混乱しています。なにかお力添えいただけないでしょうか？",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1634700438.133400",
        "text": "<@U02JRBV5T6V> has joined the channel",
        "user": "U02JRBV5T6V",
        "type": "message"
    },
    {
        "ts": "1634779264.002800",
        "text": "Haskellのデータ型を機械的に処理して、\nJavaでのUMLみたいなフィールドでの所持構造を簡単にグラフで表すツールはありますか?\nimportのグラフを生成するツールはかなり昔に書きましたが、\n<https://github.com/ncaq/haskell-import-graph>\nデータ型のグラフを生成するツールは見つかりませんでした。\nというか、Haskell Graph系のクエリで検索すると、グラフデータ構造の話題ばかり出てきて検索するのが困難だったりしました。\n\nなんでこれが必要なのかと言うと、Haskellを読解しない人にもある程度のデータ構造の相互概念を説明するのに便利かなと思ったためです。",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1634872946.009000",
        "text": "こんにちは、何度も質問してしまって大変恐縮なのですが、皆さんはどのようにしてここまでの知識を蓄えたのでしょうか？\n私はまだ断片的かつとても狭い知識にとどまっています。\n英語日本語問わず、なにか実用的なものを作るために必要な有機的知識を得るのに、有用な本等あれば教えていただきたいです。\n具体的なレベル感としては、モナドを使うことはできる、だがモナド変換子の実用的な知識まではない(囲っている変換子の数liftする、ぐらい)\nコードリーディングとかもしてみたいのですが、巷のものは抽象度が高すぎたり、高度な背景知識を必要とするものばかりで困っています…。\n\n↑書いたあとに思い出しましたが、私はhaskell wiki等全く読み込んでいませんでした。\nまずそこから勉強していこうと思います:persevere:",
        "user": "U028P8GL2FJ",
        "type": "message"
    },
    {
        "ts": "1634888491.009600",
        "text": "<@U02KDCGQQ1W> has joined the channel",
        "user": "U02KDCGQQ1W",
        "type": "message"
    },
    {
        "ts": "1635009035.010200",
        "text": "<@U02KHS5LPNC> has joined the channel",
        "user": "U02KHS5LPNC",
        "type": "message"
    },
    {
        "ts": "1635245542.010500",
        "text": "<@U02JVFSJT38> has joined the channel",
        "user": "U02JVFSJT38",
        "type": "message"
    },
    {
        "ts": "1635296487.010700",
        "text": "<@U02JZ60GBSS> has joined the channel",
        "user": "U02JZ60GBSS",
        "type": "message"
    },
    {
        "ts": "1635304643.010900",
        "text": "<@U02KVRJQJKS> has joined the channel",
        "user": "U02KVRJQJKS",
        "type": "message"
    },
    {
        "ts": "1635347071.011200",
        "text": "<@U02KAUR2K60> has joined the channel",
        "user": "U02KAUR2K60",
        "type": "message"
    },
    {
        "ts": "1635485580.011400",
        "text": "<@U02KK6NUFFE> has joined the channel",
        "user": "U02KK6NUFFE",
        "type": "message"
    },
    {
        "ts": "1635546600.011600",
        "text": "<@U02KLUFFJ6N> has joined the channel",
        "user": "U02KLUFFJ6N",
        "type": "message"
    },
    {
        "ts": "1635569517.012100",
        "text": "do記法に関して疑問があります。\n\n・doを使用すべき場面\n・doを使用しないようにすべき場面\n・理想的なdo記法の頻度\nについて、皆様の感触を聞きたいです。\n\n一般的な正解はないかもしれませんが、複数の意見を聞ければ手探りで考えてるよりは良いと思い書かせて頂きました。\n\nちなみに自分は自分で読むとき分かりやすいという理由で今バリバリdoを多用してます。(今書いてる約500行の.hsファイル中27個のdoがありました、これでも抑えた)\n現在私は「doを多用しても問題ないんじゃないか」的な感覚ですが、上級者はdoを使用しないとかネット上で聞くので、気になってます。\n\nちなみに趣味の範囲で書いていて、誰かにコードを見せるとかは普段はない状況です。\n\n深く使ってるという方でなくても、私はこう思ってるよー、的なので大歓迎ですので、できれば広く聞かせて頂ければありがたいと思っています。",
        "user": "U02JVFSJT38",
        "type": "message"
    }
]