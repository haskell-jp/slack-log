[
    {
        "type": "message",
        "user": "U05P3B4E516",
        "ts": "1692784236.307109",
        "text": "Haskellのライブラリをどのくらいの粒度でパッケージ分割したらいいのかの基準が自分の中でまだ整理が付いていないのですが、良い資料をご存知の方、もしくは考えをお持ちの方はいらっしゃいますか？\n\n以前、いわゆる「Internalモジュール」パターンは間違っていて、Internalモジュールが作りたくなったらパッケージ分割の合図だろうといった旨の↓の記事を見まして。\n記事の内容には完全に同意なのですが、すると、究極的にはなるべく細かく分割するのがよいのではないかと思うようになってしまいました。\n分割を止める基準、つまりトレードオフの「分割すべきでない」側の壁がどの辺りにあるのかが分からなくなっています。\n\n<http://nikita-volkov.github.io/internal-convention-is-a-mistake/>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1692794750.297889",
        "text": "個人的にはもっと重要な理由が生じない限り分けない方がいいと思いますね。\nさーっと読んだだけですが、その記事に書いてあることを採用してもPVPをちゃんと守れる以上のメリットが見当たらず、パッケージを分ける面倒くささに見合うと思えないので。"
    },
    {
        "type": "message",
        "user": "U05P3B4E516",
        "ts": "1692798070.557339",
        "text": "ありがとうございます\nなんとなく、パッケージの中で使われない部分はコンパイル時間を増大させるだけの無駄になってしまうということで、管理の面倒くささ（コスト）が許す範囲であればいくらでも細分化すべきくらいの勢いでも良いのかなと考えていたのですが、そうでもないっぽいですね…"
    }
]