[
    {
        "ts": "1589264392.131800",
        "text": "(GHCはcabalではないので、 `cabal.project` や `vector.cabal` を読まないのは当たり前っちゃあ当たり前で、問題はprecompiled packageがGHCからvisibleでないことだけなのですが)",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589267238.132300",
        "text": "<@U013N257LAY> has joined the channel",
        "user": "U013N257LAY",
        "type": "message"
    },
    {
        "ts": "1589296218.132800",
        "text": "`stack build` -&gt; `stack ghc` でとりあえずうまくいきました！ ただ， `vector` は project root 直下に `&lt;projectroot&gt;/src/Data/Vector` とあるのではなく `&lt;projectroot&gt;/Data/Vector` とあるので，project rootでコンパイルしようとすると `cabal` でも `stack` でも失敗するのは盲点でした (これを改善しても `cabal` だと失敗するのですが・・・．)",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589336050.133300",
        "text": "<@U0133EY6LPR> has joined the channel",
        "user": "U0133EY6LPR",
        "type": "message"
    },
    {
        "ts": "1589345019.133500",
        "text": "REPLと本番コードで有効な言語拡張が一致していないとか?",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1589349600.133700",
        "text": "それはありそうだと思ってググったりもしたのですが、ghciから今有効になっている言語拡張のリストとか出せますかね。",
        "user": "U4MMHDSNT",
        "type": "message"
    },
    {
        "ts": "1589349674.133900",
        "text": "`:show language` で出せるはずです",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1589349845.134100",
        "text": "おお、出ました。ありがとうございます。",
        "user": "U4MMHDSNT",
        "type": "message"
    },
    {
        "ts": "1589349867.134300",
        "text": "`:set`でも出る感じ。",
        "user": "U4MMHDSNT",
        "type": "message"
    },
    {
        "ts": "1589349931.134500",
        "text": "あと思いつく原因としてはexportの範囲の違いが考えられますね どうもghciはpackageがexportしてなかったりimportしてない型も構わず出すようですけど, それを指定すると当然エラーになります",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1589350095.134700",
        "text": "プログラムに付与したプラグマと合わせたけど変わらん。",
        "user": "U4MMHDSNT",
        "type": "message"
    },
    {
        "ts": "1589353829.140500",
        "text": "`gitrev` パッケージって誰か使ったことのある方いらっしゃいます? Template Haskell 使って実行バイナリの中に Git revision hashを書き込んでくれる可愛いパッケージで、Option parser library (`&lt;project root&gt;/src/TheApplicationProject/OptionParser.hs` みたいなファイル)で `--version` の実装に使っています。ですが、 `&lt;project root&gt;` で `git checkout` して `stack build` しても `stack exec executable -- --version` の Git revision hashが更新されないことが多数で、いちいち `stack clean` しないといけなくて困っています。`gitrev` の実装では `addDependentFile` を `.git/HEAD` やらに対してちゃんと実行しているように見えるので、行き詰まってしまっているのですが、どなたかお心当たりのある方いらっしゃいます?",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589354479.144900",
        "text": "gitrev はメンテされていないので githash の方が良いかも？\n<https://github.com/snoyberg/githash>",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1589355093.145300",
        "text": "自己解決しました。\n<https://wiki.haskell.org/GHC/Type_families>\nこの What is the problem? にある\n```GHC will happily infer the type g :: F a -&gt; F a. But you can't write that type signature or, indeed, the more specific one above. (Arguably this behaviour, where GHC infers a type it can't check, is very confusing. I suppose we could make GHC reject both programs, with and without type signatures.)```\nでした。\nそうか、GHC will infer the type, But You can't that type.\n確かに very confusing だった。 :bomb:",
        "user": "U4MMHDSNT",
        "type": "message"
    },
    {
        "ts": "1589360668.152400",
        "text": "ありがとうございます。しかし、この問題は `gitrev` 及び `githash` 共通の問題であることが発覚しました。 `.git/HEAD` が コミットハッシュである際には `addDependentFile \".git/HEAD\"` されますが、 `.git/HEAD` が `ref: branch` の際には `addDependentFile \"branch\"` のみが呼ばれ、 `addDependentFile \".git/HEAD\"` は呼ばれないため、 `git checkout` では recompileはtriggerされない、という問題のようです。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589360841.154300",
        "text": "どっちも「現在のブランチを取得する」関数持ってるので明確にバグですね・・・。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589360964.155200",
        "text": "あとで適当にプルリク投げようと思います。お騒がせしました。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589375299.159000",
        "text": " この件ですが、 そもそも `.git/HEAD` が `ref: branch\\n` であるところを `drop 5` してブランチファイルを `branch\\n` として検索した結果「ブランチファイルが存在してない扱いになる」ことが判明しました。面白かったのでお知らせします。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589491465.159400",
        "text": "<@U013PEFKSG3> has joined the channel",
        "user": "U013PEFKSG3",
        "type": "message"
    },
    {
        "ts": "1589619346.159700",
        "text": "<@U013KEH28TG> has joined the channel",
        "user": "U013KEH28TG",
        "type": "message"
    },
    {
        "ts": "1589722941.170400",
        "text": "haskell-gi における、GObject Introspection の Haskellの命名規則に反する識別子名の取扱について他の方の意見が聞きたいので、質問します。\n現状では、小文字始まりの識別子は先頭大文字化、その他はそのまま（例：`ABC` → `ABC`、`channelName` → `ChannelName`）なのですが、\nこれでは数字始まりの識別子名が扱えない為に、<https://github.com/haskell-gi/haskell-gi/issues/292> にて、そのような定数名tk先頭が大文字ならそのまま、そうでなければ `Const'` を接頭（例：`ABC` → `ABC`、`channelName` → `Const'channelName`、`3270_Attn` → `Const'3270_Attn` ）しようという話になっています。\n恐らく GObject の識別子名には `'` は用いることができないものと思われる（C言語において識別子名に `'` は用いることができない故 <https://twitter.com/na4zagin3/status/1262012340339265536>）ので、この方針は機能するものと思います。\nしかしながら、小文字始まりの定数名にも `Const'` が着くのは若干気持ち悪さがあったりしますし、他の方法等思いつく方等いらっしゃいますか？",
        "user": "U6JPU2DD2",
        "type": "message"
    },
    {
        "ts": "1589761621.170800",
        "text": "完全に決めの問題なんで好みが大きいとは思いますが、厳密に名前の衝突を避ける必要があるなら Const' はよい案ではないでしょうか。\n個人的にはさすがにそこまでしなくとも `C'` でよくない？という気はします。\nいずれにしても、慣習として関わる人が納得できるものであればなんでもよいかと",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1589770742.178400",
        "text": "Template haskellの再コンパイル時のdirtiness checkについて質問があって、 `addDependentFile` でディレクトリでない存在するファイルの変更・削除の追跡ができるのはわかるのですが、ディレクトリに対するファイルの削除・追加とか、ファイルの新規作成の追跡ってできないものでしょうか・・・。この前お聞きした `githash` だの `gitrev` だのにpull requestを書きたいのですが、Gitブランチの参照先の変化がファイルの新規作成によって起こる可能性があって、困り果てています。 <https://haskell-jp.slack.com/archives/C5666B6BB/p1589353829140500|https://haskell-jp.slack.com/archives/C5666B6BB/p1589353829140500>",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1589804092.181600",
        "text": "ありがとうございます！　私も `C'` で良いと思いますし、実質的に IBus バウンディングにしか影響が無いようなので、 `C'`にしてもらいました",
        "user": "U6JPU2DD2",
        "type": "message"
    },
    {
        "ts": "1589848262.182100",
        "text": "<@U013VMYK5QS> has joined the channel",
        "user": "U013VMYK5QS",
        "type": "message"
    },
    {
        "ts": "1590111595.182500",
        "text": "<@U014TBBSRBJ> has joined the channel",
        "user": "U014TBBSRBJ",
        "type": "message"
    },
    {
        "ts": "1590148448.182800",
        "text": "<@U01448XBRMY> has joined the channel",
        "user": "U01448XBRMY",
        "type": "message"
    },
    {
        "ts": "1590323492.191500",
        "text": "すみません、ちょっと詰まってしまったので質問させてください。\nFreeBSD(12.1)上でncursesパッケージをビルドすると以下のようなエラーメッセージが出ます。\n<https://hackage.haskell.org/package/ncurses>\n(Ver 0.2.16)\n&gt; &gt;&gt; cabal build\n(略)\n[4 of 5] Compiling UI.NCurses       ( dist/build/UI/NCurses.hs, dist/build/UI/NCurses.o )\n&gt; lib/UI/NCurses.chs:442:27: error:\n&gt;     * Couldn't match type `CWchar' with `CInt'\n&gt;       Expected type: CWString -&gt; IO CInt\n&gt;         Actual type: Ptr CInt -&gt; IO CInt\n&gt;     * In the second argument of `withCWString', namely `(waddwstr win)'\n&gt;       In the expression: withCWString str (waddwstr win)\n&gt;       In the second argument of `($)', namely\n&gt;         `\\ win -&gt; withCWString str (waddwstr win)'\n&gt;     |\n&gt; 442 |         withCWString str ({# call waddwstr #} win)\n&gt;     |                           ^^^^^^^^^^^^\n&gt; \n&gt; lib/UI/NCurses.chs:447:38: error:\n&gt;     * Couldn't match type `CWchar' with `CInt'\n&gt;       Expected type: CWString -&gt; IO CInt\n&gt;         Actual type: Ptr CInt -&gt; IO CInt\n&gt;     * In the second argument of `withCWString', namely `(waddwstr win)'\n&gt;       In the expression: withCWString (T.unpack txt) (waddwstr win)\n&gt;       In the second argument of `($)', namely\n&gt;         `\\ win -&gt; withCWString (T.unpack txt) (waddwstr win)'\n&gt;     |\n&gt; 447 |         withCWString (T.unpack txt) ({# call waddwstr #} win)\n&gt;     |                                      ^^^^^^^^^^^^\n&gt; \n&gt; lib/UI/NCurses.chs:725:53: error:\n&gt;     * Couldn't match type `CWchar' with `CInt'\n&gt;       Expected type: Ptr CInt\n&gt;         Actual type: Ptr CWchar\n&gt;     * In the third argument of `hsncurses_init_cchar_t', namely\n&gt;         `cChars'\n&gt;       In a stmt of a 'do' block:\n&gt;         hsncurses_init_cchar_t\n&gt;           (CCharT pBuf) cAttrs cChars (fromIntegral cCharsLen)\n&gt;       In the expression:\n&gt;         do hsncurses_init_cchar_t\n&gt;              (CCharT pBuf) cAttrs cChars (fromIntegral cCharsLen)\n&gt;            io (CCharT pBuf)\n&gt;     |\n&gt; 725 |         {# call hsncurses_init_cchar_t #} (CCharT pBuf) cAttrs cChars (fromIntegral cCharsLen)\n&gt;     |\nエラーメッセージにあるとおり、引数の型が合わないことが原因のようです。\nFFIで呼び出すC言語の関数waddwstrはヘッダファイル(ncurses.h)では\nextern NCURSES_EXPORT(int) waddwstr(WINDOW *,const wchar_t *);のように宣言されています。\nしかし、c2hsでNCurses.chsがNCurses.hsファイルに展開されると\nforeign import ccall safe \"UI/NCurses.chs.h waddwstr\"\n  waddwstr :: ((Window) -&gt; ((C2HSImp.Ptr C2HSImp.CInt) -&gt; (IO C2HSImp.CInt)))\nとなってしまいます。\n\nどのあたりを確認すべきか、何かアドバイスがありましたら宜しくお願いします",
        "user": "UU0KWNXRN",
        "type": "message"
    },
    {
        "ts": "1590364248.192900",
        "text": "Haskell入門するためにhaskell-ide-engineをVSCodeでやろうと思って公式のインストールをやったのですが、正しくインストールできているかわかりません。確認する方法はありますか？",
        "user": "ULGDZNXS7",
        "type": "message"
    },
    {
        "ts": "1590365177.193000",
        "text": "試しに `stack new` なりを実行してプロジェクトを作って、そのプロジェクトを開いてエラーが起きないことを確認するのが一番でしょう。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590366757.193200",
        "text": "hie自体はhie-wrapper path/to/Module.hsして動作確認できます",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1590388382.193800",
        "text": "手元のLinux (Debian 10)で同じパッケージをインストールしても問題が発生しなかったので、FreeBSD版のncursesがどういう仕様になっているか、ですかね...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590389236.194100",
        "text": "*hie-wrapper path/to/Module.hsをしたところ、*\n```Note: loading of 'Setup.hs' is not supported.```",
        "user": "ULGDZNXS7",
        "type": "message"
    },
    {
        "ts": "1590389244.194300",
        "text": "というメッセージが出ました。",
        "user": "ULGDZNXS7",
        "type": "message"
    },
    {
        "ts": "1590389254.194500",
        "text": "これは正常に動作しているということなのでしょうか？",
        "user": "ULGDZNXS7",
        "type": "message"
    },
    {
        "ts": "1590389276.194700",
        "text": "全文↓\n```2020-05-25 15:46:04.67934 [ThreadId 4] - run entered for hie-wrapper(hie-wrapper) Version 1.2, Git revision ee5b98c6bd3610ff90cb5373608a09c5813dcb69 (3829 commits) x86_64 ghc-8.8.2\n2020-05-25 15:46:04.680157 [ThreadId 4] - Current directory:/Users/kent\n2020-05-25 15:46:04.680199 [ThreadId 4] - Operating system:darwin\n2020-05-25 15:46:04.680228 [ThreadId 4] - args:[\"path/to/Module.hs\"]\n2020-05-25 15:46:04.682433 [ThreadId 4] - Could not find a Project for file: /Users/kent/File.hs\n2020-05-25 15:46:04.68252 [ThreadId 4] - Module \"/Users/kent/File.hs\" is loaded by Cradle: Cradle {cradleRootDir = \"/Users/kent\", cradleOptsProg = CradleAction: Direct}\n2020-05-25 15:46:04.682561 [ThreadId 4] - Cradle directory:/Users/kent\n2020-05-25 15:46:04.682781 [ThreadId 4] - Executing GHC on path with args: --numeric-version\n2020-05-25 15:46:04.779279 [ThreadId 4] - Project GHC version:8.8.3\n2020-05-25 15:46:04.779462 [ThreadId 4] - hie exe candidates :[\"hie-8.8.3\",\"hie-8.8\",\"hie\"]\n2020-05-25 15:46:04.779869 [ThreadId 4] - found hie exe at:/Users/kent/.local/bin/hie-8.8\n2020-05-25 15:46:04.779931 [ThreadId 4] - args:[\"path/to/Module.hs\"]\n2020-05-25 15:46:04.779992 [ThreadId 4] - launching ....\n\n\n\nRunning HIE(hie-8.8)\n  Version 1.2, Git revision ee5b98c6bd3610ff90cb5373608a09c5813dcb69 (3829 commits) x86_64 ghc-8.8.2\nTo run as a LSP server on stdio, provide the '--lsp' argument\nCurrent directory:/Users/kent\n\nargs:[\"path/to/Module.hs\"]\n\nLooking for project config cradle...\n\n2020-05-25 15:46:04.807328 [ThreadId 4] - Could not find a Project for file: /Users/kent/File.hs\n2020-05-25 15:46:04.807789 [ThreadId 4] - Module \"/Users/kent/File.hs\" is loaded by Cradle: Cradle {cradleRootDir = \"/Users/kent\", cradleOptsProg = CradleAction: Direct}\n2020-05-25 15:46:04.808 [ThreadId 4] - Executing GHC on path with args: --numeric-version\n2020-05-25 15:46:04.940545 [ThreadId 4] - Executing GHC on path with args: --print-libdir\n\n\n###################################################\n\nCradle: GHC session\nProject Ghc version: 8.8.3\nLibdir: Just \"/usr/local/Cellar/ghc/8.8.3/lib/ghc-8.8.3\"\nSearching for Haskell source files...\nFound 0 Haskell source files.\n\n###################################################\n\nFound the following files:\n\n\n\nLoad them all now. This may take a very long time.\n\n\n###################################################\n###################################################\n\nDumping diagnostics:\n\n\n\n\nNote: loading of 'Setup.hs' is not supported.\n2020-05-25 15:46:05.313744 [ThreadId 4] - done```",
        "user": "ULGDZNXS7",
        "type": "message"
    },
    {
        "ts": "1590389403.194900",
        "text": "詳細はわかりませんが、とりあえずインストールはうまくいっているとみていいと思います。\n（追記）あとは使って確かめた方がよいかと",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590391993.195200",
        "text": "これでビルドできるようになると思います。<https://github.com/freebsd/freebsd-ports/blob/master/games/hs-scroll/files/patch-lib_UI_NCurses.chs>",
        "user": "UL3EYH36Z",
        "type": "message"
    },
    {
        "ts": "1590394933.195600",
        "text": "そうですね。ありがとうございます！",
        "user": "ULGDZNXS7",
        "type": "message"
    },
    {
        "ts": "1590413376.199100",
        "text": "path/to/Module.hsはお手元のプロジェクトに合わせて適宜差し替えてください。プロジェクトによってはそのままではうまく動かないので <https://github.com/Avi-D-coder/implicit-hie|https://github.com/Avi-D-coder/implicit-hie> を使ってhie.yamlを生成した方が良い場合もあります。",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1590417187.199400",
        "text": "ご回答ありがとうございます。\n私もLinux(Ubuntu20.04)の環境で試したらビルドが通りました。動作も問題ないようです。",
        "user": "UU0KWNXRN",
        "type": "message"
    },
    {
        "ts": "1590417273.199900",
        "text": "FreeBSD用?のパッチありがとうございました。早速あてて確認してみたいと思います。\n結果は改めて報告致します。",
        "user": "UU0KWNXRN",
        "type": "message"
    },
    {
        "ts": "1590421890.200100",
        "text": "頂いたパッチでビルドが通るようになりました。明日動作確認してみます。\nありがとうございまいました。",
        "user": "UU0KWNXRN",
        "type": "message"
    },
    {
        "ts": "1590544873.200500",
        "text": "報告が遅くなりましたが、頂いたパッチでサンプルは無事動作しました。\nなぜ展開結果が異なるのかは、時間があるときに改めて調査してみたいと思います。",
        "user": "UU0KWNXRN",
        "type": "message"
    }
]