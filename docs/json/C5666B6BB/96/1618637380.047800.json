[
    {
        "ts": "1618637380.047800",
        "text": "前ここで質問させていただいた、\n<https://haskell-jp.slack.com/archives/C5666B6BB/p1594261873131500|https://haskell-jp.slack.com/archives/C5666B6BB/p1594261873131500>\nに関連するのですが、haskellのlayout付きコードをbraces and semicolonsに完全に変換するのって、自分で例のレポートのL関数を(悪名高いparse-error(t)含め)実装するしかないのでしょうか？ ghcの拡張をふんだんに使ったコードを変換するので、あんまり車輪の再発明はしたくなくて…",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1618643307.048100",
        "text": "<https://github.com/goldfirere/th-desugar> とか要件を満たしますかね？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1618643348.048500",
        "text": "ああー、と思ったけどレイアウトルールとかについては何もしてくれないか... :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1618658976.049600",
        "text": "そうっぽいですね…．\n「あるライブラリパッケージのモジュールを全部1つのexecutable program source fileに埋め込む」みたいなことをしたくて，ライブラリ側をimport部と宣言部に分けてpreprocessしてそれぞれぶち込んじゃえ，という発想になったんですね．import部において，対象パッケージ外をimportしてるものを全部 import qualifiedにして対応する宣言部のimported nameをぜんぶfully-qualified nameに置き換えようと思ったときに，レイアウトがおもいっきり崩れて辛いんで，レイアウトから自由になれればいいなあ，という動機だったんですが…",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1618668851.051500",
        "text": "将来的な話ですが1ファイルに複数モジュール定義できるようにするLocal modulesのproposalが議論されていますよ。\n\n<https://github.com/ghc-proposals/ghc-proposals/pull/283|https://github.com/ghc-proposals/ghc-proposals/pull/283>",
        "user": "UDUBKLQMD",
        "type": "message"
    },
    {
        "ts": "1618697095.051900",
        "text": ":point_up: の自分の発言で思いついたんですが、Template Haskellでパースしてからpretty printしちゃうというのはいかがでしょうか？ドキュメントのとおり、そもそもTempate Haskellレベルの構文木ではレイアウトルールは一切考慮されないみたいですし\n<http://hackage.haskell.org/package/template-haskell-2.17.0.0/docs/Language-Haskell-TH.html#t:Exp>",
        "user": "U4LGTMTMK",
        "type": "message"
    }
]