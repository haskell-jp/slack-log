[
    {
        "ts": "1708850624.063239",
        "text": "少し早いですが今日はここまでにしておきます。\ncabal replの件は、前回までに作ったものを実行してみたところ --build-tool-depends なんてオプション知らないと言われ、 <https://bsky.app/profile/igreque.info/post/3km7qbe4ijs2s> の通りちゃんと調査したはずなのにな...と絶望 :disappointed: しつつ build-tool-dependsについても .cabal ファイルを書き換えることで、libraryの情報を他のコンポーネントにコピーする方向で着手しています。\nmakeMistakesToLearnHaskellの進捗:\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/20ce57fa38600588f5217c93eab507e28dd9611c>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1708851653.064349",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1708852504.950659",
        "text": "4.6.4 Printing a list の Ex.4.25 の続きを進めました。\n解くのにすごく時間がかかってしまいましたが、一応リストを表示できるようになった模様です。\nただ、実行ステップ数もかなり増えてしまいました。これで正しいのか不安です。既存のテストプログラムが正しく動くかまでは確認できませんでした。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1708852826.316539",
        "text": "Hinze R, Magalhães J P, Wu N.  <https://www.cs.ox.ac.uk/ralf.hinze/publications/Sorting.pdf|A Duality of Sorts> §1 ~ §4:　読了 Insertion sort/Bubble sort が step 関数 swap を介し fold/unfold を用いて dual に実現され\nこれを範として一般化すると para/apo は (co)algebra のある step 関数を介し fold/unfold で dual に実現される\n競プロ典型 90 問 31 日目 - VS AtCoder（★6）イロイロと実例を試して Grundy 数を探している　どうせそれの mex なんでショ　と云う目論見",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1709438568.743939",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1709438609.061859",
        "text": "山本悠滋です。いつもどおりmakeMistakesToLearnHaskellと、cabal replの件の続きをやります。今日もHaskell関係ない別件の締め切りが迫っているので早めに切り上げるかもしれませんが悪しからず！",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1709439086.911019",
        "text": "Hinze R, Magalhães J P, Wu N.  <https://www.cs.ox.ac.uk/ralf.hinze/publications/Sorting.pdf|A Duality of Sorts> (2013) §5 ~\nあとハシゴで <https://atcoder.jp/contests/typical90|競プロ典型 90 問> 32 日目 - AtCoder Ekiden（★3）",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1709439632.583839",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\n先週に続き、Implementing Functional Languages: a tutorial の、4.6 Mark 5: Structured data の続きを進めていこうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1709447565.899819",
        "text": "キリがいいのでここまでにしておきます。\n・makeMistakesToLearnHaskellの進捗: <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/78e7af1db5185d0aabcb59aa95556928c5d5c781>\n・cabal replの件は、libraryのbuild-tools-dependsを追加する処理について、テストを修正するなどしてました。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1709456458.084469",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1709456665.111109",
        "text": "Hinze R, Magalhães J P, Wu N.  <https://www.cs.ox.ac.uk/ralf.hinze/publications/Sorting.pdf|A Duality of Sorts> §5 ~ §7:　読了  Merge sort を実現するにあたって Growing Tree と Merging Tree を行うが fold apo を用いると伝統的な merge sort のようになり　相対的に unfold para を用いると heap sort のようになる\n競プロ典型 90 問 32 日目 - AtCoder Ekiden（★3） N が １０ 以下なので充分に（制約付き）全数列挙で解ける　結果 AC だった　さらに桁違いに早い BitDP 解法があるらしいので検討中",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1709456727.207749",
        "text": "4.6.4 Printing a list の Ex.4.25 について、出力がリストの場合のみ topCont 関数を実行するようにしたところ、既存のテストプログラムも正しく動いたようなので、Ex.4.25をひとまず完了としました。\nその後、Ex.4.26 を解いています。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1710043371.669219",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1710043696.106819",
        "text": "尾上能之 \"融合変換による関数プログラムの最適化\" (2002) 博士論文\nあとハシゴで <https://atcoder.jp/contests/typical90|競プロ典型 90 問> 34 日目 - There are few types of elements（★4）",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1710043975.538949",
        "text": "S.K.です。今週もお世話になります。よろしくお願いします。\n先週に続き、Implementing Functional Languages: a tutorial の、4.6 Mark 5: Structured data の続きを進めていこうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1710045365.911019",
        "text": "山本悠滋です。今日は <https://ospn.connpass.com/event/304655/|https://ospn.connpass.com/event/304655/> で出展中なので、合間を縫って makeMistakesToLearnHaskell の続きを進めます。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1710061235.639259",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1710061931.319079",
        "text": "尾上能之 \"融合変換による関数プログラムの最適化\" ：　読了　融合変換からなるプログラムを hylo の再帰形式で現わす　酸性雨定理を適用し中間的なデータ構造を用いない効率的なプログラムを導く　変換アルゴリズムを GHC 上に実装しベンチマークで効果を示した　－　詳細な議論や導出はすべて省略したが　それでもわかる壮大な馬力に圧倒された\n競プロ典型 90 問 34 日目 - There are few types of elements（★4）：　アイデア（最長部分列が中間にある時と末尾にある場合に分けて集計する）出しただけで未実装",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1710062176.122829",
        "text": "Ex.4.26 は、簡易表示の時に、出力リストに要素が追加された場合は要素の値、それ以外は'.'を出力するようにしてみました。テストプログラムが一通り動いたので、ひとまず完了としました。\nその後、4.6.5 Using data structures directly を進めています。†マークが付いているセクションなのに加えて、あまり詳しく説明がされておらず、自分にとってはかなり難しいです。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1710076789.683819",
        "text": "バタバタして遅くなってしまいましたが、今日のmakeMistakesToLearnHaskellの進捗です。\n初めて画像を追加しました。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/4dd8179ed96d000bdc8e8baaa152a3d6c80035a8>",
        "type": "message",
        "user": "U4LGTMTMK"
    }
]