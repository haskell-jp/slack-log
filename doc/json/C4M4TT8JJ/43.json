[
    {
        "ts": "1552968004.112900",
        "text": "<@UH2T18UM9> has joined the channel",
        "user": "UH2T18UM9",
        "type": "message"
    },
    {
        "ts": "1553148450.114000",
        "text": "本日の <#C85U8HH0V|github-trends> より。Haskell製 3D FPSゲーム\n<https://github.com/rainbyte/frag>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553156783.115000",
        "text": ":wine_glass:  _【速報】_  winery 1.0解禁のお知らせ <http://fumieval.hatenablog.com/entry/2019/03/21/172101>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553170561.118700",
        "text": "Haskellに関する日本語の情報を集積する非公式のScrapboxプロジェクト、haskell-shoen(Haskell荘園)を作りました。手始めにライブラリやデータ構造などの比較をいくつか書きましたが、Haskellに関する内容なら自由に書いて大丈夫です　<https://scrapbox.io/projects/haskell-shoen/invitations/854ccb19ed83c54db8fc66e0c79bf4c1>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553171993.119000",
        "text": "<@UH5R84WKC> has joined the channel",
        "user": "UH5R84WKC",
        "type": "message"
    },
    {
        "ts": "1553173483.119200",
        "text": "今日、パッチが適用されました。 ログインしないでもpage historyを表示できるようになっています。 また、ログインすると、editできるようになっているはずです:slightly_smiling_face:",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1553181307.120000",
        "text": "まだ7人しか来てないですよ！執筆の自信がなくても自己紹介とかだけでいいのでどんどん書き込んでください！",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553211068.121100",
        "text": "WAIアプリをAWS Lambdaで動かす。現代Haskellらしいアプローチだと思う。\n<https://github.com/deckgo/wai-lambda>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553248549.123000",
        "text": "AtCoderのGHCどうやって入れてるのか不明ですが、 `Data.Vector` は入ってるっぽいんですよね（コンパイル通った）",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1553256675.123300",
        "text": "Haskell荘園、現在18項目あります。今日のピックアップは「状態管理」 <https://scrapbox.io/haskell-shoen/%E7%8A%B6%E6%85%8B%E7%AE%A1%E7%90%86>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553257245.123700",
        "text": "AtCoder の人が個別のライブラリまで入れてくれているとは思えないし、 Haskell Platform でしょうかね <https://www.haskell.org/platform/contents.html>",
        "user": "U578W9676",
        "type": "message"
    },
    {
        "ts": "1553296735.125300",
        "text": "<https://scrapbox.io/haskell-shoen/Applicative>　任意のTraversableをソートする方法、気になりませんか？",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553307947.126100",
        "text": "<@UGZ0PUZA5> has joined the channel",
        "user": "UGZ0PUZA5",
        "type": "message"
    },
    {
        "ts": "1553400065.127500",
        "text": "<https://scrapbox.io/haskell-shoen/Monoid> 参加してみたくて、とりあえずモノイドの記事を書いてみました。",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553481896.130200",
        "text": "RWSってなんて呼ぶんでしょうね。自分は心の中で「るーす」と呼んでますが（そもそも口に出す機会がない）",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1553482535.130300",
        "text": "そのままアールダブリュエス（そもそもあまり使わない",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1553485361.131000",
        "text": "条件によって評価されたりされなかったりする変数をifとかの外に置いても気にしなくていいのは遅延評価の典型的なメリットですよな。ガードについたwhereは確かに意識から漏れそう。\n<https://qiita.com/pxfnc/items/a26bda6d11402daba675>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553485689.131200",
        "text": "RWS Monad, どんなときに使うのがいいんすかね。普通にReaderT, WriterT, StateTを重ねるだけでも今のGHCならいい感じに最適化してくれるという認識でしたが...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553487808.131400",
        "text": "アールダブリュエス派です。普通に変換子をスタックするよりは2割くらい速くなります（しかしWriter部分が遅いので結局うちではRWSIOを直接定義していますが…）",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553488304.131700",
        "text": "<http://hackage.haskell.org/package/transformers-0.5.6.2/docs/Control-Monad-Trans-RWS-CPS.html> ができた今なら自前で定義する必要はないかも知れませんね！ :bulb:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553491216.132300",
        "text": "haskellのruntimeじゃなくてnode.jsの上で動いてますね。\n一度haskellのruntimeをみてみましたが、単にprocessを起動しているだけで実質node.jsの上で動かすのと大差ないですからね。（ちゃんと動くか不安しかなく、あまりメリットを感じなかったです。）",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1553493896.133000",
        "text": "transformersのRWS.CPSはモナドの中のタプルがCPSになってないんですね…\n(RankNTypesくらいは入れてしまってもよいのでは、と思わなくもない)",
        "user": "U560KD6DN",
        "type": "message"
    },
    {
        "ts": "1553495224.133300",
        "text": "Writerで累積させる仕組みを関数にするというだけで、一般的な意味でのCPSモナドとは作りが違うようで…",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553495802.133700",
        "text": "CPSしたいときはふみさん作のmtl-cを使おう！",
        "user": "U560KD6DN",
        "type": "message"
    },
    {
        "ts": "1553499247.135600",
        "text": "Haskellのパッケージの性質を表すアイコンの作成を試みているんですが、抽象的なので難しい（一応左から制御構造、データ、IO、エンコーディング、テスト、パーサのつもり）",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553505833.136800",
        "text": "<@UH65CARPS> has joined the channel",
        "user": "UH65CARPS",
        "type": "message"
    },
    {
        "ts": "1553511518.138000",
        "text": "パッケージのティアリスト(対戦型ゲームなどで強いとされる、よく使われているもののランキング)を作りました　<https://scrapbox.io/haskell-shoen/%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%86%E3%82%A3%E3%82%A2%E3%83%AA%E3%82%B9%E3%83%88>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553511581.138200",
        "text": "カタカナでハスケルって見るといつもちょっとびっくりしません？:smirk:\nnon-Haskeller向けの文脈に出てきたな、って感じがしまして。\n<https://coinpiace.com/cardano/news/iohk-haskell-course-graduation/?amp=1&amp;__twitter_impression=true>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553512888.138500",
        "text": "<@UH8KHK1KN> has joined the channel",
        "user": "UH8KHK1KN",
        "type": "message"
    },
    {
        "ts": "1553568629.139600",
        "text": "そのコース、最後の2週間はフィリップ・ワドラー氏が携わったスマートコントラクト言語を本人から直々に教えてもらったそうです。羨ましい。\n<https://wadler.blogspot.com/2019/03/two-weeks-of-teaching-in-ethiopia.html>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1553570114.141400",
        "text": "rio全盛なので、ベースモナドはRIOにしたいからResourceTを噛みたくない、っていう理由があるのかな、と思った（rio使うプロジェクト作ってないからわからないけど) <https://twitter.com/myuon_myon/status/1110214453897752576>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553570405.142000",
        "text": "Considered harmful系エントリ書かれてた <https://www.fpcomplete.com/blog/2018/10/resourcet-necessary-evil>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553572096.142300",
        "text": "RIOをResourceT相当にできるインスタンスが便利です <http://hackage.haskell.org/package/rio-orphans-0.1.1.0/docs/RIO-Orphans.html#t:HasResourceMap>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553572696.142900",
        "text": "「bracketで済む所はbracket使えよ」っていうのが上のFPCompleteの記事の要旨ですが、RIOのReaderのデータにHandle入れたい、みたいな状況では凄く役に立ちそうです &gt; rio-orphans",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553575887.143100",
        "text": "<https://hackage.haskell.org/package/http-conduit-1.2.6/docs/Network-HTTP-Conduit.html>\nここのwithManagerがResourceT付でしたが、\n\n上記の認識が広がり（ResourceTやめる）\n<https://hackage.haskell.org/package/http-conduit-2.3.6.1/docs/Network-HTTP-Conduit.html>\nなくなったのはいいのですが、\ngcで回収という話になり、\nいつ解放されるか不安です。\n\nなにかご存じであればよろしくお願いします。",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1553581819.143600",
        "text": "問題になるとしたら `Manager` が保持しているコネクションプールですが、いい感じにやってくれてる、と信じるほかないのではないかと。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553581937.143900",
        "text": "ちなみにその実装は <https://github.com/snoyberg/http-client/blob/master/http-client/Data/KeyedPool.hs> にあります。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553583164.144400",
        "text": "ありがとうございます",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1553587020.145500",
        "text": "<https://scrapbox.io/haskell-shoen/%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%86%E3%82%A3%E3%82%A2%E3%83%AA%E3%82%B9%E3%83%88> こうして見ると、Hackageには星の数ほどパッケージはあれど、必修レベルのものは意外と少ないですね",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553587752.145700",
        "text": "glやOpenGLよりglossの方が採用件数は多そうだと思いました",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553588126.145900",
        "text": "そもそも抽象度が違うパッケージですが、glossはOpenGL/GLUTを使っていますね",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1553588455.146100",
        "text": "間接依存を「よく使うライブラリ」に含むかどうか、はちょっと主観が入りそうですね。vectorなんかは直接にも間接にも非常によく使うので、文句なくよく使うライブラリに入ると思います",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553589213.146400",
        "text": "glossはグラフィック入門としては非凡なライブラリですけど、凝った事をやろうとすると卒業して低レイヤーに行きたくなる感じなので、評価が難しいですね",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553590804.146600",
        "text": "やってる事の詳細については分からないのですが、withManagerと同じ事をしたい場合は\n\n```\nbracket (newManager xxx) closeManager $ \\manager -&gt; do\n  ...\n```\n\nでいいと思います",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1553591494.146900",
        "text": "async便利だと思うんですけど、世間的には使われてるんですかね。あとsafe-exceptionsとか",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1553593037.147200",
        "text": "`closeManager` は今はもうなんもしてないんです。。。\n<https://stackage.org/haddock/lts-13.14/http-client-0.5.14/src/Network.HTTP.Client.Manager.html#closeManager>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1553593087.148100",
        "text": "あーgc任せってそういう事なんですね",
        "user": "U570660KX",
        "type": "message"
    }
]