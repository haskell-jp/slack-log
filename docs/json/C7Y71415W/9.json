[
    {
        "ts": "1585133863.001000",
        "text": "Coalgebra の方ってレンズとかライフゲームだっけ。",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585134017.003100",
        "text": "なんか、レンズの有用性とかあまり知らないので、ちゃんとやりたいな。",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585134447.005300",
        "text": "Traversable とは、横断検索ができる形のデータ型の型クラス？\n実用例としては、主にツリー型への適用だろうか。",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585135095.005400",
        "text": "Hom(BxC,D) == Hom(B,Hom(C,D))\n\nこれは、\ng (b,c) = curry g b c\nのカリー化を端的に表しているものだと思いましたが、\n(&gt;&gt;=) を用いて何をしようとしているのでしょうか。",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585215045.005700",
        "text": "```f : A -&gt; B \ng : B -&gt; A -&gt; C \nに対して、\n\n自然に考えられる　A -&gt; C の要素は、\nλa. (g (f a) a) \nでしょうか。```",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585215974.006600",
        "text": "元記事をよんでみたが、\nclass Category の定義に id でなく、idA があるのが謎すぎる（読むのをやめた）",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585216714.007000",
        "text": "なるほど、これを読めばいいのか。\n<https://blog.jle.im/entry/intro-to-machines-arrows-part-1-stream-and>",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585314795.012800",
        "text": "そうであろうと思いながら、実際に例を見つけられていなくてモヤモヤしていることなのですが：\n\n1. 圏 `C` と圏 `D` を用意\n2. 函手 `F: C → D` と函手 `G: C → D` を用意\n3. 任意に `F` と `G` を選んだとき、自然変換は必ずしも構成できない\n   (函手圏として捉えれば、任意の2対象間に必ずしも射が存在するとは限らない、の意)\n\nこれは自明だと思っているのですが、どうしても型と関数の圏に閉じる場合、\n適当な自然変換を構成できてしまうようにも思えてしまい… 何か身近な反例って無いでしょうか？ :thinking_face:\n(もしくは、CCCだと任意の2自己函手間に自然変換を構成できてしまう、などあったりするのか)",
        "user": "UDC1LV887",
        "type": "message"
    },
    {
        "ts": "1585315331.013000",
        "text": "CやDは一般の圏でもOKですか？（型と関数の圏にはこだわらない？）",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1585315359.013200",
        "text": "一般の圏でも良いです :slightly_smiling_face:",
        "user": "UDC1LV887",
        "type": "message"
    },
    {
        "ts": "1585315763.013400",
        "text": "Cを空でない適当な圏として、D={:smile:,:thinking_face:}を対象が2個の離散圏（射が恒等射しかない圏）とします。Fを、対象をすべて:smile:に送り、射もすべてid_:smile:に送る自明な関手とします。Gは対象をすべて:thinking_face:に送り、射をすべてid_:thinking_face:に送る自明な関手とします。FからGへの自然変換を作るにはCのそれぞれの対象（仮にaとします）について射Fa→Gaを用意しないといけませんが、Fa=:smile:とGa=:thinking_face:の間には射は存在しないのでそのような自然変換は存在しません。",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1585315950.013600",
        "text": "あー、それはめちゃわかりやすいですね！ありがとうございます :bow:",
        "user": "UDC1LV887",
        "type": "message"
    },
    {
        "ts": "1585437682.014100",
        "text": "<@U0111FK01HD> has joined the channel",
        "user": "U0111FK01HD",
        "type": "message"
    },
    {
        "ts": "1585535672.014700",
        "text": "続くCoqでの証明はわからんけど、すごくおもしろい <https://qiita.com/nekonibox/items/c1c7f4d1ad1695967e39>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1585537233.015700",
        "text": "半順序でのソートってつまりトポロジカルソートなのでは（まだ記事を読んでいないけど）",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1585537335.016700",
        "text": "&gt;  そこで、O(n log n)の全順序におけるソートアルゴリズムが流用できないかを考察していきます。\nとあるとおり、既存のソートアルゴリズムを再利用できないか、という試みです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1585537418.018700",
        "text": "読みました。その通りですね。最悪計算量が O(n log n) であるアルゴリズムが全滅しているのは偶然なのかな？",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1585621172.019100",
        "text": "<@U570660KX>「同型があることが前提で」と書いたのは間違いでした。 \nlaw を満たすと以下のような随伴関係が成り立つので自然な同型になり、\n随伴関手からモナドはできる、となるようです。\n```左随伴関手\nF(X) = (X, C)\nF(f) = pure((f, id))\n右随伴関手\nG(Y) = Hom_α(C, Y) （Hom_α(C, Y) は本でいえば α C Y のこと）\nG(g) = (&gt;&gt;&gt; g)\n単位 η = mkPair\n余単位 ε = app\n随伴関手 (F,G,η,ε)\nε の自然性が合成則\n余単位-単位恒等式\nεF ・ Fη = 1_F が簡約則\nGε ・ ηG = 1_G が外延性則```",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1585627308.019400",
        "text": "なるほど。ちょっとMerlyのケースにあてはめてみます",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1585638302.019700",
        "text": "`G(Y) = C -&gt; Y` と書いてしまいましたが `G(Y) = α C Y` だったので修正しました。",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1585638943.022800",
        "text": "Haskell と圏論との関連性を追求したいならば、（個人的意見(要望にあたるのかな)ですが、）\n\nAwodey \"Category Theory\"\n\nを読んでおいたほうがいいように思います。\n重要な具体例のオンパレードで、\n滑らかに議論が進むと思います。",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585639064.023900",
        "text": "ざっと思いつくのだと、\n\n• Free Monad \n• Free Category \n• Group as an category \n• the category of logic \n随伴などでは\n\n• 随伴の構成的な定義\n• product -| exponential \n• Free (Monoid) -| Forgetful \n• Free (Category) -| Forgetful \nくらいかなあ。\nあんましでてこないや,,,",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585639404.025900",
        "text": "Awodey わかりやすいですよね!\n英語版ならPDFもあるし\n（PDF 注意）<http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.211.4754&amp;rep=rep1&amp;type=pdf>\n邦訳も出ているし（訳があまり良くないという話もありますが :sweat_smile: ）\n<https://www.kyoritsu-pub.co.jp/bookdetail/9784320111158>",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1585640348.028500",
        "text": "あと,ついでに",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585640440.030100",
        "text": "随伴 -&gt; モナドは、\nF -| G -&gt; GF ですが、\n\nモナド -&gt; 随伴は、\nMacLane （邦訳は圏論の基礎？だったかな？）に記述があります。(Chapter VI. Monads and Algebras の Theorem I )",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585640708.031300",
        "text": "Monad T をT-algebra とみたとき、\n随伴が確か構成できたと記憶しています。",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585644489.034700",
        "text": "うーん、あんまり活発な議論にならんわりに無駄に時間取られるので、退出します...",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585644529.034900",
        "text": "<@U0108S1LS2W> has left the channel",
        "user": "U0108S1LS2W",
        "type": "message"
    },
    {
        "ts": "1585705069.035500",
        "text": "なるほどそうか、随伴のHomの関係式\n\n```Hom(F(X), Y) &lt;-&gt; Hom(X, G(Y))```\nは両辺同じ圏のHomである必要はないんだ、\nだから\n\n```k (a, b) c === (a -&gt; k b c)```\nは、ちゃんと随伴の関係式なんですね",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1585705382.035700",
        "text": "引用元のスレッドに挙げたのですが、冪対象の定義だと、この関係は両辺ともHom_Cだったので <https://ja.wikipedia.org/wiki/%E5%86%AA%E5%AF%BE%E8%B1%A1#%E5%AE%9A%E7%BE%A9>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1585706693.036700",
        "text": "例のAwodeyの邦訳の質の悪さは焚書ものだという評判ですね",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1585707390.037400",
        "text": "邦訳なら『ベーシック圏論』が良いと聞きますよね",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1585707470.038300",
        "text": "僕はまだ読めてないんですが今度Zoomでの輪講が企画されてるので参加してみようと思ってます :eyes:\n<https://haskell-jp.slack.com/archives/C4NDY2TF1/p1585019424018000>",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1585755653.038900",
        "text": "<@UL3EYH36Z> has joined the channel",
        "user": "UL3EYH36Z",
        "type": "message"
    },
    {
        "ts": "1587274735.039200",
        "text": "<@U0100JBRCFL> has joined the channel",
        "user": "U0100JBRCFL",
        "type": "message"
    },
    {
        "ts": "1587553836.039800",
        "text": "行列演算からフィボナッチ数を求める方法があるとはしらなんだ\n<http://www.haskellforall.com/2020/04/blazing-fast-fibonacci-numbers-using.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1587559573.040000",
        "text": "私の記事でも扱っているネタですね。英訳を用意しておくべきだったか… <https://blog.miz-ar.info/2019/01/fast-fibonacci/|https://blog.miz-ar.info/2019/01/fast-fibonacci/>",
        "user": "UGM9F7XQS",
        "type": "message"
    },
    {
        "ts": "1587559702.040200",
        "text": "あれ、ホントだ、すごいよく似た内容でしたね... :cold_sweat:\n当時はまだ購読してなかったか...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1587602376.040400",
        "text": "SICPにもありますね．問題1.19",
        "user": "U4KU9ABL0",
        "type": "message"
    },
    {
        "ts": "1588007290.040800",
        "text": "<@U012JCZR01Z> has joined the channel",
        "user": "U012JCZR01Z",
        "type": "message"
    },
    {
        "ts": "1588550786.041100",
        "text": "<@U012YCXSY90> has joined the channel",
        "user": "U012YCXSY90",
        "type": "message"
    },
    {
        "ts": "1588820683.041400",
        "text": "<@U5JKC6FN0> has joined the channel",
        "user": "U5JKC6FN0",
        "type": "message"
    },
    {
        "ts": "1588935780.042700",
        "text": "数学に本質的じゃない、興味本位の質問ですみません。\nprofunctorパッケージのドキュメントを読んでたらTambara <http://hackage.haskell.org/package/profunctors-5.5.2/docs/Data-Profunctor-Strong.html#t:Tambara> という型に出会ったのですが、この名前はYonedaのように日本人の名前由来なんでしょうか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1588936517.042900",
        "text": "Tambara functor",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1588936538.043100",
        "text": "<http://pantodon.shinshu-u.ac.jp/topology/literature/Mackey_functor.html|http://pantodon.shinshu-u.ac.jp/topology/literature/Mackey_functor.html>",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1588936601.043700",
        "text": "丹原 大介 、らしいです。ググった結果によると。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1588983558.044200",
        "text": "ありがとうございます！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1589330218.044400",
        "text": "<@U013HUC1F28> has joined the channel",
        "user": "U013HUC1F28",
        "type": "message"
    }
]