[
    {
        "ts": "1601102669.002200",
        "text": "なんか最近そのへんが少し変わる(変わった？)という噂も <https://github.com/haskell/cabal/issues/6481|https://github.com/haskell/cabal/issues/6481>",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1601275043.009700",
        "text": "windows上のstackでhmatrixを使おうとしています。`stack install --flag hmatrix:openblas`でインストールしpackage.yamlのdependenciesにhmatrixを追加したら、`stack build`は通るのに`stack ghci`すると途中で落ちてしまいます。\nOS：windows10\nstackのresolver：lts-16.15\n\n↓`stack ghci --ghci-options -v`の出力末尾↓\n```（前略）\nLoading package primitive-0.7.0.1 ... linking ... done.\nLoading package vector-0.12.1.2 ... linking ... done.\nLoading package hmatrix-0.20.0.0 ...\nPS （ディレクトリ名）&gt;```\n↓package.yamlの一部↓\n```extra-include-dirs:\n- C:\\OpenBLAS\\include\n\nextra-lib-dirs:\n- C:\\OpenBLAS\\bin\n- C:\\OpenBLAS\\lib\n- （略）\\stack\\x86_64-windows\\msys2-20180531\\usr\\lib\\gcc\\x86_64-pc-msys\\9.3.0\n- （略）\\stack\\x86_64-windows\\msys2-20180531\\mingw64\\bin```\n",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1601315324.010000",
        "text": "ぐちゃぐちゃやっている間に原因もわからず自決してしまいました（正しい方法もわからないままなので申し訳ないです）。具体的には package.yamlの該当部分を\n```flags:\n  hmatrix:\n    openblas: true\n\nextra-include-dirs: []\n\nextra-lib-dirs:\n- C:\\libs```\nのように書き換えて、C:\\libs 内にanacondaでインストールしてコピーした以下のファイル\n```libgcc_s_seh-1.dll\nlibgfortran.dll\nlibgfortran-3.dll\nlibopenblas.dll\nlibquadmath-0.dll```\nを配置したらghciも動作しました",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1601334814.010300",
        "text": "よかった :relieved:\nところでpackage.yamlといっているのはstack.yamlのことですよね...？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1601358465.010700",
        "text": "あﾞ…（修正しました）",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1601452112.011300",
        "text": "<@U01BNUXDD5Z> has joined the channel",
        "user": "U01BNUXDD5Z",
        "type": "message"
    },
    {
        "ts": "1601452504.014600",
        "text": "はじめまして!Haskellを最近始めました!\n`$ stack new project` で新しくプロジェクトを始めた際の質問です!\n新しく作ったプロジェクトではどのようにテストを書くのが良いのですか?\nテストのフレームワーク(何がデファクトスタンダードなのでしょうか?)､ユニットテストの方法( `Spec.hs` の中に `import Lib` と書いてて､`Lib.hs` に書いた関数をテストすれば良い?)について教えていただけると助かります!",
        "user": "U01BNUXDD5Z",
        "type": "message"
    },
    {
        "ts": "1601468551.016200",
        "text": "はじめまして！\n最近の実践的な良いテスト方法は、他の人々のお薦めを待ちますが、個人的には、以下のWebなどを参考にしていました。\n<https://haskell.e-bigmoon.com/stack/test/index.html>\n<https://haskell.e-bigmoon.com/stack/test/doctest.html>\n<https://kazu-yamamoto.hatenablog.jp/entry/20121205/1354692144>\n他の人の、お薦めをお待ちします:slightly_smiling_face:",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1601488244.017500",
        "text": "（二ヶ月間これを知らなくて「Ctrl+Cしたのに落ちない…」って言いながら毎回ターミナルを再起動していたのは秘密）\n<https://haskell-jp.slack.com/archives/CR2TETE5R/p1576308562002700?thread_ts=1576308358.002600&amp;cid=CR2TETE5R>",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1601519786.018000",
        "text": "<@U01BRF5D69Z> has joined the channel",
        "user": "U01BRF5D69Z",
        "type": "message"
    },
    {
        "ts": "1601521222.018100",
        "text": "Reminder: \nbeginnersチャンネルは、新しい人がスムーズにHaskellに慣れるための質問を歓迎するチャンネルです。\nHaskell-Beginners ML や IRCの#haskell-beginners  や RedditのMonthly Hask Anythingのような位置づけを意図しています。\n\nbeginnersチャンネルでの回答側は、以下の左側のような応答を厳禁とする運用です。\n• それはくだらない質問だ → くだらない質問など無い\n• その質問は以前にもあった → 質問者はそんなこと知らない\n• Google検索せよ → 検索できないから質問している\nbeginnersチャンネルでは、例えば以下のレベルの質問から歓迎します。\n• `:` とは何のことですか。\n• タプルとは何ですか。\n",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1601534879.018200",
        "text": "その記事から特に大きな変化はないっす",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1601552291.018700",
        "text": "<@U01BY9MH3D2> has joined the channel",
        "user": "U01BY9MH3D2",
        "type": "message"
    },
    {
        "ts": "1601689316.019300",
        "text": "<@U01BWG4572N> has joined the channel",
        "user": "U01BWG4572N",
        "type": "message"
    },
    {
        "ts": "1602001113.019500",
        "text": "<@U01CF0YMQTT> has joined the channel",
        "user": "U01CF0YMQTT",
        "type": "message"
    },
    {
        "ts": "1602030660.019700",
        "text": "<@U01CTA51H5W> has joined the channel",
        "user": "U01CTA51H5W",
        "type": "message"
    },
    {
        "ts": "1602214391.019900",
        "text": "<@U01C9E3CY3C> has joined the channel",
        "user": "U01C9E3CY3C",
        "type": "message"
    },
    {
        "ts": "1602481889.020100",
        "text": "<@U8G16FA59> has joined the channel",
        "user": "U8G16FA59",
        "type": "message"
    },
    {
        "ts": "1602656592.020300",
        "text": "<@U01CFSSPZHB> has joined the channel",
        "user": "U01CFSSPZHB",
        "type": "message"
    },
    {
        "ts": "1602666574.020500",
        "text": "<@U01C4GV9CNT> has joined the channel",
        "user": "U01C4GV9CNT",
        "type": "message"
    },
    {
        "ts": "1602829496.020700",
        "text": "<@U01CJ1CHKP0> has joined the channel",
        "user": "U01CJ1CHKP0",
        "type": "message"
    },
    {
        "ts": "1603021327.020900",
        "text": "<@U01D04JMR6G> has joined the channel",
        "user": "U01D04JMR6G",
        "type": "message"
    },
    {
        "ts": "1603098255.021000",
        "text": "回答ありがとうございます。別の問題が出てきて、挙げていただいた方法を試すところにたどり着けない状況です。すみません。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1603165741.025100",
        "text": "Haskellでスマートフォンアプリのバックエンドの開発を考えています。\nウェブフレームワークがいくつかあるみたい（Yesod, servant..など？他にもある？）ですがどのように選べばよいかご教授願えないでしょうか？",
        "user": "U01D04JMR6G",
        "type": "message"
    },
    {
        "ts": "1603166180.025300",
        "text": "<@U01CGJAL9QF> has joined the channel",
        "user": "U01CGJAL9QF",
        "type": "message"
    },
    {
        "ts": "1603188920.025400",
        "text": "<https://wiki.haskell.jp/Hikers%20Guide%20to%20Haskell#web%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3> をどうぞ。その用途でしたらservantかscottyでしょうね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1603198113.026100",
        "text": "<@U01DASL8F33> has joined the channel",
        "user": "U01DASL8F33",
        "type": "message"
    },
    {
        "ts": "1603205750.027100",
        "text": "こんにちは〜！初発言, 初質問です！\nhaskellの型クラスをpythonでいうところの抽象基底クラスのようなもの？だと考えました〜",
        "user": "U01CJ1CHKP0",
        "type": "message"
    },
    {
        "ts": "1603205758.027300",
        "text": "(途中で送ってしまった)",
        "user": "U01CJ1CHKP0",
        "type": "message"
    },
    {
        "ts": "1603205826.028700",
        "text": "型クラスに実装を書いている例をたまに見かけますが、不適切な実装なのでしょうか？(最小の実装であっても、型だけ定義して実装は定義しないべきか否か)",
        "user": "U01CJ1CHKP0",
        "type": "message"
    },
    {
        "ts": "1603238013.029500",
        "text": "型クラスに実装を書いている例、というのはこういうの :point_down: ですか？\n```class Hoge a where\n  hoge x = \"implementation!\"```\nこれのことだとすると、結論から言うと全く問題ないです。\n（すみません、どう理由を説明しようかちょっとまだ考え中です。取り急ぎの回答として）",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1603242083.038700",
        "text": "ありがとうございます！例の通りで問題ないです\n\n実はこの質問をした後、他のコミュニティでも聞いてみたのですが、「Eq型クラスの様に、片方の実装(==,/=いずれか)のみを書くことでもう片方も実装されるなどのメリットから、デフォルト実装を置くのは問題ない」という回答をもらいました！\n\nどうやら自分の中で「抽象に実装を書くのは良くないことだ」という固定観念があり、それで今回の様な質問になってしまいました…\n\n何か他に理由として挙げられるものがありましたら、ぜひ教えていただきたいです！\n\n改めてありがとうございます！",
        "user": "U01CJ1CHKP0",
        "type": "message"
    },
    {
        "ts": "1603261400.039100",
        "text": "ありがとうございます！参考になりました！",
        "user": "U01D04JMR6G",
        "type": "message"
    },
    {
        "ts": "1603261454.039400",
        "text": "他の言語のinterfaceとかだとそうなのかもしれませんね…\nでもJavaのinterfaceでも最近はdefaultとかありますしそんな悪い気は私はしていませんね\n汎用的に他の型クラスの関数を組み合わせて実装出来るけど特定のデータ構造の場合他のアルゴリズムを使った方が効率が良い場合にデフォルト実装を提供しておくみたいな使いみちもありますし…\nあえて良くない理由を考えてはみたのですがそもそも思いつきませんね…何を最小実装すれば良いのか即座にわからなくなるぐらいでしょうか",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1603262604.039600",
        "text": "多分、「haskellの型クラスをpythonでいうところの抽象基底クラスのようなもの」と考えたところがこの疑問の根っこだとすると、Pythonなどの抽象基底クラスの場合、具象クラスは一つのクラスしか継承できないので基底クラスが実装を持っていると柔軟性がなくなるところに問題があるのではないかと思います。Pythonにはぴったり該当するものがあっても（イテレータープロトコルとかそれらしき規約はありますが）キーワードとしては存在しないんですよねぇ :disappointed_relieved:\n\nそんなわけでPythonにはなくてわかりづらいですが、型クラスはあくまでも他の言語で言うところのinterfaceのようなものなので、一つの方が複数の型クラスを実装しても問題がないですし、同じ名前のメソッドを実装してしまって衝突する、なんてこともありません。名前の衝突はモジュールが扱う問題なので",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1603406030.040400",
        "text": "<@U01DVKMPLBA> has joined the channel",
        "user": "U01DVKMPLBA",
        "type": "message"
    },
    {
        "ts": "1603461108.040600",
        "text": "<@U56JX2GM8> has joined the channel",
        "user": "U56JX2GM8",
        "type": "message"
    },
    {
        "ts": "1603465267.040800",
        "text": "<@U01DX9LJEKA> has joined the channel",
        "user": "U01DX9LJEKA",
        "type": "message"
    },
    {
        "ts": "1603531829.041000",
        "text": "<@U01D94RDGH1> has joined the channel",
        "user": "U01D94RDGH1",
        "type": "message"
    },
    {
        "ts": "1603580945.041200",
        "text": "<@U01D9JB22CT> has joined the channel",
        "user": "U01D9JB22CT",
        "type": "message"
    },
    {
        "ts": "1604024185.041400",
        "text": "<@U01ECB0PNTA> has joined the channel",
        "user": "U01ECB0PNTA",
        "type": "message"
    },
    {
        "ts": "1604151622.043600",
        "text": "<@UQERMQX8W> has joined the channel",
        "user": "UQERMQX8W",
        "type": "message"
    },
    {
        "ts": "1604168083.044700",
        "text": "<@U01DB6D212B> has joined the channel",
        "user": "U01DB6D212B",
        "type": "message"
    },
    {
        "ts": "1604199619.044800",
        "text": "Reminder: \nbeginnersチャンネルは、新しい人がスムーズにHaskellに慣れるための質問を歓迎するチャンネルです。\nHaskell-Beginners ML や IRCの#haskell-beginners  や RedditのMonthly Hask Anythingのような位置づけを意図しています。\n\nbeginnersチャンネルでの回答側は、以下の左側のような応答を厳禁とする運用です。\n• それはくだらない質問だ → くだらない質問など無い\n• その質問は以前にもあった → 質問者はそんなこと知らない\n• Google検索せよ → 検索できないから質問している\nbeginnersチャンネルでは、例えば以下のレベルの質問から歓迎します。\n• `:` とは何のことですか。\n• タプルとは何ですか。\n",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1604720450.045000",
        "text": "<@U01EEFP2KT6> has joined the channel",
        "user": "U01EEFP2KT6",
        "type": "message"
    },
    {
        "ts": "1604731271.045200",
        "text": "<@U01E1MFRX8E> has joined the channel",
        "user": "U01E1MFRX8E",
        "type": "message"
    },
    {
        "ts": "1604977000.045500",
        "text": "<@U01ED8J2PQB> has joined the channel",
        "user": "U01ED8J2PQB",
        "type": "message"
    },
    {
        "ts": "1605066217.045700",
        "text": "<@U01EV0SRHPT> has joined the channel",
        "user": "U01EV0SRHPT",
        "type": "message"
    },
    {
        "ts": "1605334721.045900",
        "text": "<@U01EJPV0E2J> has joined the channel",
        "user": "U01EJPV0E2J",
        "type": "message"
    },
    {
        "ts": "1605700699.046100",
        "text": "<@U01F0HBGLHZ> has joined the channel",
        "user": "U01F0HBGLHZ",
        "type": "message"
    }
]