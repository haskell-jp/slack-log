[
    {
        "type": "message",
        "user": "U025VRNCXAQ",
        "ts": "1624289049.004600",
        "text": "<@U025VRNCXAQ> has joined the channel"
    },
    {
        "type": "message",
        "user": "U018KEA7Y83",
        "ts": "1624991448.004900",
        "text": "<@U018KEA7Y83> has joined the channel"
    },
    {
        "type": "message",
        "user": "U019SBU4MJT",
        "ts": "1628067901.000200",
        "text": "<@U019SBU4MJT> has joined the channel"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1629432276.001900",
        "text": "<https://zimbatm.com/NixFlakes/>\nnix flakesをつかうとキャッシュを置いているところ（substituters）もプロジェクトのファイル(flake.nix)に\nおけるのですね。便利ですね。\nキャッシュに限らずnixConfigに、いままでユーザー独自の設定（*nix*.confにおいていたもの）にいれていたものも\nflake.nixにいれられそうですね。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1629432550.002900",
        "text": "一番使う用途として多いのは\n<https://github.com/input-output-hk/haskell.nix|haskell.nix>をつかうときのキャッシュ（<https://hydra.iohk.io>）を追加することですね。\n<https://github.com/teto/quantum/blob/master/flake.nix#L5-L12>"
    },
    {
        "type": "message",
        "user": "U578W9676",
        "ts": "1629432695.004000",
        "text": "haskell.nix をちょっと試すときにそれに気づいておお! となりました。flake 最高ですね!"
    },
    {
        "type": "message",
        "user": "U02E9R6AZ36",
        "ts": "1631438733.000300",
        "text": "<@U02E9R6AZ36> has joined the channel"
    },
    {
        "type": "message",
        "user": "U02E1JRGKEK",
        "ts": "1631683136.000500",
        "text": "<@U02E1JRGKEK> has joined the channel"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1633146532.003400",
        "text": "こんなcontribution guideを敷いているリポジトリーにPull requestを送ろうとしたんですが、Nixをインストールして `nix-shell` したところ、多くのパッケージを何時間もかけてコンパイルしようとして結局失敗してしまいました（申し訳なくも失敗の正確な原因はつかめてません）。こういうとき、そもそもこれだけのためにわざわざコンパイルするのが苦痛なんでなんとか省略する方法はないのでしょうか？Cachixというのを使えばいいんですかね？\n<https://github.com/NorfairKing/sydtest/blob/master/CONTRIBUTING.md>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1633247938.008300",
        "text": "本件続報です。cachixをインストールしようとして気づいたのですが、どうも当初からこちらの問題にハマっていたのではないかと思います。\n<https://discourse.nixos.org/t/nix-build-trying-to-build-basic-tools-for-all-packages-from-scratch/11097/2>\nで、解決策曰くconfiguration.nixの `nix.trustedUsers` という項目をいじれ、とのことなのですが、 `find / -name configuration.nix` してみても該当のファイルが見当たりませんでした。どこに置いてあるのでしょうか？"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1633260425.009600",
        "text": "ようやくnix-shellを起動して必要なものをインストールできたのでCONTRIBUTING.md の指示どおりnix-shellで `stack test --pedantic` したところ、こんなエラーが\n``` &lt;command line&gt;: /nix/store/ikl21vjfq900ccbqg1xasp83kadw6q8y-glibc-2.32-46/lib/libc.so.6: symbol _dl_fatal_printf version GLIBC_PRIVATE not defined in file ld-linux-x86-64.so.2 with link time reference```\n検索して見つかった <https://stackoverflow.com/questions/49245547/version-glibc-private-not-defined-in-file-ld-linux-x86-64-so-2> を読んだところ、元々DebianにインストールされていたglibcとNixが入れたglibcとで競合しているために発生しているようです。\nどなたか直し方に心当たりありませんか？"
    },
    {
        "type": "message",
        "user": "ULMGVGLP3",
        "ts": "1635403335.000200",
        "text": "<@ULMGVGLP3> has joined the channel"
    },
    {
        "type": "message",
        "user": "UL3EYH36Z",
        "ts": "1635420702.000400",
        "text": "<@UL3EYH36Z> has joined the channel"
    },
    {
        "type": "message",
        "user": "UCM4G8PGW",
        "ts": "1635917508.000800",
        "text": "アドベントカレンダーを作ってみました\nよければご参加ください\n<https://qiita.com/advent-calendar/2021/nix>"
    },
    {
        "type": "message",
        "user": "UJQ5HAP8E",
        "ts": "1636036255.001300",
        "text": "<@UJQ5HAP8E> has joined the channel"
    },
    {
        "type": "message",
        "user": "UCM4G8PGW",
        "ts": "1638588037.001900",
        "text": "書きました\n誤りがあれば指摘していただけると嬉しいです\n<https://scrapbox.io/mrsekut-p/Nixを使うと何が嬉しいのか>"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1640018036.003200",
        "text": "haskellとまったく関係ないですが書きました。\nよろしくお願いします。\n<https://qiita.com/junjihashimoto@github/items/67c951fbf90ef3592eaa>"
    },
    {
        "type": "message",
        "user": "U02NV8V2EEQ",
        "ts": "1641789755.000200",
        "text": "<@U02NV8V2EEQ> has joined the channel"
    },
    {
        "type": "message",
        "user": "U02USQMELUX",
        "ts": "1643124766.636099",
        "text": "<@U02USQMELUX> has joined the channel"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1646761059.014999",
        "text": "rules_nixpkgsは単にnix-buildを実行しているだけですかね。\nこれ自体は分散ビルドには対応してなさそう？\n<https://github.com/tweag/rules_nixpkgs/blob/b39b20edc4637032bc65f6a93af888463027767c/nixpkgs/nixpkgs.bzl#L140-L227>"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1646761647.692479",
        "text": "bazel力がまったくないですが、`bazel query` で依存関係をしらべればどこが分散して実行されるかわかりますね。（たぶん）"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1646761799.264169",
        "text": "flakesには対応してないですね。\n<https://github.com/tweag/rules_nixpkgs/issues/127>"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1646793104.057509",
        "text": "rules_nixpkgsはrules_haskellでつかうライブラリを事前にセットアップするためだけにつかう用途のようですね。\nnixpkgsのderivationはBUILDの中に記述できないみたいです。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1647539570.628689",
        "text": "<https://discourse.nixos.org/t/nix-2-7-0-released/18072>\n&gt; •  Nix will now make some helpful suggestions when you mistype something on the command line. For instance, if you type `nix build nixpkgs#thunderbrd`, it will suggest `thunderbird`.\n地味に嬉しいですね。"
    },
    {
        "type": "message",
        "user": "U038R6FM96G",
        "ts": "1648205127.715999",
        "text": "<@U038R6FM96G> has joined the channel"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1649643502.948909",
        "text": "hydra.iohk.ioがおそすぎるが、（indexのダウンロードとか、100kb/secくらいしかでてないような。）\n&gt;  [7/31 built, 1/11/62 copied (815.7/886.1 MiB), 77.2/154.7 MiB DL] fetching 01-index.tar.gz-at-2022-04-11T000000Z from <https://hydra.iohk.io>\n自前でproxyをたててcloudflareをいれれば速くなりますかね。\n<https://github.com/input-output-hk/haskell.nix/issues/1406>"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1649643634.821189",
        "text": ""
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1649643693.018959",
        "text": "nixでghc9.2をまともに使うにはhaskell.nixしかないのが辛い。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1649862177.897249",
        "text": "ghc-9.2でhnixをつかうにはgithubにあるものをつかう必要があるが、\ncabal.projectがgit submodulesをうまく認識しない。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1649862253.705909",
        "text": "自分のレポジトリにforkして、submoduleの部分を消せばいいのでしょうが。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1652319010.124309",
        "text": "<https://www.haskellforall.com/2017/01/typed-nix-programming-using-dhall.html>\nこちらにあるdhallToNixと同様に\nhaskellToNixでnix上でhaskellを書いてnix expression生成できるようになりました。（ただ単に書けるだけでeDSLとしてはいまいちかなと思っています。）\n<https://github.com/junjihashimoto/typed-hnix>\nそもそもnix expressionのようにlambdaと名前付き引数を持つ言語をDSLでどう表現したものかと思っています。\nスマートコントラクト系のeDSLのようにしたらいいのではないかと思っていますが、まだ自分の理解が追いついてないところです。\n<https://serokell.io/blog/lorentz-implementing-smart-contract-edsl-in-haskell>\n<https://github.com/Plutonomicon/plutarch/blob/master/docs/README.md>"
    },
    {
        "type": "message",
        "user": "UFP82PUF3",
        "ts": "1652508018.669189",
        "text": "<@UFP82PUF3> has joined the channel"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1653372843.804469",
        "text": "ついにhaskell.nixがCDNに対応しました。\nhydra.iohk.ioをcache.iog.ioに置き換えれば速くなります。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1653658449.458509",
        "text": "<https://twitter.com/domenkozar/status/1530169510841487368?s=21&amp;t=KAV-opybC5I6Jm-c4kdtuQ|https://twitter.com/domenkozar/status/1530169510841487368?s=21&amp;t=KAV-opybC5I6Jm-c4kdtuQ>\nついにnixのデバッガがきた！"
    },
    {
        "type": "message",
        "user": "U03H9PH8FRP",
        "ts": "1654508724.460969",
        "text": "<@U03H9PH8FRP> has joined the channel"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1657497424.163799",
        "text": "<https://discourse.nixos.org/t/nix-packaging-the-heretic-way/20157>\n特定のbuildだけsandboxを外す方法。\n*2nixがない場合、*2nixがうまくセットアップできない場合、ネットワークへのアクセスが必要な一般的なパッケージマネージャを使うときに有用です。"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1657851615.625149",
        "text": "<https://github.com/nickel-lang/nickel-nix>\nnickelでnixを書くためのプロジェクトが\n今年2月から開発されていたのですね。\nPoCの段階のようですが、\n型はつかわれていてhaskellでいう `::` がnickelでは `|` ですかね。\n<https://github.com/nickel-lang/nickel-nix/blob/future/future/playground/acpilight.ncl>\nこちらがderivationの定義？\n<https://github.com/nickel-lang/nickel-nix/blob/future/future/prototype/nix_builtins.ncl>"
    },
    {
        "type": "message",
        "user": "U4MAYDV9C",
        "ts": "1659404429.127619",
        "text": "<@U4MAYDV9C> has joined the channel"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1674683104.014419",
        "text": "<@U04LCUXALJ2> has joined the channel"
    },
    {
        "type": "message",
        "user": "U74KTAG0N",
        "ts": "1675823739.578039",
        "text": "<https://github.com/input-output-hk/haskell.nix/issues/1565>\nhaskell.nixでnixpkgsのghcがoverlayでつかえるらしい。"
    },
    {
        "type": "message",
        "user": "U041V2FD49H",
        "ts": "1687590800.246269",
        "text": "<@U041V2FD49H> has joined the channel"
    },
    {
        "type": "message",
        "user": "U060EJKMFCK",
        "ts": "1696917914.453819",
        "text": "<@U060EJKMFCK> has joined the channel"
    },
    {
        "type": "message",
        "user": "U05LSDBQHQF",
        "ts": "1700459139.341379",
        "text": "<@U05LSDBQHQF> has joined the channel"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1701664571.387019",
        "text": "<https://gitlab.haskell.org/ghc/ghc-wasm-meta> にあるNix Flakeを使って、PandocをWasmにビルドしようとしています。\nREADMEに従ってnix-shellを起動し、\n```wasm32-wasi-cabal update &amp;&amp; wasm32-wasi-cabal install --allow-newer pandoc```\nと実行してみたところ、zlibがない、などのエラーが出ました。\nこれを解決するには、きっとnix-shellで起動した環境にzlibを入れたりすればよいと思うのですが、そうするには ghc-wasm-metaをフォークして、flake.nixなどを編集するのがよい方法なのでしょうか？\nNixは不慣れなため、プロジェクトを構築するよいプラクティスなどあれば教えていただきたいです。"
    }
]