[
    {
        "type": "message",
        "user": "U4L0B71L1",
        "ts": "1692755358.009559",
        "text": "改修取り込まれそう <https://github.com/haskell/cabal/pull/9193|https://github.com/haskell/cabal/pull/9193>"
    },
    {
        "type": "message",
        "user": "U05P3AVUHM4",
        "ts": "1692859057.232469",
        "text": "<@U05P3AVUHM4> has joined the channel"
    },
    {
        "type": "message",
        "user": "UGM9F7XQS",
        "ts": "1692934835.830179",
        "text": "最近こんな記事 <https://blog.miz-ar.info/2023/08/haskell-simd/> を書きましたが、記事中で言及しているLLVMバックエンドによるAArch64向けのSIMDプリミティブの対応がマージされました。不具合でrevertとかされなければ、GHC 9.10に入ります。"
    },
    {
        "type": "message",
        "user": "U57CUMWQ6",
        "ts": "1692952065.041469",
        "text": "リクルーティングメッセージで恐縮です。\nHaskellで書いてるプロジェクトで「誰かが体調不良になっただけで遅延が発生しかねないのはどうなんですか」と私の体調不良リスクを指摘されています。\nHaskell書ける人がたくさん増えれば解決する問題なので、Haskellで自然言語処理を行うプロジェクトに興味がある方は是非 <https://plus-zero.co.jp/company|pluszero> に参加して欲しいなと思います。\n\n連絡は、 <https://twitter.com/ncaq> のリプライかDM(FF外は認証済みユーザしか送れませんが伝えられればフォローします)とか <mailto:ncaq@ncaq.net|ncaq@ncaq.net> で可能です。"
    },
    {
        "type": "message",
        "user": "U05PGV0U1P0",
        "ts": "1693084934.181549",
        "text": "<@U05PGV0U1P0> has joined the channel"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1693953525.595859",
        "text": "GHCのエラーメッセージをJSONで出力できるようにするMerge Requestについて、フィードバック募集中だそうです\n<https://discourse.haskell.org/t/feedback-wanted-json-diagnostics-output-for-ghc/7531>"
    },
    {
        "type": "message",
        "user": "U05SUE82DH7",
        "ts": "1694739883.019679",
        "text": "<@U05SUE82DH7> has joined the channel"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1694858784.709019",
        "text": "<https://twitter.com/fwnnl/status/1702890725950759021>\n&gt; Haskell -&gt; wasm できた\n&gt; 依存ライブラリも問題なくコンパイルできて、少し感動\nすばらしい。IOを消すために依存パッケージをforkしてた頃に比べれば隔世の感がありますね"
    },
    {
        "type": "message",
        "user": "UL1HFJATE",
        "ts": "1694874879.326529",
        "text": "今日のAtCoderのコンテストで，`vector-algorithms` のソートアルゴリズムを変えたらTLE(time limit exceeded)がACになってびっくりしました．Introsort -&gt; Merge sort なので，どっちも最悪O(NlogN) のはずなのに何故…\nIntrosort, TLE: <https://atcoder.jp/contests/abc320/submissions/45644448>\nMerge sort, AC: <https://atcoder.jp/contests/abc320/submissions/45644739>\nTLEのテストケースは一個だけなので、ひょっとすると何かのバグを踏んだかもしれません．"
    },
    {
        "type": "message",
        "user": "UGM9F7XQS",
        "ts": "1695010766.068349",
        "text": "GitHub Actionsがいくつか入っているhaskell/actionsが解体されてhaskell-actions/に移動するんですね（haskell/actions/setup→haskell-actions/setup）。 <https://github.com/haskell-actions/setup>"
    },
    {
        "type": "message",
        "user": "U4L0B71L1",
        "ts": "1695051707.728599",
        "text": "haskell/actions のやつも移るんですね（補完的かとなんとなく思ってた"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1695267818.142859",
        "text": "StackageがFP CompleteからHaskell Foundationに移管されるそうです <https://discourse.haskell.org/t/a-new-home-for-stackage/7632>"
    },
    {
        "type": "message",
        "user": "U05TM1PA3D1",
        "ts": "1695432046.750309",
        "text": "<@U05TM1PA3D1> has joined the channel"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1695683903.592829",
        "text": "初心者フレンドリーさと開発生産性に重点を置いたHaskell方言（ただし開発中）\n<https://neohaskell.org/>"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1695707884.821239",
        "text": "これ、Show case 的なものも別に現行の GHC でできそうなことしか書いてないように見え、技術的詳細の掛かれたドキュメントも見当たらず、パッと見ても Git レポジトリ空っぽいんですけど、どこかに何か期待の持てそうなリソースがあったりするんでしょうか……？"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1695776800.610899",
        "text": "サーバーとかで、いろいろなパラメータの統計をとる場合、たくさんの IORef ではなく、IOUArray を用意してそれぞれの要素を atomic に更新したくなります。\narray にそういう関数は提供されてないのですが、プリミティブに cas があるようで、\"massiv\" パッケージを参考に作ってみました。\n<https://github.com/kazu-yamamoto/dnsext/blob/main/dnsext-utils/DNS/Array.hs>\nHaskellの弱点が、一挙になくなった感じ。\narray はデフォルトでこれを提供してほしい。。。"
    },
    {
        "type": "message",
        "user": "U05UF9EEM0T",
        "ts": "1695964546.574299",
        "text": "<@U05UF9EEM0T> has joined the channel"
    },
    {
        "type": "message",
        "user": "U55V441FS",
        "ts": "1695991336.245589",
        "text": "GHC2024拡張のproposalが始まったみたいです。\n<https://github.com/ghc-proposals/ghc-proposals/pull/613>"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1696040443.300749",
        "text": "現状のWasmの制約の元でどのようにGHC製WasmをJSと連携させるか\n<https://joeyh.name/blog/entry/Haskell_webassembly_in_the_browser/>"
    },
    {
        "type": "message",
        "user": "UK0MXUCAV",
        "ts": "1696131275.202069",
        "text": "手前味噌ですが、さいきん Haskell で線型型,を使えるようにする GHC の `LinearTypes` 言語拡張をがっつり使ってみたので、Haskell の線型型を使おうとすると現在はこんな感じだよ、将来はこうなって Rust のリソース管理により近くなっていくよ、というような記事を書きました。Linear Haskell のライブラリを使う側の話が主ですが、ライブラリを作る時の話についても需要があればそのうち書くかもしれません（書かないかもしれません）。\n<https://zenn.dev/konn/articles/2023-10-01-linear-haskell-in-2023>"
    },
    {
        "type": "message",
        "user": "U05UXAMHEBE",
        "ts": "1696291826.095629",
        "text": "<@U05UXAMHEBE> has joined the channel"
    },
    {
        "type": "message",
        "user": "U043KGWLGVC",
        "ts": "1696652143.792849",
        "text": "みなさんってHaskellどんな用途で使用されてますか？"
    },
    {
        "type": "message",
        "user": "U0607L7UPGS",
        "ts": "1696751943.649819",
        "text": "<@U0607L7UPGS> has joined the channel"
    },
    {
        "type": "message",
        "user": "U060EJKMFCK",
        "ts": "1696917646.724789",
        "text": "<@U060EJKMFCK> has joined the channel"
    },
    {
        "type": "message",
        "user": "U55V441FS",
        "ts": "1696941335.087329",
        "text": "GHC 9.8.1がリリースされています :haskell:\n<https://discourse.haskell.org/t/ghc-9-8-1-is-now-available/7832>"
    },
    {
        "type": "message",
        "user": "U56MBRKR9",
        "ts": "1697079483.233489",
        "text": "GHC 9.8.1 ですが、Data.List と Data.Functor を import すると unzip が衝突しますね。\nひどい。"
    },
    {
        "type": "message",
        "user": "U060LLDS939",
        "ts": "1697196348.354289",
        "text": "<@U060LLDS939> has joined the channel"
    },
    {
        "type": "message",
        "user": "U0612E50UF7",
        "ts": "1697286322.777109",
        "text": "<@U0612E50UF7> has joined the channel"
    },
    {
        "type": "message",
        "user": "U02JVFSJT38",
        "ts": "1697370997.794769",
        "text": "直接haskellの部分でなくて恐縮ですが、.hsをコンパイルした.wasmファイルをhtmlに組み込む例を知りたいです。\n(ghc-wasm-metaからのwasi-jsとか見ましたがNode向けの内容しか見つけられていません)\n進み具合として、wasm32-wasi-ghc により.wasmにはできています。\n自分なりにwasmの組み込みかたを検索してhtmlはこうなっています。\n<!DOCTYPE html>\n&lt;html lang=\"ja\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"/&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script&gt;\n            const importObject={wasi_snapshot_preview1:{proc_exit:arg=&gt;arg,fd_close:arg=&gt;arg,fd_write:arg=&gt;arg,fd_seek:arg=&gt;arg,environ_sizes_get:arg=&gt;arg,environ_get:arg=&gt;arg,fd_fdstat_get:arg=&gt;arg,path_open:arg=&gt;arg,path_filestat_get:arg=&gt;arg,path_create_directory:arg=&gt;arg,fd_prestat_get:arg=&gt;arg,fd_prestat_dir_name:arg=&gt;arg,clock_time_get:arg=&gt;arg,fd_fdstat_set_flags:arg=&gt;arg,fd_read:arg=&gt;arg,fd_filestat_set_size:arg=&gt;arg,fd_filestat_get:arg=&gt;arg,poll_oneoff:arg=&gt;arg}};\n            WebAssembly.instantiateStreaming(fetch('Hello.wasm'),importObject).then(obj=&gt;{\n                obj.instance.exports.hs_init(0,0);\n                console.log(obj.instance.exports.test(10));\n            });\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\nちなみにここでtestは引数の数値を2倍して返す関数です。で、以下のエラーが出ています。\nHello.wasm:0xb42e Uncaught (in promise) RuntimeError: unreachable\n    at Hello.wasm._Exit (Hello.wasm:0xb42e)\n    at Hello.wasm.exit (Hello.wasm:0x176db)\n    at Hello.wasm.stg_exit (Hello.wasm:0xabf3b)\n    at Hello.wasm.getProcessTimes (Hello.wasm:0xd513)\n    at Hello.wasm.stat_startInit (Hello.wasm:0xa904a)\n    at Hello.wasm.hs_init_ghc (Hello.wasm:0xabcb8)\n    at Hello.wasm.hs_init (Hello.wasm:0xabc44)\n違うアプローチも含めて、解決方法があれば知りたいです。"
    },
    {
        "type": "message",
        "user": "U04LCUXALJ2",
        "ts": "1697717840.907589",
        "text": "ulid-tightパッケージをリリースしました。\n<https://hackage.haskell.org/package/ulid-tight|https://hackage.haskell.org/package/ulid-tight>"
    },
    {
        "type": "message",
        "user": "U061PD53MRV",
        "ts": "1697815946.116749",
        "text": "<@U061PD53MRV> has joined the channel"
    },
    {
        "type": "message",
        "user": "U015L5JEP8D",
        "ts": "1698326745.756449",
        "text": "<https://twitter.com/yuki_20020924/status/1717404851536302332?t=-MHrJdCBXSb7zSNJNwl_KA&amp;s=19|https://twitter.com/yuki_20020924/status/1717404851536302332?t=-MHrJdCBXSb7zSNJNwl_KA&amp;s=19>\n\nHaskellで書いたプログラムの動作速度は（得意不得意はあれど）おおむねJavaぐらいになるものだと思っているのですが、これは正しいでしょうか"
    },
    {
        "type": "message",
        "user": "U4LGTMTMK",
        "ts": "1698467034.446929",
        "text": "すばらしい <https://twitter.com/nobsun/status/1718107345740501329>"
    },
    {
        "type": "message",
        "user": "U55V441FS",
        "ts": "1698667015.576329",
        "text": "HaskellではなくErlang/Elixirベースですが、QuickCheck等にも活かせると思うのでラムダノートの新刊紹介です :bow:\n<https://www.lambdanote.com/collections/proper-erlang-elixir>"
    }
]