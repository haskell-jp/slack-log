[
    {
        "ts": "1621669520.010500",
        "text": "質問連投失礼します．上のような関数を定義したのですが，このままでは無限リストになってしまいます．すでに登場したインデックスの呼び出しが再び出てきたら再帰を停止するという条件で，基底状態を定義することはできるのでしょうか?",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621669559.011100",
        "text": "要は以下のような値を返してほしいのです．",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621669583.011200",
        "text": "",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621669623.011700",
        "text": "よろしくおねがいします．",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621672953.016900",
        "text": "<@U01TZ1XM7MG> このままではちょっと難しいかも。登場したインデックスを持てばいいと思います。\n```route :: [Int] -&gt; Int -&gt; [Int]\nroute xs = go []\n  where go res i | i `elem` res = reverse res\n                 | otherwise    = go (i:res) (xs!!i)```",
        "user": "U02291FDK6F",
        "type": "message"
    },
    {
        "ts": "1621673011.017400",
        "text": "（なお、これだと O(n^2) かかりそうなので、高速化する場合は Array / Vector を使ってあげたほうがいいですね）",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621679556.020100",
        "text": "<@U02291FDK6F>\nなるほど。\n再帰の結果を引数として持つ。ただ、その引数を隠すために再帰させる関数をラップする。\nという理解でいいでしょうか？",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621679737.021900",
        "text": "<@U021XMH7NDT> 計算量を考慮すると、一旦無限リストにしておいて、他の関数でtakeのように一部切り取るという使い方が推奨されるのでしょうか？",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621679793.022800",
        "text": "計算量を考慮する場合、第一引数（それぞれの頂点からの行き先）の配列をランダムアクセスできるように Array にしたほうがいいのと、すでに到達した場所を保存するための Array を保持したほうがいいということです。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621679812.023300",
        "text": "現在の仕組みだと、それぞれの頂点に到達するたびに、（最悪で）列全体をなめる必要があるのです。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621679825.023700",
        "text": "ただし、 n = 10^3 程度なら現実的な時間で終わると言えると思います。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621680080.024700",
        "text": "なるほど\nただ、まだ勉強がArrayまでたどり着いていなくて",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621680300.028900",
        "text": "計算量を減らすにはArrayが推奨されるのは納得しました。一方でリストを使ってなんとか計算量を抑えたい時、一旦無限リストにして他の関数で切り取るという流れにすることでjuxtaposeさんの提示してくださったコードよりも計算量を減らすことは可能ですか？",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621683337.041100",
        "text": "いえ、一旦無限リストを作ってから切り取ることと、途中で再帰しなくなる条件を関数自身に書くことは、遅延評価の Haskell においては基本的に同等だと思います。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621723678.041300",
        "text": "<@U022NP2FUMB> has joined the channel",
        "user": "U022NP2FUMB",
        "type": "message"
    },
    {
        "ts": "1621822287.046300",
        "text": "GUIをやろうと思いhaskell-giを試していますが、HelloWorld以上のことができません。具体的にはテキストボックスが使えていません。Gtk.EntryやGtk.TextViewでテキストボックスを設置することはできましたが、実際に入力された値を取り出すことができません。何か参考になるようなサイトをご存知でしたらご教示頂きたく。公式サイトを見ましたが構文だけで実際にどうコーディングすればいいのかわかりませんでした。公式サイトのexamplesも見てみましたが、参考になりそうなコードはありませんでした（見つけられませんでした）。teratailで質問しましたが、まだ出来るようになっていません。<https://teratail.com/questions/303653>",
        "user": "UFPRHDT8X",
        "type": "message"
    },
    {
        "ts": "1621926224.048300",
        "text": "<@U021XMH7NDT> さん\n返信遅れました。遅延評価ですか、なるほど\n勉強になりました。ありがとうございます",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621946967.048600",
        "text": "<@U0234TBC9J8> has joined the channel",
        "user": "U0234TBC9J8",
        "type": "message"
    },
    {
        "ts": "1622027544.048800",
        "text": "<@U023980QWR2> has joined the channel",
        "user": "U023980QWR2",
        "type": "message"
    },
    {
        "ts": "1622073618.048900",
        "text": "Reminder: beginnersチャンネルは、新しい人がスムーズにHaskellに慣れるための質問を歓迎するチャンネルです。\nHaskell-Beginners ML や IRCの#haskell-beginners  や RedditのMonthly Hask Anythingのような位置づけを意図しています。\n\nbeginnersチャンネルでの回答側は、以下の左側のような応答を厳禁とする運用です。\n• それはくだらない質問だ → くだらない質問など無い\n• その質問は以前にもあった → 質問者はそんなこと知らない\n• Google検索せよ → 検索できないから質問している\n\nbeginnersチャンネルでは、例えば以下のレベルの質問から歓迎します。\n• `:` とは何のことですか。\n• タプルとは何ですか。\n",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1622093256.049400",
        "text": "<@U02371BTELB> has joined the channel",
        "user": "U02371BTELB",
        "type": "message"
    },
    {
        "ts": "1622521093.049700",
        "text": "<@U0249USCRHN> has joined the channel",
        "user": "U0249USCRHN",
        "type": "message"
    },
    {
        "ts": "1622540988.054000",
        "text": "はじめまして。\nHaskell学習のため [Advent of Code 2020](<https://adventofcode.com/>) をちまちま解いているところなのですが、解答できたけれどコードが汚くなってしまうものがあります。\n<https://adventofcode.com/2020/day/8> ８日めのこの問題、こういうコードになりました。\n<https://github.com/kyoheiu/aoc2020-haskell/blob/master/day08/app/Main.hs>\n\nそもそも最適なアプローチはこれではないということかもしれませんが、それはいったんおいて、このアプローチでもっとHaskellっぽいコードにリファクタリングするにはどういう考え方があるでしょうか？\nとりあえず引数の数が多いのが嫌な感じなのですが…。",
        "user": "U02371BTELB",
        "type": "message"
    },
    {
        "ts": "1622601548.056000",
        "text": "<@U023WQ97M9A> has joined the channel",
        "user": "U023WQ97M9A",
        "type": "message"
    },
    {
        "ts": "1622702815.057400",
        "text": "<@U023VRF8LP4> has joined the channel",
        "user": "U023VRF8LP4",
        "type": "message"
    },
    {
        "ts": "1622731036.057700",
        "text": "<@UG8CPC0L8> has joined the channel",
        "user": "UG8CPC0L8",
        "type": "message"
    },
    {
        "ts": "1622881060.057900",
        "text": "<@U024143QTA9> has joined the channel",
        "user": "U024143QTA9",
        "type": "message"
    },
    {
        "ts": "1622971007.062500",
        "text": "漸化式として無限等差数列を定義するにはどうしたら良いでしょうか?\nネットで検索した分には次のようなコードを見つけました．\n```step=3:(map (+ 4) step)\n\nfib = 0 : 1 : zipWith (+) fib (tail fib)```\nこれらは無限等差数列は実現できているのですが，漸化式としての特徴がコードを見てもわかりにくいように感じます．",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1623144623.066900",
        "text": "<@U0251CSBE5N> has joined the channel",
        "user": "U0251CSBE5N",
        "type": "message"
    },
    {
        "ts": "1623205147.067100",
        "text": "<@U024U0DCJ3T> has joined the channel",
        "user": "U024U0DCJ3T",
        "type": "message"
    },
    {
        "ts": "1623664209.067600",
        "text": "<@U025AGT283T> has joined the channel",
        "user": "U025AGT283T",
        "type": "message"
    },
    {
        "ts": "1623738094.069400",
        "text": "<@U02580P7H5J> has joined the channel",
        "user": "U02580P7H5J",
        "type": "message"
    },
    {
        "ts": "1623840065.069600",
        "text": "<@U56G77VM1> has joined the channel",
        "user": "U56G77VM1",
        "type": "message"
    },
    {
        "ts": "1624112682.069800",
        "text": "<@U025S3NTUTW> has joined the channel",
        "user": "U025S3NTUTW",
        "type": "message"
    },
    {
        "ts": "1624288839.070000",
        "text": "<@U025VRNCXAQ> has joined the channel",
        "user": "U025VRNCXAQ",
        "type": "message"
    },
    {
        "ts": "1624327536.070300",
        "text": "<@U025XT9BL76> has joined the channel",
        "user": "U025XT9BL76",
        "type": "message"
    },
    {
        "ts": "1624529952.070600",
        "text": "<@U026S0BCF3J> has joined the channel",
        "user": "U026S0BCF3J",
        "type": "message"
    },
    {
        "ts": "1624545509.073700",
        "text": "初めまして\nダウンロードしたパッケージ(System.Random)をghciにインポートしたいのですが\nインポートするときに\nPrelude&gt; :l Main\n\nMain.hs:seven:8:\n  Could not find module ‘Control.Monad.State.Strict’\n  Perhaps you meant\n   Control.Monad.ST.Strict (from base-4.8.2.0)\n   Control.Monad.Trans.State.Strict (from transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF)\n  Use -v to see a list of the files searched for.\n\nMain.hs:13:8:\n  Could not find module ‘Gauge.Main’\n  Use -v to see a list of the files searched for.\n\nMain.hs:15:8:\n  Could not find module ‘System.Random.SplitMix’\n  Use -v to see a list of the files searched for.\n\nMain.hs:17:8:\n  Could not find module ‘System.Random.Stateful’\n  Use -v to see a list of the files searched for.\nFailed, modules loaded: none.\nというエラーが出てしまいます\nこれはどのように解決したら良いでしょうか\nまた、やり方が間違っていたらやり方を教えていただけると幸いです",
        "user": "U018KEA7Y83",
        "type": "message"
    },
    {
        "ts": "1624630379.076400",
        "text": "<@U0264GCUGMB> has joined the channel",
        "user": "U0264GCUGMB",
        "type": "message"
    },
    {
        "ts": "1624705846.077200",
        "text": "質問です。\nHaskellのフレームワークって何種類かあるようですが、最初に触れるなら今どきどれがオススメでしょうか？なんとなくYesodがいいのかなと思ってますが……",
        "user": "U024U0DCJ3T",
        "type": "message"
    },
    {
        "ts": "1624897583.079700",
        "text": "はじめまして。関連して質問です。\n最近フルスタックwebフレームワークとしてIHPというものも出てきているみたいですが、もし触ったことがある方がいれば、普段Haskellを書いている方からした印象はどうなのか伺いたいです。",
        "user": "U025S3NTUTW",
        "type": "message"
    },
    {
        "ts": "1624925756.083300",
        "text": "すみません　解決しました",
        "user": "U018KEA7Y83",
        "type": "message"
    },
    {
        "ts": "1624977884.083800",
        "text": "<@U026BJL1GMU> has joined the channel",
        "user": "U026BJL1GMU",
        "type": "message"
    },
    {
        "ts": "1624992751.084500",
        "text": "<@U026RNQE7UL> has joined the channel",
        "user": "U026RNQE7UL",
        "type": "message"
    },
    {
        "ts": "1625121147.086400",
        "text": "arrowの書き方で main = getLine &gt;&gt;= print と同じ関数を書くにはどうしたらいいでしょうか？",
        "user": "U018KEA7Y83",
        "type": "message"
    },
    {
        "ts": "1625325113.093000",
        "text": "すみません\narrowをproc?記法を使わないで書くとKleisli const が大量に出てきてしまうのですがこれは回避する方法があるのでしょうか？",
        "user": "U018KEA7Y83",
        "type": "message"
    },
    {
        "ts": "1625668869.094100",
        "text": "<@U027BSBUHMH> has joined the channel",
        "user": "U027BSBUHMH",
        "type": "message"
    },
    {
        "ts": "1625704875.094700",
        "text": "Windows10, GHC8.10.4を使っています。\nhSetBuffering stdin NoBufferingをしてgetCharでキーの入力を即座に読もうとしたのですが、エンターキーを押すまで入力が読み取られません\n解決法はありますでしょうか",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1625740361.095600",
        "text": "1年前ぐらいから、lens恐怖症を克服してlensを使うようになりました。\n`makeFields` でプレフィクス無しで参照できるのを便利に使っています。\nしかし、取得時が楽になった分、これまで我慢していた構築時のプレフィクスも消せないかなと思えてしまいます。\n添付したスニペットみたいに、構築時にもプレフィクスを取り除きたいです。\n\n最近大量のデータ型をサンプル生成しなければいけなくて、強くそう思うようになりました。\nとりあえずは雑なデータを入れて、変更したい場所だけをlensのSetterで変更するようにしていますが、雑に入れるわけにもいかないデータを構築するときや、そもそも構築の原点ではやはりプレフィクスを一々入れる必要があるので面倒です。\nStackageに載ってないGHCは流石に実運用するのがライブラリの構築など面倒なので、`NoFieldSelectors` を使ってプレフィクス自体を消すわけにもいきません。\nlensなどを使ってプレフィクス無しで構築する方法は存在しますか?",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1625874754.096700",
        "text": "モナド変換子について質問です。\nモナド変換子は圏論的にはどのように理解すればよいでしょうか？",
        "user": "UFMV026NR",
        "type": "message"
    }
]