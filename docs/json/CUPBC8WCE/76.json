[
    {
        "ts": "1747564403.353829",
        "text": "諸々ちょっとずつ進めてました。makeMistakesToLearnHaskellの進捗を後ほど共有します。そろそろ関数型まつりの方に集中したいが、ついつい簡単なそっちを進めてしまう...",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1747577368.496239",
        "text": "今日のmakeMistakesToLearnHaskellの更新 <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/85a15d64cfc7b27aeb84df741ebaa0a7235623e3>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1748145615.572619",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1748146285.498249",
        "text": "山本悠滋です。いつもどおり関数型まつりのスライドをボチボチ進めます。今日も何か用事が多くてあんまり時間が取れないかもですが...",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1748146646.728369",
        "text": "<https://byorgey.github.io/blog/posts/2020/07/18/competitive-programming-in-haskell-cycle-decomposition-with-mutable-arrays.html|Competitive programming in Haskell: cycle decomposition with mutable arrays>: Brent Yorgey 先生の blog をもとに Kattis の問題を解きます",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1748148056.608429",
        "text": "S.K.です。少し遅くなりましたが、今週もお世話になります。よろしくお願いいたします。\n今週も引き続き Implementing Functional Languages: a tutorial, 5.4 Mark 3: A realistic parallel G-machine の続きを進めて行こうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1748163620.123189",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1748163751.730729",
        "text": "少し進められました。ChatGPTに図を書くのを任せられないかと思ったけど失敗！",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1748163945.740589",
        "text": "\"Chair Hopping\" 問題　考慮（苦慮）中　Permutation の Cycle decomposition は IntMap と IntSet を用いて効率的に出来たと思う（見かけ Yorgey 先生の mutable array による implementation に比べて遜色ない - 多分）　しかしこれを用いて場合の数を組み合わせ論的に計算すると examples と合わない ???　もうちょっと考えよう",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1748164813.512979",
        "text": "5.4.2 Conservative and speculative parallelism の Ex.5.15 の続きを進めようとしてました。\nスパインに十分な関数適用ノードがない場合ということで、テストプログラム main = par (S K K) (S K K 3) の動作結果を確認してみたのですが、途中の K 3 (K 3) については (K 3) を評価しようとすることはなく、単純に引数が充足してないケースはエラーとなってしまうので、ちょっと行き詰ってしまいました。\nネットで検索すると、Haskell ではラムダ抽象やコンストラクタも WHNF とのことで、ラムダ抽象はパラレル G マシンでは使えない様なので、コンストラクタの場合について調べてみることにして、とりあえずリストを処理するテストプログラムを並列化して動作確認中です。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    }
]