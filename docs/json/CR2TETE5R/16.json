[
    {
        "ts": "1621669520.010500",
        "text": "質問連投失礼します．上のような関数を定義したのですが，このままでは無限リストになってしまいます．すでに登場したインデックスの呼び出しが再び出てきたら再帰を停止するという条件で，基底状態を定義することはできるのでしょうか?",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621669559.011100",
        "text": "要は以下のような値を返してほしいのです．",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621669583.011200",
        "text": "",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621669623.011700",
        "text": "よろしくおねがいします．",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621672953.016900",
        "text": "<@U01TZ1XM7MG> このままではちょっと難しいかも。登場したインデックスを持てばいいと思います。\n```route :: [Int] -&gt; Int -&gt; [Int]\nroute xs = go []\n  where go res i | i `elem` res = reverse res\n                 | otherwise    = go (i:res) (xs!!i)```",
        "user": "U02291FDK6F",
        "type": "message"
    },
    {
        "ts": "1621673011.017400",
        "text": "（なお、これだと O(n^2) かかりそうなので、高速化する場合は Array / Vector を使ってあげたほうがいいですね）",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621679556.020100",
        "text": "<@U02291FDK6F>\nなるほど。\n再帰の結果を引数として持つ。ただ、その引数を隠すために再帰させる関数をラップする。\nという理解でいいでしょうか？",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621679737.021900",
        "text": "<@U021XMH7NDT> 計算量を考慮すると、一旦無限リストにしておいて、他の関数でtakeのように一部切り取るという使い方が推奨されるのでしょうか？",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621679793.022800",
        "text": "計算量を考慮する場合、第一引数（それぞれの頂点からの行き先）の配列をランダムアクセスできるように Array にしたほうがいいのと、すでに到達した場所を保存するための Array を保持したほうがいいということです。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621679812.023300",
        "text": "現在の仕組みだと、それぞれの頂点に到達するたびに、（最悪で）列全体をなめる必要があるのです。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621679825.023700",
        "text": "ただし、 n = 10^3 程度なら現実的な時間で終わると言えると思います。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621680080.024700",
        "text": "なるほど\nただ、まだ勉強がArrayまでたどり着いていなくて",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621680300.028900",
        "text": "計算量を減らすにはArrayが推奨されるのは納得しました。一方でリストを使ってなんとか計算量を抑えたい時、一旦無限リストにして他の関数で切り取るという流れにすることでjuxtaposeさんの提示してくださったコードよりも計算量を減らすことは可能ですか？",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621683337.041100",
        "text": "いえ、一旦無限リストを作ってから切り取ることと、途中で再帰しなくなる条件を関数自身に書くことは、遅延評価の Haskell においては基本的に同等だと思います。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1621723678.041300",
        "text": "<@U022NP2FUMB> has joined the channel",
        "user": "U022NP2FUMB",
        "type": "message"
    },
    {
        "ts": "1621822287.046300",
        "text": "GUIをやろうと思いhaskell-giを試していますが、HelloWorld以上のことができません。具体的にはテキストボックスが使えていません。Gtk.EntryやGtk.TextViewでテキストボックスを設置することはできましたが、実際に入力された値を取り出すことができません。何か参考になるようなサイトをご存知でしたらご教示頂きたく。公式サイトを見ましたが構文だけで実際にどうコーディングすればいいのかわかりませんでした。公式サイトのexamplesも見てみましたが、参考になりそうなコードはありませんでした（見つけられませんでした）。teratailで質問しましたが、まだ出来るようになっていません。<https://teratail.com/questions/303653>",
        "user": "UFPRHDT8X",
        "type": "message"
    },
    {
        "ts": "1621926224.048300",
        "text": "<@U021XMH7NDT> さん\n返信遅れました。遅延評価ですか、なるほど\n勉強になりました。ありがとうございます",
        "user": "U01TZ1XM7MG",
        "type": "message"
    },
    {
        "ts": "1621946967.048600",
        "text": "<@U0234TBC9J8> has joined the channel",
        "user": "U0234TBC9J8",
        "type": "message"
    },
    {
        "ts": "1622027544.048800",
        "text": "<@U023980QWR2> has joined the channel",
        "user": "U023980QWR2",
        "type": "message"
    },
    {
        "ts": "1622073618.048900",
        "text": "Reminder: beginnersチャンネルは、新しい人がスムーズにHaskellに慣れるための質問を歓迎するチャンネルです。\nHaskell-Beginners ML や IRCの#haskell-beginners  や RedditのMonthly Hask Anythingのような位置づけを意図しています。\n\nbeginnersチャンネルでの回答側は、以下の左側のような応答を厳禁とする運用です。\n• それはくだらない質問だ → くだらない質問など無い\n• その質問は以前にもあった → 質問者はそんなこと知らない\n• Google検索せよ → 検索できないから質問している\n\nbeginnersチャンネルでは、例えば以下のレベルの質問から歓迎します。\n• `:` とは何のことですか。\n• タプルとは何ですか。\n",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1622093256.049400",
        "text": "<@U02371BTELB> has joined the channel",
        "user": "U02371BTELB",
        "type": "message"
    }
]