[
    {
        "ts": "1583811264.027100",
        "text": "なんか <https://github.com/sdiehl/write-you-a-haskell> が GitHub のトレンドに上がってたんですけど、なんでなんですかね？（latest commit が 2017/4 なのに",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1583816312.028400",
        "text": "プロファイリングの結果でHaskellのコードを色づけしてくれるそうです。便利そう\n<https://github.com/Petrosz007/haskell-profile-highlight>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1583904208.032300",
        "text": "CircleCIでlts 15のpandocがjobs 1でもout of memoryしたので色々終わったかと思いましたがGitHub actionsはメモリ7GBらしいですね(CircleCIは4GB)\nTravisから移行して更にまた移行するのは面倒ですがこれが貧者の悲しみですね…",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1583904380.032600",
        "text": "どちらにしても手間はかかりますがDocker Hubに自前でpandocをビルド済みのイメージをpushしておく、という手もありますぜ :smirk:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1583904504.033000",
        "text": "それも考えていたのですがltsやdependが変わるたびにpushするのも面倒かなぁと\naptで入れるやつとかは変わらないのでpushしてましたが\nあーでも手元のマシンの方が速いからそちらの方が良いのですかねえ",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1583904718.033200",
        "text": "とりあえずpandocとか重いやつだけビルドしてうまくいくか試してみてダメだったらGitHub Actions試してみます\nありがとうございます",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1583904722.033400",
        "text": "状況わからないで言うのもアレですが、そもそもそんなに最新のpandocにこだわる必要がありますかね。\nhakyllで使うならともかく、pandocでさえそれだけならaptで入るでしょうし",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1583904879.033600",
        "text": "アプリケーションとしてのpandocではなくhakyllみたいに組み込みで使ってるんですよね\nなのでltsで自動追従してしまうのです",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1583915774.034100",
        "text": "お仕事を探してます。\n実務はHaskellで2年半、あとは趣味でElmとかRustを使ったことはあります。\nもし何か知ってるよーって方がいれば教えてくれると大変嬉しいです。\n<https://hackmd.io/@HirotoShioi/HJbkE6LbU>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1584097565.036300",
        "text": "今週のHaskell Weeklyから。Haskell-jp Blogで以前取り上げた、文字コードの問題の回避をお助けするパッケージらしいです。\n確かに毎回コピペしてるような関数がありますね... :sweat:\n<https://serokell.io/blog/haskell-with-utf8>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584097591.036500",
        "text": "件の「文字コードの問題」はこちら: <https://haskell.jp/blog/posts/2017/windows-gotchas.html#invalid-character%E3%81%A8%E8%A8%80%E3%82%8F%E3%82%8C%E3%81%9F%E3%82%89chcp-65001%E3%81%97%E3%82%88%E3%81%86>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584159088.037200",
        "text": "<@U01021LKUH5> has joined the channel",
        "user": "U01021LKUH5",
        "type": "message"
    },
    {
        "ts": "1584161029.039100",
        "text": "今週のHaskell Weeklyから。（エディターの定義ジャンプなどで使う）タグを生成するツールを、GHCのコンパイラープラグインとして実装したそうで。他のタグ生成ツールと違ってCPPのマクロも考慮するなど、より正確に収集できるらしい\n<https://coot.me/posts/ghc-tags-plugin.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584166699.042400",
        "text": "今週のfumieval's Labから。masonのmasterブランチにGrisu3アルゴリズムを利用して浮動小数点数をフォーマットする関数がいくつか追加された。showやNumeric.showFFloatなどの関数に比べて20〜30倍速くなるらしい <https://github.com/fumieval/mason/blob/3fe9ab0/src/Mason/Builder.hs#L408>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1584212837.043600",
        "text": "<@UV35RL3V1> has joined the channel",
        "user": "UV35RL3V1",
        "type": "message"
    },
    {
        "ts": "1584273680.044500",
        "text": "<https://twitter.com/public_ai000ya/status/1239159285289897986?s=20>",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584273693.044900",
        "text": "久しぶりにHaskellができました…… :sob:",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584274725.045300",
        "text": "型レベルプログラミングで見てみたい :smirk:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584277133.045500",
        "text": "型レベル文字があったらよかったんですが、なかったのでこの形になりました……:sob:\n（`x :: 'X'` と `x :: \"X\"` を区別したかった……！！）",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584277219.045700",
        "text": "あ、ちがう。\ndata Ascii = A | ... | Z | A_ | ... | Z_\nをDataKindsすればよかったんだ……うおー……",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584437031.046300",
        "text": "GHC-8.8 対応の stack のリリースはいつになるんでしょうかねぇ．\nボソッ:disappointed:",
        "user": "U4KU9ABL0",
        "type": "message"
    },
    {
        "ts": "1584439924.046600",
        "text": "例の警告の件ですか... :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584445228.046800",
        "text": "この一番上のせい？\n<https://github.com/commercialhaskell/stack/blob/ef8c4ff52174921a3dc586b2abb7285b0c0b295d/doc/maintainers/releases.md#upcoming-release-tasks|https://github.com/commercialhaskell/stack/blob/ef8c4ff52174921a3dc586b2abb7285b0c0b295d/doc/maintainers/releases.md#upcoming-release-tasks>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1584447539.047400",
        "text": "リンク先の Issue クローズされてるから関係ないか",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1584489695.047700",
        "text": "<@U0106UE4MJQ> has joined the channel",
        "user": "U0106UE4MJQ",
        "type": "message"
    },
    {
        "ts": "1584570831.048300",
        "text": "\"The Glasgow Haskell Compiler a contributor's cheatsheet\" <https://ghc.dev/>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584658781.049700",
        "text": "<@U0100JBRCFL> has joined the channel",
        "user": "U0100JBRCFL",
        "type": "message"
    },
    {
        "ts": "1584662977.050500",
        "text": "今週のHaskell Weeklyから。 `let x = x` は無限ループになっちゃうけど `x &lt;- pure x` はならない、という話。Haskellに `let rec` を導入するか論争が勃発か\n<https://neilmitchell.blogspot.com/2020/03/the-pure-pattern.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584664536.051600",
        "text": "&gt; With the `let` formulation you get an infinite loop which never terminates, whereas with the `&lt;- pure` pattern you take the previously defined `x` and add `1` to it.\nなるほど、困ったら `&lt;- pure` 使おと思ったけどHLintに怒られるのは嫌ですねｗ :sweat_smile:",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1584665004.053400",
        "text": "(コンパイラから見て)自明な無限ループは&lt;&lt;loop&gt;&gt;と出るだけで、どこから発生しているか使い手には分からないケースもあるので、letの再帰を防ぐ仕組みは欲しいですね",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1584665584.053900",
        "text": ":sorena: しかもランタイムエラーですしね... :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584669187.057500",
        "text": "個人的には、既存の `let` の互換性がなくなってしまうのはつらいので、静的解析で頑張ってほしいなぁという気持ちです。\nまあ、ちゃんと移行プランを立てれば互換性は問題ないと思いますけど… MonadFailみたいになりかねない。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584681340.060000",
        "text": "どっちかというと `let!` みたいなキーワードを追加してこっちを非recなletの意味で使わせて欲しい、みたいな気分があります。",
        "user": "UL1HFJATE",
        "type": "message"
    },
    {
        "ts": "1584684465.064200",
        "text": "shadowing自体良くない、みたいな発想でこうなってる感じがします。\n個人的にはshadowing時々使いたくなるんですよね。特にdo文内で「現在値」が変化するようなケースは。",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1584687633.066100",
        "text": "スーパークラスと異なるreturnとmappendに対する警告をデフォルトで有効にする提案を(しばらく前に)出したので、賛同してくれる方はぜひ :+1:を <https://github.com/ghc-proposals/ghc-proposals/pull/314>",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1584692404.069000",
        "text": "パスワードジェネレータ＆チェッカを作りました。指定した条件でランダム文字列を生成or検証するコマンドラインツールです。いろいろ雑ですがひらがな/カタカナにも対応しています。 <https://github.com/syocy/genpass>",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1584704369.069900",
        "text": "まあparser combinatorとしてやら、ただの関数としてやら……でも使いたかったので、戦略として間違ってはないと思っています :muscle:",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584704403.070600",
        "text": "publishしました :tada:\n<https://www.reddit.com/r/haskell/comments/fltiud/subspecies_types_of_char_and_naming_cases_az_az/>",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584704498.071600",
        "text": "良さそうですね！！\n:+1: しました！",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584705644.072500",
        "text": "redditにも投稿してみたり……ﾁﾗｯ\n<https://www.reddit.com/r/haskell_jp/comments/fltt52/厳格な文字型と文字列型を提供するライブラリ_charactercases/?utm_medium=android_app&amp;utm_source=share|https://www.reddit.com/r/haskell_jp/comments/fltt52/厳格な文字型と文字列型を提供するライブラリ_charactercases/?utm_medium=android_app&amp;utm_source=share>",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1584832883.073600",
        "text": "GHCのソースコードなどをホスティングしている、 <http://haskell.org|haskell.org> のGitLabインスタンス <http://gitlab.haskell.org|gitlab.haskell.org> が現在ダウン中だそうです。\n<https://mail.haskell.org/pipermail/ghc-devs/2020-March/018725.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584833038.074600",
        "text": "ホスティング版のgitlabじゃなかったんですね:open_mouth:",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1584833096.075100",
        "text": "えぇ、それ故かよく落ちたり重くなったりします... :disappointed:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584847605.075400",
        "text": "復活したそうです :relieved:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584927650.075900",
        "text": "募集: <https://twitter.com/nobsun/status/1241880765966647296>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584932263.077700",
        "text": "遅延評価ってそこまでデバッグのしやすさに影響を与えているのでしょうか…？\nそもそも自分の経験が少なくてデバッグしにくい状況になったことがないだけかもしれませんが、、、",
        "user": "ULBC77RC3",
        "type": "message"
    },
    {
        "ts": "1584932350.079500",
        "text": "うーん、ぱっと思い出せるところですと、デバッガーでステップ実行したとき、あっちこっちの関数に飛んでどこ実行してるのかわかりづらい、なんてことはありましたね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1584932788.085400",
        "text": "遅延評価が原因のやつは結果が違ってるみたいな単純なバグではなく大概パフォーマンス問題として表出するので．\n「何か問題があってそれが遅延評価のせいでデバッグしにくい」という状況より，\n「遅延評価のせいでデバッグしにくい問題になり易い」というカンジですかね．profile取っても追い難いし．",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1584937496.089500",
        "text": "個人的には、すごく trace がしにくい経験を何度もしたことがあります",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1584937720.092500",
        "text": "詳細気になりますね。それは純粋な関数だから、という話ではないんですよね？",
        "user": "U4LGTMTMK",
        "type": "message"
    }
]