[
    {
        "ts": "1699438078.623899",
        "text": "<@U064CHVVDSB> has joined the channel",
        "type": "message",
        "user": "U064CHVVDSB"
    },
    {
        "ts": "1699850628.377719",
        "text": "`data` とレコード構文で定義した、一つだけコンストラクタを持つ型について、コンストラクタの各引数へのアクセサとなるLensを勝手に導出してくれるような方法はありますか？",
        "type": "message",
        "user": "U015L5JEP8D"
    },
    {
        "ts": "1700661995.320129",
        "text": "<@U066U4ZJF4M> has joined the channel",
        "type": "message",
        "user": "U066U4ZJF4M"
    },
    {
        "ts": "1700718065.425909",
        "text": "<@U066TUG4NNS> has joined the channel",
        "type": "message",
        "user": "U066TUG4NNS"
    },
    {
        "ts": "1700720801.756839",
        "text": "<@U067PLT7Z1N> has joined the channel",
        "type": "message",
        "user": "U067PLT7Z1N"
    },
    {
        "ts": "1700828295.904459",
        "text": "<@U066S0GFN87> has joined the channel",
        "type": "message",
        "user": "U066S0GFN87"
    },
    {
        "ts": "1701180180.539649",
        "text": "以下の `(f $ g)` はどのように理解できますか？\n```ghci&gt; let f = (1 +) :: (Num a) =&gt; a -&gt; a\nghci&gt; let g = (2 +) :: (Num a) =&gt; a -&gt; a\nghci&gt; :t (f $ g)\n(f $ g) :: (Num a, Num (a -&gt; a)) =&gt; a -&gt; a```\n背景としては、以下のようにコンパイルエラーになる例を考えるつもりでした:\n```ghci&gt; let a = (1 +) :: Int -&gt; Int\nghci&gt; let b = (2 +) :: Int -&gt; Int\nghci&gt; :t (a $ b)\n\n&lt;interactive&gt;:1:6: error:\n    • Couldn't match expected type 'Int' with actual type 'Int -&gt; Int'\n    • In the second argument of '($)', namely 'b'\n      In the expression: a $ b```",
        "type": "message",
        "user": "U03H9PH8FRP"
    },
    {
        "ts": "1701873046.740899",
        "text": "Data.Sequenceを触っていた時に、ふとunconsやunsnocのような関数があれば便利かなと思ってcontainerで提案してみたのですが、viewlやviewr使えば実現できるのであまり本質的じゃない拡張っぽいみたいなレスポンスをもらいました(当然と言えば当然ですが)。\n\nData.Sequenceにunconsやunsnocがあったとしてどんなときに役立つか正直答えられる自信がないので、closeしようかなとも思っています。\nこのような既存の関数で表現できるような関数のライブラリへの必要性について皆さんはどう思いますでしょうか。お手柔らかにお願いします\n\n<https://github.com/haskell/containers/issues/977>",
        "type": "message",
        "user": "U024U0DCJ3T"
    },
    {
        "ts": "1703069045.257369",
        "text": "<@U0101HN891Q> has joined the channel",
        "type": "message",
        "user": "U0101HN891Q"
    },
    {
        "ts": "1703649203.739559",
        "text": "stack ベースのhaskell 環境で単体テストに HSpec  を使用しています。\nテストディレクトリ/Spec.hs に以下を指定していますが、haskell language server 経由で出るGHCエラー(下記)を消す方法がわかりません。\nご存知でしたら教えてください。\n\n*補足*\nコマンド行からの stack test 実行では問題ありません。\nstack がインストールした hspec-discover の場所を haskell language server 設定のどこかで指定する必要があると推測しています。\n\n*エラー:*\n&gt; Spec.hs     1   1 error           could not execute: hspec-discover (lsp)\n*Spec.hs:*\n`{-# OPTIONS_GHC -F -pgmF hspec-discover #-}`",
        "type": "message",
        "user": "U022NP2FUMB"
    },
    {
        "ts": "1703651665.033999",
        "text": "package.yaml の build-tool-depends に相当する項目は build-tools ですので、 <@U022NP2FUMB>さんの対処法は（stack+build-toolsでは解決しないという点を除けば）完全に正当なものでは？\n\n <https://github.com/sol/hpack#common-fields|https://github.com/sol/hpack#common-fields>",
        "type": "message",
        "user": "UK0MXUCAV"
    },
    {
        "ts": "1704091586.200939",
        "text": "<@U06CE9R2SQH> has joined the channel",
        "type": "message",
        "user": "U06CE9R2SQH"
    },
    {
        "ts": "1704593186.501989",
        "text": "<@U06D4GB8TTK> has joined the channel",
        "type": "message",
        "user": "U06D4GB8TTK"
    },
    {
        "ts": "1704727713.367749",
        "text": "<@U06CWBV3W75> has joined the channel",
        "type": "message",
        "user": "U06CWBV3W75"
    },
    {
        "ts": "1705544544.084039",
        "text": "<@U06E7FF2LMC> has joined the channel",
        "type": "message",
        "user": "U06E7FF2LMC"
    },
    {
        "ts": "1705923253.265459",
        "text": "<@U06EVL7JADB> has joined the channel",
        "type": "message",
        "user": "U06EVL7JADB"
    },
    {
        "ts": "1706051135.662729",
        "text": "質問です\n関数型プログラミングでdbアクセスしようとする時に、どうしても副作用が多いコードになってしまう気がします\n何か良い例は無いでしょうか...？",
        "type": "message",
        "user": "U06EVL7JADB"
    },
    {
        "ts": "1706641637.624049",
        "text": "<@U06GBQ8BMGB> has joined the channel",
        "type": "message",
        "user": "U06GBQ8BMGB"
    },
    {
        "ts": "1706704763.907499",
        "text": "<@U06GV6ECEEM> has joined the channel",
        "type": "message",
        "user": "U06GV6ECEEM"
    },
    {
        "ts": "1706935364.619479",
        "text": "<@U06HQ8XC3QQ> has joined the channel",
        "type": "message",
        "user": "U06HQ8XC3QQ"
    },
    {
        "ts": "1707403567.440969",
        "text": "<@U06HFF5Q8CF> has joined the channel",
        "type": "message",
        "user": "U06HFF5Q8CF"
    },
    {
        "ts": "1707557163.700389",
        "text": "<@U06J6QY56GJ> has joined the channel",
        "type": "message",
        "user": "U06J6QY56GJ"
    },
    {
        "ts": "1708179228.305989",
        "text": "<@U06KBK22V6X> has joined the channel",
        "type": "message",
        "user": "U06KBK22V6X"
    },
    {
        "ts": "1708640841.145959",
        "text": "<@U06L584S4MT> has joined the channel",
        "type": "message",
        "user": "U06L584S4MT"
    },
    {
        "ts": "1709175002.789719",
        "text": "<@U06M6A4V4RZ> has joined the channel",
        "type": "message",
        "user": "U06M6A4V4RZ"
    },
    {
        "ts": "1709251712.446309",
        "text": "<@U06MRQH01CH> has joined the channel",
        "type": "message",
        "user": "U06MRQH01CH"
    },
    {
        "ts": "1709642044.298079",
        "text": "<@U06MJGF5FNK> has joined the channel",
        "type": "message",
        "user": "U06MJGF5FNK"
    },
    {
        "ts": "1709712883.643189",
        "text": "<@U06MQEBUV1V> has joined the channel",
        "type": "message",
        "user": "U06MQEBUV1V"
    },
    {
        "ts": "1709772141.128369",
        "text": "結構前から開発するのに <https://github.com/commercialhaskell/rio|rio> を使っているのですが、PR出せるか見てみたら最終コミットが去年1月になってるんですね\nこれ開発継続してますかね?みなさんもう知らぬ間に使ってなかったりします?",
        "type": "message",
        "user": "U57CUMWQ6"
    },
    {
        "ts": "1710131564.861859",
        "text": "気づいたら stack new が最新のlts-resolver urlを拾わなくなってるの。いつから、なにが変ったのでしょうか？\n現在(2024-03-11)は、lts-22.13 が最新なんですが、stack new hoge すると\n```Selected the snapshot <https://raw.githubusercontent.com/commercialhaskell/stackage-snapshots/master/lts/22/11.yaml>.```\nがでてきます。",
        "type": "message",
        "user": "U4KU9ABL0"
    },
    {
        "ts": "1710131753.907889",
        "text": "なんかいつからか S3 上にホストされている snapshots がアップデートされなくなっているんですよね。<https://www.stackage.org/download/snapshots.json> に最新のデータがあるので、これをスナップショット一覧のデータになるように stack を再設定すればいいはずです",
        "type": "message",
        "user": "UK0MXUCAV"
    },
    {
        "ts": "1710131903.214959",
        "text": "<https://docs.haskellstack.org/en/stable/yaml_configuration/#urls> ここの説明に従って、以下のように `~/stack/config.yaml` に追記すればいいはずです：\n\n\n```urls:\n  latest-snapshot: <https://www.stackage.org/download/snapshots.json>```",
        "type": "message",
        "user": "UK0MXUCAV"
    },
    {
        "ts": "1710836980.833439",
        "text": "<@U06QL09FPFT> has joined the channel",
        "type": "message",
        "user": "U06QL09FPFT"
    },
    {
        "ts": "1711011920.819949",
        "text": "<@U06QMLALZ2P> has joined the channel",
        "type": "message",
        "user": "U06QMLALZ2P"
    },
    {
        "ts": "1711113034.245889",
        "text": "<@U06QPCQUUPQ> has joined the channel",
        "type": "message",
        "user": "U06QPCQUUPQ"
    },
    {
        "ts": "1711381953.846529",
        "text": "<@U06R6UPBWHY> has joined the channel",
        "type": "message",
        "user": "U06R6UPBWHY"
    },
    {
        "ts": "1711979103.322819",
        "text": "<@U06S7HK35K4> has joined the channel",
        "type": "message",
        "user": "U06S7HK35K4"
    },
    {
        "ts": "1712443367.080299",
        "text": "<@U06SY7XF4G6> has joined the channel",
        "type": "message",
        "user": "U06SY7XF4G6"
    },
    {
        "ts": "1712532865.503449",
        "text": "ライブラリ作成者が、次に出すバージョンのAPIが、前のバージョンのAPIすべてを提供しているか検査する方法はありますか？\n意図的な欠落が発生する場合はメジャーバージョンアップしないといけないので、意図しない漏れがないか検査したいのです。",
        "type": "message",
        "user": "U56MBRKR9"
    },
    {
        "ts": "1712915662.893909",
        "text": "型レベルリストを扱う上ではヘテロジニアスリストを一般化したような\n```type BenriList :: (k -&gt; Type) -&gt; [k] -&gt; Type\ndata BenriList f xs where\n  BNil :: BenriList f '[]\n  BCons :: f x -&gt; BenriList f xs -&gt; BenriList f (x ': xs)\n-- f = Identity だと HList と同型```\nというデータ型を用意すると便利なことがありますが、これは何と呼ぶのが良いでしょうか？ちなみにvinylだと <https://hackage.haskell.org/package/vinyl-0.14.3/docs/Data-Vinyl-Core.html#t:Rec> です。",
        "type": "message",
        "user": "UGM9F7XQS"
    },
    {
        "ts": "1713287334.687189",
        "text": "<@U06UL2T7L9Y> has joined the channel",
        "type": "message",
        "user": "U06UL2T7L9Y"
    },
    {
        "ts": "1714606756.525399",
        "text": "<@U07162WJL95> has joined the channel",
        "type": "message",
        "user": "U07162WJL95"
    },
    {
        "ts": "1714640539.272069",
        "text": "<@U072BBDH9JL> has joined the channel",
        "type": "message",
        "user": "U072BBDH9JL"
    },
    {
        "ts": "1714668598.959509",
        "text": "<@U07242FMTSM> has joined the channel",
        "type": "message",
        "user": "U07242FMTSM"
    },
    {
        "ts": "1714942645.818289",
        "text": "vscode の editor の中でちょっと repl がしたい（terminal に移動して ghci を動かさずに）場合はどうしたらよいですか　下記の記述を見つけましたが　\n*Inline REPL:* Add REPL blocks to your code with haddock syntax, either using no spaces before `&gt;&gt;&gt;` or put it in a comment like `-- &gt;&gt;&gt;`. Click on the code lens or type `Shift+Enter` to run a single block, or type `Shift+Alt+Enter` to run all blocks in a file",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1715212386.441539",
        "text": "御回答ありがとうございます　現在の設定（VSCode on WSL2 　　Ubuntu 20.04.6 LTS, GHC 9.8.2, Cabal 3.10.2.1, HLS: 2.5.0.0）ではHSL はtype表示などは動いていますが　このコード実行例の Inline REPL は動いていません　HLS のドキュメントをもっと詳しく読んでみます",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1715238503.282179",
        "text": "<@U072NVB4TC2> has joined the channel",
        "type": "message",
        "user": "U072NVB4TC2"
    },
    {
        "ts": "1715240089.712869",
        "text": "<@U072P2YEDFC> has joined the channel",
        "type": "message",
        "user": "U072P2YEDFC"
    },
    {
        "ts": "1715258221.498639",
        "text": "Core to Hsあるいは、Core to sourceする関数ってありますか？ GHC APIの中に見つからなかったのですが\n\n今私は、Coreの型からCoreExprを計算する <https://hackage.haskell.org/package/ghc-9.8.2/docs/GHC-Tc-Errors-Hole.html#t:HoleFitPlugin|HoleFitPlugin>を書いていて、出力には表層構文で書かれた文字列を渡す必要があるのですが、単純にCoreExprをpprしてしまうと、Haskellの構文ではなくなってしまいます。\nそれなので、CoreをHsに戻すまで行かなくても、パースに通るようなテキストに変換したいです。",
        "type": "message",
        "user": "U02CE9YGEAU"
    }
]