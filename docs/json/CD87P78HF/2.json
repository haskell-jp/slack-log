[
    {
        "ts": "1540098448.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540098460.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540112515.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540113014.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540113015.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540113062.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540123345.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540123544.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540124288.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540124288.000200",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540124289.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540124445.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540124447.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540379713.000200",
        "text": "<@U570660KX> has joined the channel",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1540379816.000100",
        "text": "手元の環境で動作させてみました。WIn7 + デフォルトターミナル + 最新stack環境だと、日本語を出そうとした時に文字コードエラーで落ちるみたいです",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1540379845.000100",
        "text": "ちなみにassets以下をshift_jisに変換すると動きます。",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1540379975.000100",
        "text": "ああ、chcp 65001は必要そうですね。。。そこは大分気を遣ったはずだけどなぁ。。。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540380047.000100",
        "text": "<https://github.com/haskell-jp/makeMistakesToLearnHaskell/issues> への登録をお願いします！ :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540380164.000100",
        "text": "chcp 65001で動くのであれば、根本解決はしないでドキュメントに載せる方向で行こうかなぁ。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540380743.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540380902.000100",
        "text": "やっぱりchcp 65001すると回避できるっぽいですね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540381972.000100",
        "text": "すみません、やっぱり手元で直せたっぽいのでissueを待たずにそのままpull request送ります。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540382399.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540383235.000100",
        "text": "特に二重にCIを実行する意味もないので、Pull requestのpush時のみCIを走らせるよう修正しました。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540383324.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540383325.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540383344.000100",
        "text": "これで修正できたはず :kanryo:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540396261.000100",
        "text": "Win7だとchcpしてもフォントが日本語にならないという問題があったっぽいので、今回の対応が良いです。issue入れられなくて申し訳ない",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1540480786.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540511510.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540511511.000100",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540692076.000200",
        "text": "<@U5B3EGEFQ> has joined the channel",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1540695304.000300",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540696620.004200",
        "text": "issue にする方が良いかもしれませんが、気になった点です。\n\n4問目の `do記法でgetContents関数と細い左矢印&lt;-を使って、入力を受け取る` の部分で意図的に *代入* という単語を選ばれているような気がしますが、束縛と代入の違いについても簡単に説明した方が良いと思います。\n\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/blob/master/assets/4.md#do%E8%A8%98%E6%B3%95%E3%81%A7getcontents%E9%96%A2%E6%95%B0%E3%81%A8%E7%B4%B0%E3%81%84%E5%B7%A6%E7%9F%A2%E5%8D%B0-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%85%A5%E5%8A%9B%E3%82%92%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B>",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1540698710.006300",
        "text": "それはここではしたくないです。私がうまく説明できる自信もないですし。それらは突き詰めればバックグラウンドにある言語の違いでしかないと思っていて、実用上それらを区別しなくて困ったことがないためです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540698959.006500",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540699800.006700",
        "text": "質問です。\n\n&gt; それはここではしたくないです。\n他の課題で触れるということでしょうか？(それとも、今回は触れないという意味でしょうか？)\n\n文章の内容から推測するに、他の言語を知っている人を対象としていると思うのですが、その際に既存の *代入* を知っている人は、当然 *再代入* ができるものと考えるはずです。\n\nこの辺ってどのように理解してもらう予定でしょうか？",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1540700258.007000",
        "text": "現状まだ検討してないです。 `let` を使いたくなったあたりかも知れません。\n\n&gt; 当然 *再代入* ができるものと考えるはずです。\n\nそれは一概に言えないです。代入があるから再代入ができるということは本質的ではないです。他の言語でも定数に代入すると言いますし。\n\nまたそれ以前に、実際のところshadowingしてしまったら再代入と区別ができなくなります。だからある意味で再束縛もできてしまうと考えた方が自然ではないでしょうか？\n束縛であれ代入であれ同じ名前に再び割り当てることができるか否か、というのは本質的な区別ではないのです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540700595.007400",
        "text": "まあただ、それを踏まえた上で「代入」が初出した時点で脚注を加える、というのはありかな、という気がしてきました。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/issues/9#issuecomment-431660589> のコメントのとおり、これからHTMLに書き出すよう変換しようと思っていたため、脚注にしたことによって読みづらくなるリスクが低くなったので。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540700935.007800",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540700966.008200",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540701864.008400",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540701865.008500",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540707776.008600",
        "text": "&gt; それは一概に言えないです。代入があるから再代入ができるということは本質的ではないです。他の言語でも定数に代入すると言いますし。\n\n```\ndo\n  input &lt;- getContents\n```\n\n本文中で上記のコードに対して `inputという変数に代入する` と説明しているため、ここで `input` を定数と考える人は少ない気がします。\nそのため、 `input` を通常の変数として認識した場合、よくあるプログラミング言語を知っている人であれば、自然に変数 `input` に対して再代入できそうだなと僕なら思うのですが、そうでもないのかな・・・。\n\n&gt; またそれ以前に、実際のところshadowingしてしまったら再代入と区別ができなくなります。だからある意味で再束縛もできてしまうと考えた方が自然ではないでしょうか？\nshadowing すれば、確かに再代入のように見えます。が、再代入ではありませんし、shadowing は GHC がデフォルトで警告を出すように Haskell の書き方として推奨されていないように思います。そのため、他言語に親しみのある人に対して代入という言葉を足がかりに Haskell を説明すること自体は良いと思うのですが、背後にあるプロセスについては簡単で良いので説明した方が良いと思うのです。(新しい変数を作ってそれを使っていると言えば良いだけなので)\nそもそも Haskell が *純粋* と言うのはそういう部分に支えられています。\n\n&gt; まあただ、それを踏まえた上で「代入」が初出した時点で脚注を加える、というのはありかな、という気がしてきました。\n必要なら、何かしら代入と束縛の違いについての文章を書きますよ！\n\n&gt; これからHTMLに書き出すよう変換しようと思っていたため\n少し思ったのが、実際に試してもらう際は静的にリンクされたバイナリをどこからかダウンロードして利用するという方法でしょうか？\n現状でも初回ビルドで2~3分ぐらい？かかるので、pandoc を依存関係に入れるとかなりビルドに時間がかかりそうな気がします。。。",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1540708323.008800",
        "text": "&gt; shadowing は GHC がデフォルトで警告を出すように Haskell の書き方として推奨されていないように思います\n\nもちろんその通りです（しかし、細かいですがデフォルトで警告は出ません）\nなので、「再代入はできないよ（少なくともしない方がいいよ）」という点さえ強調してしまえばもはや束縛か代入か、というのは実用上区別しにくいので、その点はちゃんと触れたいと思います。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540708394.009000",
        "text": "&gt; 現状でも初回ビルドで2~3分ぐらい？かかるので、pandoc を依存関係に入れるとかなりビルドに時間がかかりそうな気がします。。。\n\n悩んだんですが、ギリギリまで開発をしたい、なおかつassetsがある関係でインストールが若干困難なので、ソースからインストールしていただく予定です。\nそのための <https://haskell-jp.slack.com/archives/CAXQ09PN2/p1540705016008000> でもあるのです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1540708411.009300",
        "text": "&gt; （しかし、細かいですがデフォルトで警告は出ません）\n! いつも出てるからデフォルトかと思ってました。すみません！:cry:",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1540709047.009600",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540710123.010300",
        "text": "",
        "user": "U9LLMAJ95",
        "type": "message"
    },
    {
        "ts": "1540711337.011400",
        "text": "ついでに Docker ファイル作るための設定も PR 出して良いですか？:thinking_face:",
        "user": "U5B3EGEFQ",
        "type": "message"
    }
]