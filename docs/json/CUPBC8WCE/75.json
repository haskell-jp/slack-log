[
    {
        "ts": "1744519522.707999",
        "text": "S.K.です。ちょっと遅くなってしまいましたが、今週もお世話になります。よろしくお願いいたします。\n今週も先週に続き Implementing Functional Languages: a tutorial, 5.3.2 The instruction set, Ex.5.9 の修正確認の続き(Ex.5.10 のテストプログラムを使用)を進めて行こうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1744534803.998759",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1744534997.425389",
        "text": "関数型まつりの資料作りの一環として、Haskellの歴史を調べていました。あとmakeMistakesToLearnHaskellも少し進めました。Haskell-jp Blogと併せて後ほどコミットを共有します。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1744536037.021069",
        "text": "Ceiling Function はうまいこと自前の木構造に落とせたが　Subway Tree System はそんな簡単ではないらしいトホホ",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1744536338.697089",
        "text": "makeMistakesToLearnHaskellの更新: <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/c6e02c546d1018567445999db6a06fe5f0e7e842>\nHaskell-jp Blogの更新: <https://github.com/haskell-jp/blog/commit/ef24c564710cceb988fea7b6af753f46fdba2ab4>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1744537215.355319",
        "text": "今週も、Ex.5.9 修正後の Ex.5.10 テストプログラム(S K K → inc に変更)の動作結果確認をしていました。\n手作業では動作を追跡しきれなくなったため、遅まきながら関数適用や間接参照の内容を再帰的にたどって表示する処理を showStackItem 関数に追加しました。もっと早くやっていれば良かったです。\n子タスク1の結果が親タスクに反映されているところも一応確認できましたが、手作業で確認したところも含めて各タスクの状態変化を再確認中です。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1745121622.921489",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1745121839.869229",
        "text": "山本悠滋です。先週から引き続き関数型まつりの資料作りなどをやります\n14時から用事なので手短に。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1745121951.641349",
        "text": "<https://byorgey.github.io/blog/posts/2020/05/22/competitive-programming-in-haskell-building-unordered-trees.html|Competitive programming in Haskell: Building unordered trees> : Brent Yorgey 先生の blog をもとに Kattis の問題を解きます",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1745124224.470299",
        "text": "S.K.です。ちょっと遅くなってしまいましたが、今週もお世話になります。よろしくお願いいたします。\n今週も引き続き Implementing Functional Languages: a tutorial, 5.3.2 The instruction set, Ex.5.9 の修正確認の続き(Ex.5.10 のテストプログラムを使用)を進めて行こうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1745124691.339959",
        "text": "早いですがひとまずここで。Haskell Report 1.0を読んでました",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1745136248.653799",
        "text": "用事が早く済んだので再開！",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1745139606.727039",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1745139693.734709",
        "text": "古いHaskell Reportからサンプルコードや型定義などを抜き出して貼り付けてました。\nmakeMistakeToLearnHaskellやHaskell-jp Blogの続きは延長戦で少しやります。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1745140378.663909",
        "text": "な　なんと！　この blog には先週の Subway Tree System 問題のエレガントな回答が乗っているではないか　あれだけ苦戦した難問なのに　Text.Parsec を駆使し鮮やか　これぞとばかり感動的強力かつ最短　Haskell を勉強して好かったと思わせる稀代の名算譜　自分にこーゆーの書けるよーになるにはあと１０年２０年掛かるだろー（嘆息）　という事で今週は Parsec に関する３題の問題が与えられているのでその Document から使い方を勉強した",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1745140804.293629",
        "text": "Ex.5.9 修正後の Ex.5.10 テストプログラム(S K K → inc に変更)の動作結果確認が、ようやく一応何とか終わりました(つもりです)。\n一応正しそうに思えましたので、先に進みました。\nEx.5.11, Ex.5.12 は自分には問題の意味がよく理解できなかったため保留して Mark3 に進み、Ex.5.14 の途中です。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1745141385.492309",
        "text": "makeMistakesToLearnHaskellの進捗: <https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/df8b25b1a28cd8a8f3332388971be9d7ef88a33c>\n- 課題21をひとまず終えました！\nHaskell-jp Blogの進捗: <https://github.com/haskell-jp/blog/commit/c1bc0c5ea758126b4cce2a7227a52ac18d01311a>",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1745726403.969769",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1745726979.343449",
        "text": "<https://byorgey.github.io/blog/posts/2020/05/22/competitive-programming-in-haskell-permutations.html|Competitive programming in Haskell: Permutations> : Brent Yorgey 先生の blog をもとに Kattis の問題を解きます",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1745728029.424239",
        "text": "山本悠滋です。今日も長いこと外出するので、時間外ですが進めておいたmakeMistakesToLearnHaskellの続きを共有します。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/commit/99a9728f9a31fb769ffbd77005fc34805e300b6f>\n他は時間があったら関数型まつりの資料作りなどを進めておきます。",
        "type": "message",
        "user": "U4LGTMTMK"
    },
    {
        "ts": "1745730974.560099",
        "text": "S.K.です。遅くなってしまいましたが、今週もお世話になります。よろしくお願いいたします。\n今週も引き続き Implementing Functional Languages: a tutorial, 5.4 Mark 3: A realistic parallel G-machine の続きを進めて行こうと思います。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    },
    {
        "ts": "1745741452.103899",
        "text": "先週の The Power of Substitution 問題の数学的に強力な回答がされている　愚直な方法では TLE となるこの難問を permutation の cycle decomposition をしてから　中国剰余定理を用いる２段階で解いている　ナカナカだよねえ　勉強になるなあ　ありがたく写経させていただく　\n次週は幾何問題とのことでとりあえず Vacuumba の問題文だけ読んだ　多分楽勝の雰囲気　のんびり行こう\n本日はこれにて離脱",
        "type": "message",
        "user": "U584T7GAH"
    },
    {
        "ts": "1745744407.762419",
        "text": "",
        "type": "message",
        "user": null
    },
    {
        "ts": "1745745341.571239",
        "text": "5.4.2 Conservative and speculative parallelism の Ex.5.14 を一応何とか終えて、Ex.5.15 の途中です。\nロックされたノードをアンワインドしようとしてブロックされているタスクをスケジュールしない変更をひとまず終えて、\nすでに WHNF であるノードを評価するタスクをスケジュールしない変更の内容調査中です。",
        "type": "message",
        "user": "U04BD6ZFKQ8"
    }
]