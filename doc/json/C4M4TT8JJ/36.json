[
    {
        "ts": "1547694883.115200",
        "text": "ドキュメントの修正であれば trac に issue 立てなくても、そのまま PR 出しちゃうのが楽だと思います。\n<https://github.com/ghc/ghc>",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1547696735.117000",
        "text": "一瞬、どこがダメなのかわからなかった…… ラムダ式が Java と同じ書き方に変わっちゃってますね",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1547697621.117100",
        "text": "GitHub のリポジトリーって <http://git.haskell.org/ghc.git> のミラーですけど、GitHub に PR していいんですか？\nそういえば GitLab に移行したとかいう話も最近聞いたような。",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1547697895.121800",
        "text": "Gitlab 移行前はそれで大丈夫でした。PR はクローズされて本家に取り込まれる感じになります。\n\nGitLab 移行後は試したことないので、わかんないです…。どうなんだろう…",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1547723107.122600",
        "text": "必ずしもHaskellのお話... とはいえないですが、2018年のDhallの進化。構文もいろいろ変わりましたなー。\n<http://www.haskellforall.com/2019/01/dhall-year-in-review-2018-2019.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547737304.122900",
        "text": "<@UFG7U49H8> has joined the channel",
        "user": "UFG7U49H8",
        "type": "message"
    },
    {
        "ts": "1547766536.123000",
        "text": "これ、どうなりました？\n最適化の有無でも変わったりもしません？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547777983.123300",
        "text": "`trace` 云々別にして、結局ロジックがおかしかったので、それ以上追求しませんでした",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1547820412.123800",
        "text": "昨年末から、GitLab側についても、Merge Requestを受け付けるようになっています。\nGitLabのフローについての、簡単な説明はここにあります。\n<https://gitlab.haskell.org/ghc/ghc/wikis/home>\n\nなお、ドキュメントなどの簡単な修正は、wadoさんの説明のように、GitHubへのPull RequestでもOKです。\nただ、GitLabのフローに慣れる意味でも、ドキュメント修正でも、GitLabでMerge Requestを送るのも良いと思います。\n\nちなみに、GitLabに慣れるために、ドキュメント修正のMerge Requestを送ってみました:slightly_smiling_face:\n<https://gitlab.haskell.org/ghc/ghc/merge_requests/70/diffs>\n\n（あと、GitLabへの移行については、簡単にQiita関連の記事を修正しようと思っています。）",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1548036373.124800",
        "text": "<@U55V441FS>ありがとうございます！記事こちらですね 読んでみます！ <https://qiita.com/takenobu-hs/items/a2eeb327088bb1d2fe77>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1548044807.125600",
        "text": "haddock って stackage の GHC 8.0 までにしかないんですね（そういえばなんか聞いた気がする",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1548310871.126500",
        "text": "<@UFMV026NR> has joined the channel",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1548349410.127400",
        "text": "ブログ記事を書いたんですが、分からない部分があるので知ってる人がいたら教えてほしいです。 <http://kakkun61.hatenablog.com/entry/2019/01/25/Haskell_%E3%81%A7_Ctrl-C_%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B%EF%BC%88Windows%EF%BC%89>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1548349497.128100",
        "text": "OGP が展開されない……\n&gt; Haskell で Ctrl-C を制御する（Windows）\nという記事です",
        "user": "U4L0B71L1",
        "type": "message"
    }
]