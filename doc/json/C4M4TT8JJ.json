[
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "複雑な関係がまとまってて分かりやすくて有り難いです！\n本題から外れますが１点だけ。 ghcの8.6のアルファ版は、これからリリースされる予定です。 ちょうど、8.6アルファのbranchが切られて、整備されている最中のようです。（この関連の修正を急ピッチで反映させるのかもしれません。）"
        },
        "messageTs": "1529756170.000040",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "現状の個人的な理解を， <https://www.reddit.com/r/haskell_jp/comments/8t8p4j/typeoperators_nostaristype%E3%81%AE%E5%BB%B6%E6%9C%9F%E3%81%AE%E6%8F%90%E6%A1%88/> にて書きました"
        },
        "messageTs": "1529749118.000084",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UBCNEFCPM> has joined the channel"
        },
        "messageTs": "1529747773.000036",
        "messageUser": {
            "unUserId": "UBCNEFCPM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UBD63QPAS> has joined the channel"
        },
        "messageTs": "1529661510.000137",
        "messageUser": {
            "unUserId": "UBD63QPAS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最近、 Menoh というDNN推論ライブラリ <https://research.preferred.jp/2018/06/menoh-release/> の Haskell binding を作ってみたので、ご参考までに。\n<http://hackage.haskell.org/package/menoh>\n命令的なAPIを素朴にラップしただけで、特に関数的なインターフェースは用意できていないですが。"
        },
        "messageTs": "1529643724.000126",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "からみ具合を追いきれてないのですが、TypeInType関連で、激しく手を入れている関係なのでしょうね、、、おそらく。\n型とかカインド関連で、過激にいろんな試行をしてるようですが、本当は、言語オプションでうまくやりくりできるはずが、考慮もれがあって、workaroundを検討中という感じのようです。\n\n-XStarIsType拡張でうまく行くはずが、TypeOperatorsと競合して、他世代のライブラリの保守を考えると、いろいろと発散しているようです。 が、<https://github.com/ghc-proposals/ghc-proposals/pull/146> で抑えこもうとしている感じでしょうか。\nまだ、追いきれてません。（というか、各々の理解がまだ不十分で、、、）:sweat_smile:"
        },
        "messageTs": "1529498432.000120",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そもそもGHC 8.6でこれが実装されるのが，ホットになってる要因なんですかね\n<https://github.com/ghc-proposals/ghc-proposals/pull/83>"
        },
        "messageTs": "1529482422.000168",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "書くぞ～"
        },
        "messageTs": "1529462851.000291",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://twitter.com/techbookfest/status/1009128549335195648>"
        },
        "messageTs": "1529462763.000105",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "関連提案(#146)も出てきたので、まだまだ紆余曲折ありそうですね^^"
        },
        "messageTs": "1529409640.000287",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "type holeと比べてどうなんだろう。"
        },
        "messageTs": "1529372399.000210",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "確かghcidを解説している記事にあったかと思うのですが、型わからなくなったらとりあえず  `hoge :: ()`と注釈加えたり `() &lt;-` とパターンマッチしてみたりしてわざとコンパイルエラー起こすの、確かに有効ですね！"
        },
        "messageTs": "1529371927.000085",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、これreddit でも話題になってましたね。 私的には、* 種は無くさないほうに一票という感じです。 特に理論的な根拠や理由がある訳では有りませんが、 強いて言うなら、 Erik Meijerがいつか語ってたように、言語機能(と言って良いのか微妙ですが)を無くす事は言語を強化する事にならない。 (言っていた文脈は全く別で私が勝手にその部分だけ引用してますが) という感じでしょうか。"
        },
        "messageTs": "1529289603.000191",
        "messageUser": {
            "unUserId": "U9XHWQX7Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あと`*`だと、将来的にDependent Haskellの世代に、-XTypeOperatorsと見栄えが衝突するのが痛いんですよね。\n既存の説明文書が古くなってしまうことや、ライブラリの更新負担が発生することとのトレードオフですね。"
        },
        "messageTs": "1529204553.000046",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`Type` の方が確かに説明しやすそうですね！私はupvoteしました。"
        },
        "messageTs": "1529201000.000081",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今日はHaskell Dayの日程候補挙げをやるぞい :shikamaro_kun:"
        },
        "messageTs": "1529119923.000002",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ghc-proposalsの方が進めば、いずれ、Haskell primeの方にも提案されるかなぁと思います。\nちなみに、Haskell primeの方は、実装されて使用された実績のある仕様が、提案対象になっていたと思います。\nただ最近は、Haskell primeの方は動きが停滞してますね。 2020年直前になると活発化するのかな？"
        },
        "messageTs": "1529103469.000018",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "全く中身を読んでないので書いてあったら申し訳ないんですが、これはhaskell primeにはプロポーサル出さないんですかね？"
        },
        "messageTs": "1529069597.000377",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "8年かけてやるという気の長い話しです。\n今なら止める側にも倒せますし、進める側にも倒せます。\n何か新しい観点に気づいたら教えてあげてください:slightly_smiling_face::haskell:"
        },
        "messageTs": "1529067983.000554",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "upvoteしました！"
        },
        "messageTs": "1529066668.000204",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "地味な内容ですが、広く影響のある提案が、ghc-proposalsに提案されています。\nカインド（種）の仕様から、'*'の表記を削除してしまおうというものです。\n今の期間内であれば、同意・反対などの意見や、改善提案などが可能です:slightly_smiling_face:\n<https://github.com/ghc-proposals/ghc-proposals/pull/143>"
        },
        "messageTs": "1529066130.000419",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UB95DNP3R> has joined the channel"
        },
        "messageTs": "1529043610.000185",
        "messageUser": {
            "unUserId": "UB95DNP3R"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ライブラリでlensを使うことの是非については、ネストしたデータ構造なら推奨、コンテナに入れて処理しないような単なるパラメータなら非推奨という立場です"
        },
        "messageTs": "1529041265.000152",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "lens、使いたくなったら使っちゃう派！\n（不用意には使わないようにしてるけど、便利すぎる）"
        },
        "messageTs": "1529035708.000024",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "型シノニム程度ならコピペしちゃうかな。。。この間実際 `Getting` と `view` がほしくなってしましたし。"
        },
        "messageTs": "1529034883.000024",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ああ、その問題もありますね……私が言おうとしたのは、 `point :: Lens' Atom Point` ではなく `point :: Functor f =&gt; (Point -&gt; f Point) -&gt; Atom -&gt; f Atom` みたいなシグネチャを大量に書く羽目になると可読性がアレなので、結局Lensと同じtype宣言を各プロジェクトでやる羽目になってしまう問題です。結局lens依存しちゃっていいやってなるかもしれませんね"
        },
        "messageTs": "1529034777.000114",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最近はlensに依存したパッケージがかなり多くなったので、個人的にはライブラリでもあまり気にせずlensに依存してしまうこともあります。"
        },
        "messageTs": "1529034713.000203",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`makeLenses` をlens（やmicrolensなど）に依存しないでやるのを自動化できればいいって話ですよね。\nTHがなかったころのEtaでは、GHCに -ddump-splice させて出てきたものをコピペしろ、なんて言われてたなぁ（めんどい）"
        },
        "messageTs": "1529033215.000091",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ただ、これをやるためにtype MyLens = ...とか定義し始めると \"DO NOT REPEAT YOUSELF!!!!!!\" ってなるんですけど、どうすればいいんだろう"
        },
        "messageTs": "1529033107.000013",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "依存性については、実はLens APIを公開するだけだったらlensパッケージに依存する必要はなかったり。\n&gt; You can even define lenses without incurring a dependency on the lens library\n<http://hackage.haskell.org/package/lens-tutorial-1.0.3/docs/Control-Lens-Tutorial.html>"
        },
        "messageTs": "1529033008.000146",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Lensは使ったり使わなかったりですねー。演算子多すぎとか、viewとかontoとか地味に意味を思い出せない関数が多用されて文法ノイズになりがちなのがちょっとつらい"
        },
        "messageTs": "1529032905.000142",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Lens、できないことができるようになるのじゃなくて、簡単に書けるために、あの型を見ないといけないとなって、いまいち学習意欲が出ない\nできるだけ依存減らしたいし"
        },
        "messageTs": "1529023777.000190",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "```\ndata ObjectA = ObjectA { objB :: ObjectB }\ndata ObjectB = ObjectB { value :: Int }\n\nobjA = ObjectA (ObjectB 1)\n\nnewObjA = case objA of\n  a@ObjectA{..} -&gt; case objB of\n    b@ObjectB{..} -&gt; a { objB = b { value = value + 1 } }\n```"
        },
        "messageTs": "1528983960.000358",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "深いデータ構造の操作には Lens が必要だと思っていたけど as pattern と RecordWildCards 拡張があれば頑張れる気がしてきました。"
        },
        "messageTs": "1528983945.000165",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます、見てみます！"
        },
        "messageTs": "1528936550.000001",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://calendar.google.com/calendar/embed?src=ZnZpanZvaG05MXVpZnZkOWhyYXRlaGY2NWtAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ> はもうメンテされてないか...\n<https://techacademy.jp/magazine/1153> もちょっと情報が古そうですが、参考になる？"
        },
        "messageTs": "1528931982.000231",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "カンファレンス系は当日の最後に来年の日程言ってたりしないっけ？"
        },
        "messageTs": "1528900853.000618",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell Dayをやる日を決めるために他のIT勉強会の日時探ってるけど、どうやって探すのがいいんだろ。\nとりあえずtechplay, atend, connpassのカレンダー見てる。\nOSCは偶然みつけた！"
        },
        "messageTs": "1528900728.000730",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "言ったのはあくまで一般の意味のiteratee、そのlibraryではない"
        },
        "messageTs": "1528872706.000232",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ある程度ストリームライブラリに慣れた人で、「ストリームライブラリの内部構造を知りたい」と思った人にとっては、そういう解説があるといいかもしれないと思いました。Iterateeは構造が簡単（だったと思う）なので、概念の入門編としてはいいかも"
        },
        "messageTs": "1528862691.000040",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "cdepillaboutさんが勉強会を始めたようですね。 <https://functional-sapporo.connpass.com/event/91454/>"
        },
        "messageTs": "1528861397.000148",
        "messageUser": {
            "unUserId": "U57CGDBMG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "紹介文を書くならIterateeより、もっと現代的なライブラリの方がいいような気がします…（とか言っちゃ駄目な奴だろうか）"
        },
        "messageTs": "1528859556.000121",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "iterateeの紹介文を書きたいけど、その前にFreeTとFreeという説明が厄介なものが立ちふさがってる。。。"
        },
        "messageTs": "1528851065.000072",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UB5UV511U> has joined the channel"
        },
        "messageTs": "1528694588.000150",
        "messageUser": {
            "unUserId": "UB5UV511U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UB5NQ764F> has joined the channel"
        },
        "messageTs": "1528551988.000018",
        "messageUser": {
            "unUserId": "UB5NQ764F"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Core libraryはAPIの組み合わせがあまり増えないようにしたい感じですね。"
        },
        "messageTs": "1528460689.000126",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "要するに中級者向けの本でしょうか。公開はされてませんがIOHKという会社が定期的に行っているHaskell講座はGenerics、型族、THなども網羅していて中級者〜上級者向けのコースだと感じました。もし興味があれば教材を共有できるかもしれません。"
        },
        "messageTs": "1528430798.000191",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "けど、ちょっと思いましたが、\nK&amp;RにPOSIXとかそういう内容はほとんどないです。\nPOSIX知りたかったら詳解UNIXプログラミングとかよみますよね。\nこういうのは文法とか基礎的なものを網羅しておけばいい気もしました。\nその一方でHaskell版の詳解UNIXプログラミングのような本はなにかというとなんでしょうね。"
        },
        "messageTs": "1528421432.000093",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "前から気になってた <https://qiita.com/igrep/items/8b62b856ff42d1f51619> \nみたいな関数をDebug.Traceに追加するのはどうか、\nと思い切ってMLに投げてみましたが反応いまいちっすね。。。 :disappointed: \n<https://mail.haskell.org/pipermail/ghc-devs/2018-June/015851.html>"
        },
        "messageTs": "1528417848.000081",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "= =まともなアプリを開発しようとしたら、これぐらい基本だと思う"
        },
        "messageTs": "1528348709.000238",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "webinar って web seminar の略だったのか\nFP Complete からのメールでよく見て何だろうなと思ってた"
        },
        "messageTs": "1528339423.000195",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "自分の子供にも満足に教えられないので判断がつかないです。"
        },
        "messageTs": "1528336221.000003",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こういうのをやると初心者にもいいのでしょうか。"
        },
        "messageTs": "1528336198.000257",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://mmhaskell.com/blog/2018/6/4/bxit5i954uafn0n4gah3yrzcxnc3q6>"
        },
        "messageTs": "1528336177.000306",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UB2C2BN2G> has joined the channel"
        },
        "messageTs": "1528285755.000114",
        "messageUser": {
            "unUserId": "UB2C2BN2G"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そういうところ頻繁に使いますからね。"
        },
        "messageTs": "1528258210.000218",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "僕は買いましたけど、Haskellを全く知らない状態からでも学べる良書でした。しかし現状ではlens, conduit, 競合性(stm, ioref, mvar)に関するセクションがないのが若干不満です。"
        },
        "messageTs": "1528256965.000139",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いまさら買いたくはないというジレンマが。"
        },
        "messageTs": "1528254866.000170",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "買わないで人にはすすめられないけど。"
        },
        "messageTs": "1528254846.000185",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "サンプルがもう少しながければ検討できるのですが。"
        },
        "messageTs": "1528254728.000050",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UB1MW6THP> has joined the channel"
        },
        "messageTs": "1528232811.000467",
        "messageUser": {
            "unUserId": "UB1MW6THP"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ですよね。reddit見てると結構お勧めされてるので良い本なのかなと思います。しかし、1211ページとは、、、初版(っていうのかな？pre-α版っていうのかな？)が出た当初は数百ページ程度だったはずなのに。。。相当熱心に更新してるんですね。"
        },
        "messageTs": "1528218743.000304",
        "messageUser": {
            "unUserId": "U9XHWQX7Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "binary, CBORと比較してみました。型に加えて、CBORにないフィールド名の情報も込みでCBORと同等なので、悪くないと思います\n```\n-rw-r--r--  1 fumieval  staff  125709  6  5 23:23 data.binary\n-rw-r--r--  1 fumieval  staff   65437  6  5 23:23 data.cbor\n-rw-r--r--  1 fumieval  staff   73619  6  5 23:23 data.csv\n-rw-r--r--  1 fumieval  staff   65196  6  5 23:23 data.winery\n```"
        },
        "messageTs": "1528211543.000586",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "連想配列の項を追記しましたが、ログかなり汚してしまいました！"
        },
        "messageTs": "1528180918.000121",
        "messageUser": {
            "unUserId": "U56G77VM1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "と思ったらMapとかも無いしまだ足りないだけっぽいので頑張って書いてみようと思います"
        },
        "messageTs": "1528178695.000023",
        "messageUser": {
            "unUserId": "U56G77VM1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Data.Arrayが紹介されていないのはなにか意図がある感じですか？  <https://wiki.haskell.jp/データ構造列伝>"
        },
        "messageTs": "1528178406.000188",
        "messageUser": {
            "unUserId": "U56G77VM1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://haskellbook.com/index.html>\nこの本、Haskell初心者におすすめですね。正式に出版されたらHaskellが一気に普及しそう。\n翻訳は、、厳しい（1211ページある"
        },
        "messageTs": "1528163499.000011",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://preview.overleaf.com/public/znyngkfztjyc/pdfs/964ddc9b720e77b5aca1a474306b8bb0fe6aebf9/untitled.pdf>"
        },
        "messageTs": "1528076962.000022",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "その比較まではやってませんでした…<https://mockaroo.com/> でも使って試してみます"
        },
        "messageTs": "1528024456.000058",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "エンコード後のサイズとかについてmessagepackとかとの比較ってどっかにあります？"
        },
        "messageTs": "1528024393.000039",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ライブラリ鍛治はやめられない"
        },
        "messageTs": "1528023865.000014",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "wineryという直列化ライブラリをリリースし、解説記事も投稿しました:wine_glass: 　<http://fumieval.hatenablog.com/entry/2018/06/03/195024>"
        },
        "messageTs": "1528023113.000008",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます！\n地味に検索する人の助けになればよいなぁ、というシンプルな内容でしたが、予想外の反響でした:haskell:"
        },
        "messageTs": "1527855188.000053",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAZMK5VPD> has joined the channel"
        },
        "messageTs": "1527828962.000225",
        "messageUser": {
            "unUserId": "UAZMK5VPD"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "SHA1 指定されていたら書き換えられないという認識でした。削除はできますけど。"
        },
        "messageTs": "1527822335.000173",
        "messageUser": {
            "unUserId": "U4MAYDV9C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "それを言えば、GitHub上のコンテンツであろうとなかろうと大抵の記事は後で書き換えられる可能性があるでしょうし、ものの正確を考えると最新の情報が反映されているリンクを書いた方がいいんじゃないかと思います。"
        },
        "messageTs": "1527821087.000068",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これは大変いいまとめですね。感謝です :tada: \nコンテンツを書き換えられるリスクを考えると、コミットのSHA1指定でリンクするのは良いプラクティスに思えました。"
        },
        "messageTs": "1527815717.000044",
        "messageUser": {
            "unUserId": "U4MAYDV9C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://haskellweekly.news/issues/109.html>"
        },
        "messageTs": "1527806483.000114",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "でも、わざわざ特定のコミットのREADMEを参照しなくてもいいのに..."
        },
        "messageTs": "1527806478.000074",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U55V441FS> Haskell Weekly入りおめでとうございます！ :tada: \n<https://haskellweekly.news/issues/109.html>\n<https://github.com/takenobu-hs/haskell-symbol-search-cheatsheet/blob/d5ed393674b6146b7ce17778f27ad3eab896f9a6/README.md#readme>"
        },
        "messageTs": "1527806417.000217",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC 8.4.3 がreleaseされてます。\nHaskell PlatformとStackも追って対応されるでしょう。\n<https://ghc.haskell.org/trac/ghc/blog/ghc-8.4.3-released>\n<https://pay.reddit.com/r/haskell/comments/8n29ey/announce_ghc_843_released/>\n\nちなみに、GHC 8.6.1のアルファ１（本リリースの３ヶ月前のアルファテスト版）は来週くらいに出るようです。"
        },
        "messageTs": "1527682605.000066",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "使ったことなかった"
        },
        "messageTs": "1527676990.000329",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "rioにはPrelude.lex関数がない？\nあれ、便利だと思うのですが…（なぜ `(String, String)` じゃなくて `[(String, String)]` を返すのかわからないけど）"
        },
        "messageTs": "1527674825.000005",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAY8K2XPG> has joined the channel"
        },
        "messageTs": "1527520842.000181",
        "messageUser": {
            "unUserId": "UAY8K2XPG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ナイス！"
        },
        "messageTs": "1527311243.000028",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "一番伝えたいニュアンスに近そうなのは \"Wondering ...\" の方だったので採用しました。\n<https://github.com/haskell-jp/blog/pull/124>\nもろもろのついでに修正しましたぜ！"
        },
        "messageTs": "1527309952.000053",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Free MonadでDSLを定義してみたのですが凄くいいですね、コードが読みやすくなって驚きました（必然的に泥臭い部分を一箇所に閉じ込めることになったので、それも影響してそうです）"
        },
        "messageTs": "1527293525.000141",
        "messageUser": {
            "unUserId": "U56G77VM1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "感嘆符を付けるなら\"How could it work!\"\n疑問符を付けるなら\"How would it work?\"\n三点リーダを付けるなら\"Wondering how it works...\"\n何もつけないなら\"Not sure how it works\"\nみたいな感じでしょうか"
        },
        "messageTs": "1527256430.000119",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "うーん :confused: じゃぁ感嘆符ならいかがでしょう。。。"
        },
        "messageTs": "1527255381.000154",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "うーん :confused: じゃぁ感嘆符ならいかがでしょう。。。"
        },
        "messageTs": "1527255110.000552",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "How it works?は、疑問符がついているのがかなり違和感あります。疑問符なしなら普通に使います(追記: 文脈は違いますが)…"
        },
        "messageTs": "1527254261.000050",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "投げました"
        },
        "messageTs": "1527237744.000131",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "了解です"
        },
        "messageTs": "1527237231.000211",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/haskell-jp/blog/issues> に送るか  <https://github.com/haskell-jp/blog/blob/master/preprocessed-site/posts/2018/windows-gotchas-en.md> を直接編集してPull requestを送っていただけると！ :pray: \nあと、 \n&gt; How it works?\nについては口語的な言い方として意図して使っています。"
        },
        "messageTs": "1527237179.000487",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "How it works? → How does it work?"
        },
        "messageTs": "1527237123.000036",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "The most of the file → Most files"
        },
        "messageTs": "1527237041.000175",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell-jp Blog初めての英訳記事です。 :uk: \n<https://haskell.jp/blog/posts/2018/windows-gotchas-en.html>\n気に入ったら本家Reddit辺りに共有してください。"
        },
        "messageTs": "1527210876.000090",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "記事はこちら: <https://qiita.com/HirotoShioi/items/58655da7f0941444c5af>\n今日の  <https://haskell.jp/antenna/> から見つけました"
        },
        "messageTs": "1527166047.000195",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "cardano-slの次期アップデートのリリースが近いので一足先に触ってみました。\n何が変わったのかというとwallet apiがv1になって使いやすくなりました。\ndocker imageも公開したので興味ある方は是非試してみてください！（ブログもQiitaにて公開しました）\n<https://hub.docker.com/r/shioihi/cardano-container-mainnet/>"
        },
        "messageTs": "1527165886.000120",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAT2BA4C8> has joined the channel"
        },
        "messageTs": "1526955638.000217",
        "messageUser": {
            "unUserId": "UAT2BA4C8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "週末のハスモクでリベンジしましょ"
        },
        "messageTs": "1526902653.000114",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なお、会場では全くウケませんでした。ちょっとクラスタが違いすぎたかもしれん。"
        },
        "messageTs": "1526902584.000317",
        "messageUser": {
            "unUserId": "U4M4XHKB8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "JavaScript の勉強会で GHCJS の話をしてきました。Elm を書ける人は Miso を試してみると面白いと思います。スライドでは中身にはあまり触れられなかったので、後でブログ上で技術的な詳細をまとめる予定です。<https://speakerdeck.com/ytaka23/we-are-javascripters-19th>"
        },
        "messageTs": "1526902223.000352",
        "messageUser": {
            "unUserId": "U4M4XHKB8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAU3422TG> has joined the channel"
        },
        "messageTs": "1526889241.000397",
        "messageUser": {
            "unUserId": "UAU3422TG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そのPDF見た、HaskellのIO managerを書き換えたみたい"
        },
        "messageTs": "1526888908.000369",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "てっきり、GHCをいじる以外介入できないと思ってた"
        },
        "messageTs": "1526888639.000272",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": ":thinking_face: それより、RTSはhookできるの？"
        },
        "messageTs": "1526888605.000122",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "多分まだuploadされてないだと思う"
        },
        "messageTs": "1526888523.000229",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> commented on <@UACQ9J5D3>’s file <https://haskell-jp.slack.com/files/UACQ9J5D3/FAU2X6L22/image.png|image.png>: <https://hackage.haskell.org/packages/search?terms=stdio> 検索結果にも出てこないみたいですが、なにかあったんですか？"
        },
        "messageTs": "1526888494.000033",
        "messageUser": null
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UACQ9J5D3> uploaded a file: <https://haskell-jp.slack.com/files/UACQ9J5D3/FAU2X6L22/image.png|image.png> and commented: Hmmm"
        },
        "messageTs": "1526888259.000241",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "皆さんおつよくて私もそうなりたいです・・・:open_mouth:\n（なんかVim対応はそもそもNeovimのtermopen関数を使ってターミナルでモニョモニョしていますし，いろいろとつらそうですね・・・）"
        },
        "messageTs": "1526827972.000025",
        "messageUser": {
            "unUserId": "UASNL3EUU"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あれ、僕ghcidになんかしたっけかな…多分すごい小さなことしかしてないですw\n（ghcidのneovimプラグインをVim対応させようかと思ったりもしましたが、neovimとVimの、job関数の引数に渡す文字列のエスケープ周りの差が違うのがめんどすぎて断念しました…）"
        },
        "messageTs": "1526822847.000054",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こんにちは、有難うございます！ neovim用ですか、なるほど。 とりあえず、まずは、ghcidを素で試してみます:+1:\n（ところで、ghcidって、aiyaさんもcontributorだったのですね:open_mouth:）"
        },
        "messageTs": "1526820558.000050",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "はじめまして。\n本日から参加させて頂いております。よろしくお願いいたします。\n<https://github.com/ndmitchell/ghcid/blob/master/plugins/nvim/ftplugin/haskell.vim#L7>\nこちらを見ますと、 `!has('nvim')` にて篩をかけて終了させておりますので、Neovim専用ということになるかと思います..."
        },
        "messageTs": "1526820054.000004",
        "messageUser": {
            "unUserId": "UASNL3EUU"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UASNL3EUU> has joined the channel"
        },
        "messageTs": "1526819057.000074",
        "messageUser": {
            "unUserId": "UASNL3EUU"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど頂きます！ ちなみに、neovimのプラグインは、素のvimの方では動かないneovim専用ですか？"
        },
        "messageTs": "1526817205.000061",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ghcidいいですよ！ neovimプラグインが同梱されているのでそれを使っていますが、便利です！"
        },
        "messageTs": "1526816966.000003",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "動画来ました！発表は英語なので、是非。\n<https://youtu.be/2J0fGMpFA_w>"
        },
        "messageTs": "1526809926.000074",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます、あとで修正します！"
        },
        "messageTs": "1526799169.000054",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KUNQF9N> ローディングメッセージの「《思わぬボトルネック(1)》Text.Prinfのprintfの遅さは想像を絶する。」、「Text.Printf」の誤字かと。"
        },
        "messageTs": "1526798906.000021",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ghcid、大絶賛されてますね。 シンプルそうですが、だいぶ実用的なのかな？ 一度試してみようかな、と。\n<https://pay.reddit.com/r/haskell/comments/8kn1x7/ghcid_for_the_win/>"
        },
        "messageTs": "1526788022.000001",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "中国はIT超先進国になった感じですね、すごいなぁ。 IoTに金融に、、、社会実証の速度が強烈そうですね。"
        },
        "messageTs": "1526787969.000012",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "プログラムに対するあらゆる知識がメチャメチャ深い方でした！中国版Uberの滴滴出行で働いてるようで、めちゃくちゃ忙しいらしく、当日夜には北京へ帰っていきました…"
        },
        "messageTs": "1526786856.000078",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "共有有難うございます！ 面白そうな内容ですね。\nwinterland1989さんって、ghc-proposalsとかでcontributeしてる人ですね:haskell:"
        },
        "messageTs": "1526730065.000025",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "本日、魔力Haskell作者の方が発表したPDFを許可を頂きましたので、共有させていただきます。"
        },
        "messageTs": "1526704537.000022",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U561MADLH> uploaded a file: <https://haskell-jp.slack.com/files/U561MADLH/FATP56JBH/libuv_based_io_manager.pdf.pdf|libuv based io manager.pdf> and commented: 深圳イベントで魔力Haskell作者の韓冬さん(<https://github.com/winterland1989>)が発表したPDFです。シェアの許可を頂きましたので共有致します。"
        },
        "messageTs": "1526704420.000045",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "大魔头ww"
        },
        "messageTs": "1526605133.000098",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "日本じゃなくてアレですが、中国深圳で関数型プログラムのイベントがあります。\nタイミングよく深圳におられましたら是非どうぞ。\n【イベント名】深圳函数式编程聚会\n【日程】2018年5月19日朝9:30〜\n【場所】深圳市福田区嘉里建設広場3座39階（嘉石大岩資本）\n【主催者微博】@Haskell中文 @阅千人而惜知己 @大魔头\n【QQグループ】72874436\n【登録はこちら】<https://jinshuju.net/f/9a72wh>"
        },
        "messageTs": "1526567260.000592",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UARA81QCB> has joined the channel"
        },
        "messageTs": "1526548342.000031",
        "messageUser": {
            "unUserId": "UARA81QCB"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://www.haskell.org/communities/05-2018/html/report.html> 今期もHaskell-jp :haskell-jp: の活動報告を出せました。"
        },
        "messageTs": "1526438368.000192",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すみません、今更ですが投稿先間違えてました。。。ここは <#C5666B6BB|questions> じゃない。。。"
        },
        "messageTs": "1526367186.000033",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAQSD7171> has joined the channel"
        },
        "messageTs": "1526365470.000097",
        "messageUser": {
            "unUserId": "UAQSD7171"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(⊆)関係のAPIをそのまま使えるようにRemoveやFilterを定義する問題、型レベルプログラミングの良い練習問題になりそう"
        },
        "messageTs": "1526354708.000122",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど。やっぱり <http://hackage.haskell.org/package/HList-0.5.0.0/docs/Data-HList-Dredge.html> では型クラス（と、FunctionalDependencies）でやってたことをまねすることになりそうですね。"
        },
        "messageTs": "1526352959.000084",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "この場合、型レベルリストから要素を取り除く型族Remove :: k -&gt; [k] -&gt; [k]を作ることからスタートになりますね"
        },
        "messageTs": "1526352766.000176",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "実行時には難しいですが、shrink などを使うと型の拡縮はできますけど…たしかに filter のようなものはなさそう…(fumi さんならもっとクールな回答をくれるかもだけど)"
        },
        "messageTs": "1526348276.000194",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "どうもextensibleにはhFilterみたいなものがないみたいなので参考にするためにほかのライブラリーを探しています。\n<http://hackage.haskell.org/package/HList-0.5.0.0/docs/Data-HList-Dredge.html> のあたり参考になるかな。。。"
        },
        "messageTs": "1526348067.000189",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あぁええと、ひとことでは説明しにくいんですけど、hfoldWithIndex って畳み込んだ結果の型が同じじゃないといけないんですが、nil と xx &lt;: nil は別の型なんですよ\nこれを解決するには一工夫必要でして…"
        },
        "messageTs": "1526346376.000081",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、上記のエラーが出たときですが、こう :point_down: 書き換えてました。\n```\nwithout :: (Include xs ys) =&gt; Membership xs x -&gt; (h :* xs) -&gt; (h :* ys)\nwithout k =\n  hfoldrWithIndex (\\l e r -&gt; if k == l then r else e &lt;: r) nil\n```"
        },
        "messageTs": "1526346042.000158",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`ys` が `[]` だったり要素が入っていたりすることが伝わっていないみたいですね。。。 :thinking_face:"
        },
        "messageTs": "1526345996.000284",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "うーん、やっぱり単純に制約をつけるだけではダメですね。。。\n\n```\napp\\Main.hs:37:3: error:\n    ? Could not deduce: ys ~ '[]\n      from the context: Include xs ys\n        bound by the type signature for:\n                   without :: forall (xs :: [*]) (ys :: [*]) x (h :: * -&gt; *).\n                              Include xs ys =&gt;\n                              Membership xs x -&gt; (h :* xs) -&gt; h :* ys\n        at app\\Main.hs:35:1-71\n      ‘ys’ is a rigid type variable bound by\n        the type signature for:\n          without :: forall (xs :: [*]) (ys :: [*]) x (h :: * -&gt; *).\n                     Include xs ys =&gt;\n                     Membership xs x -&gt; (h :* xs) -&gt; h :* ys\n        at app\\Main.hs:35:1-71\n      Expected type: (h :* xs) -&gt; h :* ys\n        Actual type: (h :* xs) -&gt; h :* '[]\n    ? In the expression:\n        hfoldrWithIndex (\\ l e r -&gt; if k == l then r else e &lt;: r) nil\n      In an equation for ‘without’:\n          without k\n            = hfoldrWithIndex (\\ l e r -&gt; if k == l then r else e &lt;: r) nil\n    ? Relevant bindings include\n        without :: Membership xs x -&gt; (h :* xs) -&gt; h :* ys\n          (bound at app\\Main.hs:36:1)\n   |\n37 |   hfoldrWithIndex (\\l e r -&gt; if k == l then r else e &lt;: r) nil\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\napp\\Main.hs:37:52: error:\n    ? Couldn't match type ‘'[x1]’ with ‘'[]’\n      Expected type: h :* '[]\n        Actual type: h :* '[x1]\n    ? In the expression: e &lt;: r\n      In the expression: if k == l then r else e &lt;: r\n      In the first argument of ‘hfoldrWithIndex’, namely\n        ‘(\\ l e r -&gt; if k == l then r else e &lt;: r)’\n    ? Relevant bindings include\n        e :: h x1 (bound at app\\Main.hs:37:23)\n        l :: Membership xs x1 (bound at app\\Main.hs:37:21)\n   |\n37 |   hfoldrWithIndex (\\l e r -&gt; if k == l then r else e &lt;: r) nil\n   |                                                    ^^^^^^\n```"
        },
        "messageTs": "1526345958.000212",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、そもそも難しそうだなぁ(笑)"
        },
        "messageTs": "1526345808.000197",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "手元でやってませんが `ys ⊆ xs` というのをつかえば行けると思います\n<https://hackage.haskell.org/package/extensible-0.4.9/docs/Data-Extensible-Inclusion.html#t:-8838->"
        },
        "messageTs": "1526345726.000170",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "extensibleの使い方について質問です。\n現在「レコードから指定したキーの要素を取り除いたレコードを返す関数」を作ることを目指して、こんな感じの関数を書いてみました。\n```\nwithout :: Membership xs x -&gt; (h :* xs) -&gt; (h :* ys)\nwithout k =\n  hfoldrWithIndex (\\i e r -&gt; if k == i then r else e &lt;: r) nil\n```\nしかし残念ながら `ys` と `xs` の関係をうまく推論できないのか、型エラーになってしまいます。\n型レベルプログラミング力が足りず、手詰まり気味です。\nよい方法を教えていただきたく！ :pray:"
        },
        "messageTs": "1526345560.000259",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KUNQF9N> commented on <@U4LGTMTMK>’s file <https://haskell-jp.slack.com/files/U4LGTMTMK/FANB4F4F2/image.png|image.png>: 修正しました！"
        },
        "messageTs": "1526307110.000284",
        "messageUser": null
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ghc8.4.3をリリースするかもしれないという話しが出ています。\nghc8.4.2が、Ubuntu 18.04LTS上の特定のケースにて、gnuのbinutils由来の不具合を踏むとのことです。\n（ｇｈｃのリリースポリシーからすると、こういう場合はリリースしないのが基本かもしれないけれども、今回はリリースする方向の雰囲気です。）\n\n<https://ghc.haskell.org/trac/ghc/ticket/15068>\n<https://pay.reddit.com/r/haskell/comments/8ic3c5/ghc_fatally_broken_on_ubuntu_1804_bionic_and/>\n<https://mail.haskell.org/pipermail/ghc-devops-group/2018-May/000186.html>"
        },
        "messageTs": "1526301134.000481",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> uploaded a file: <https://haskell-jp.slack.com/files/U4LGTMTMK/FANB4F4F2/image.png|image.png> and commented: <https://wiki.hask.moe/> の表示崩れです。\nChrome 66.0.3359.170 Windows 10にて。"
        },
        "messageTs": "1526267967.000169",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "会社のプロキシ配下から見られました！ :clap: \nが、ちょっと表示が崩れちゃってますね。。。\nスレッドのコメントでは画像の投稿ができないので別途送ります。"
        },
        "messageTs": "1526267886.000138",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "プロキシ越しでも見れました！"
        },
        "messageTs": "1526267699.000204",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAN607HTJ> has joined the channel"
        },
        "messageTs": "1526200542.000002",
        "messageUser": {
            "unUserId": "UAN607HTJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "extensible攻略WikiでTLSが使えるようになりました！多分これで繋がりやすくなったはず　<https://wiki.hask.moe>"
        },
        "messageTs": "1526124584.000008",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "FacebookがLondonにて募集です。 Simon MarlowさんのSigmaのチームのようですね。\n\n<https://pay.reddit.com/r/haskell/comments/8io3uk/job_work_on_ghc_at_facebook_london/>\n<https://www.facebook.com/careers/jobs/a0I1H00000MoVjBUAV/>\n<https://code.facebook.com/posts/745068642270222/fighting-spam-with-haskell>"
        },
        "messageTs": "1526084317.000139",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最近全然開発進めていないんですけどね"
        },
        "messageTs": "1526031872.000002",
        "messageUser": {
            "unUserId": "U4M5LDXK9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/cdepillabout/pretty-simple>"
        },
        "messageTs": "1526031833.000416",
        "messageUser": {
            "unUserId": "U4M5LDXK9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "pretty-simpleを入れてくれて嬉しいんですけど、確かに多すぎますね、、、"
        },
        "messageTs": "1526031803.000204",
        "messageUser": {
            "unUserId": "U4M5LDXK9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAN0A7XSP> has joined the channel"
        },
        "messageTs": "1526024669.000086",
        "messageUser": {
            "unUserId": "UAN0A7XSP"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "「文字列をプリティプリントするライブラリが多すぎる」　<https://www.reddit.com/r/haskell/comments/8ilw75/there_are_too_many_prettyprinting_libraries/>"
        },
        "messageTs": "1526023609.000317",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ソフトウェアでできないと思い込んでいたけど実はできたことってよくありますよね。\n思えばこういう書き方はできないと勝手に思い込んでました。。。 :sweat_smile: \n:notebook_with_decorative_cover: <https://github.com/tfausak/wuss/blob/b7cea207f42740eb706120929d66863d4f8ed299/library/Wuss.hs#L61>"
        },
        "messageTs": "1526021398.000283",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAMGYKUP5> has joined the channel"
        },
        "messageTs": "1525966423.000246",
        "messageUser": {
            "unUserId": "UAMGYKUP5"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Let's encryptしますか…"
        },
        "messageTs": "1525944736.000312",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "well known port であっても，wsだと思われると弾く組織内プロキシも見たことあります．websocket使うならwell known port(というか443)でwssで使うくらいの気合いが必要という印象です．他にも繋いだたけで何もしてないと切るプロキシとかもいるので ping frameとかも定期的にやるみたいな"
        },
        "messageTs": "1525929750.000189",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ああー、なるほど。well known portじゃないからってことですか。。。 :disappointed:"
        },
        "messageTs": "1525926671.000186",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "WebSocketがそもそも使えない場合もあるらしい…"
        },
        "messageTs": "1525924947.000107",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "リバースプロキシを通すとWebSocketでうまく通信できないという問題があって直接接続しているのですが、やっぱりそれがだめな環境も多いんですね…"
        },
        "messageTs": "1525924650.000157",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "実は私もそうなんですよねぇ。 :disappointed:"
        },
        "messageTs": "1525923632.000093",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "会社のプロキシからだと繋がらないようですが、スマートフォンから見られました！"
        },
        "messageTs": "1525923548.000124",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "攻略ww"
        },
        "messageTs": "1525921524.000115",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "apus (<https://github.com/fumieval/apus> Haskell製のリアルタイムなWiki)を使ってextensibleパッケージの攻略Wikiを立ち上げました。<@U5B3EGEFQ> さん、<@U56L7EVNY> さんの協力のおかげで急ピッチで内容が追加されています！<http://wiki.hask.moe/>"
        },
        "messageTs": "1525877001.000646",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAL6RLRU1> has joined the channel"
        },
        "messageTs": "1525858472.000429",
        "messageUser": {
            "unUserId": "UAL6RLRU1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "さっそくご対応いただき、参加グループ一覧にHaskell-jpが掲載されました！\n<https://www.ospn.jp/osc2018-do/>"
        },
        "messageTs": "1525850079.000238",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "わかりました、セミナーの様子とかをご紹介できればと思います！"
        },
        "messageTs": "1525846975.000246",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "細々とすみません <@U57DM8PBK> 活動記録としてSlack以外のところにも書いておきたいので、OSC Sapporo終了後でよいのでHaskell-jp Blogに記事を上げていただけるとありがたいです。 :bow:"
        },
        "messageTs": "1525846934.000060",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "申し込み完了しましたー"
        },
        "messageTs": "1525846545.000255",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうです！"
        },
        "messageTs": "1525846458.000006",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U57DM8PBK> 念のため把握しておきたいのですが、登録予定のイベントは <https://www.ospn.jp/osc2018-do/> のことですよね？"
        },
        "messageTs": "1525846443.000294",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ちなみに、<https://haskell.jp/blog/posts/2017/11-haskell-newbies-talks.html> で触れているとおり、\n「「Haskell-jp」としてはゆるめのつながりでありたい」ので特にメンバーのリストを作るつもりはないです。"
        },
        "messageTs": "1525846392.000263",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます！"
        },
        "messageTs": "1525839861.000021",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いいと思います！ただし、正式な表記は「Haskell-jp」と小文字にしているのでご注意ください！"
        },
        "messageTs": "1525839578.000065",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "であれば、 <@U4LGTMTMK> さんの了承を得た上で、 Haskell-JP を名乗るという案に個人的には :+1: です。"
        },
        "messageTs": "1525839206.000059",
        "messageUser": {
            "unUserId": "U4MAYDV9C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "申し込むときに「何の団体か」というのを記述する欄がありまして、そこに記述しておくとOSC公式サイトに団体名やURLが掲載されたりするのでせっかくなら個人枠ではなくHaskell-JP枠で出場した方が宣伝効果もあって良いかなと思いまして。"
        },
        "messageTs": "1525839139.000067",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "た、確かに..."
        },
        "messageTs": "1525839072.000105",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そう言われてみると、\n&gt; 日本におけるプログラミング言語Haskellの普及活動と、Haskellを利用する人々のサポートを行うグループです。\nと書かれている割には、具体的に誰がメンバーで、誰がサポートされてる側の人間なのか、というリストは特になさそうですよね（そんなものにこだわる意味はないと思ってますけど）。"
        },
        "messageTs": "1525839034.000196",
        "messageUser": {
            "unUserId": "U4MAYDV9C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今度のOSC北海道でHaskellハンズオン的なものをやってみようと思ったのですが、ここのメンバーであるという肩書きを使っても大丈夫でしょうか？"
        },
        "messageTs": "1525836534.000170",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございました．"
        },
        "messageTs": "1525611307.000082",
        "messageUser": {
            "unUserId": "UAEUE6AFM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAJV7LY8M> has joined the channel"
        },
        "messageTs": "1525491803.000036",
        "messageUser": {
            "unUserId": "UAJV7LY8M"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "同じ話題がこちらに <https://haskell-jp.slack.com/archives/C5666B6BB/p1524780637000404>"
        },
        "messageTs": "1525324316.000127",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そんなに凝ったことしないのであれば `optparse-generic` おすすめです\n\n<https://hackage.haskell.org/package/optparse-generic>"
        },
        "messageTs": "1525277792.000866",
        "messageUser": {
            "unUserId": "U5CSEFF7H"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskellプログラムにコマンドライン引数を持たせるためのライブラリのオススメってありますかね"
        },
        "messageTs": "1525275499.000642",
        "messageUser": {
            "unUserId": "UAEUE6AFM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://qiita.com/igrep/items/0f9a9610294fd7de453c>\n脚注にも書きましたがHaskeller向けの情報を付け加えますと、processパッケージの `callCommand` 関数や、typed-processパッケージの `shell` 関数は楽したいとき以外はやめろ、という話です。"
        },
        "messageTs": "1525174613.000019",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAG73SX6W> has joined the channel"
        },
        "messageTs": "1525150173.000104",
        "messageUser": {
            "unUserId": "UAG73SX6W"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAGHW564W> has joined the channel"
        },
        "messageTs": "1525090816.000325",
        "messageUser": {
            "unUserId": "UAGHW564W"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAEQ0S5JM> has joined the channel"
        },
        "messageTs": "1525004789.000091",
        "messageUser": {
            "unUserId": "UAEQ0S5JM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "conduit-1.3系統、わりと1.2と別物じゃねーか感"
        },
        "messageTs": "1524962643.000040",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAF68198D> has joined the channel"
        },
        "messageTs": "1524896638.000059",
        "messageUser": {
            "unUserId": "UAF68198D"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAEUE6AFM> has joined the channel"
        },
        "messageTs": "1524892487.000051",
        "messageUser": {
            "unUserId": "UAEUE6AFM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAECUV03X> has joined the channel"
        },
        "messageTs": "1524799278.000044",
        "messageUser": {
            "unUserId": "UAECUV03X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAD9XLW4U> has joined the channel"
        },
        "messageTs": "1524731652.000317",
        "messageUser": {
            "unUserId": "UAD9XLW4U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UACQ9J5D3> has joined the channel"
        },
        "messageTs": "1524632933.000010",
        "messageUser": {
            "unUserId": "UACQ9J5D3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UACKFF96W> has joined the channel"
        },
        "messageTs": "1524625950.000143",
        "messageUser": {
            "unUserId": "UACKFF96W"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UADFT2WQ6> has joined the channel"
        },
        "messageTs": "1524621683.000101",
        "messageUser": {
            "unUserId": "UADFT2WQ6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "（hlintに書いてあるようなことしか思いつかない）"
        },
        "messageTs": "1524562187.000194",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> pinned a message to this channel."
        },
        "messageTs": "1524561528.000009",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ゲームのロード画面みたいなノリで、Slackのロード画面にHaskellのTipsをいくつか追加してみました。いいのを思いついたらぜひ <https://haskell-jp.slack.com/customize/loading> に！"
        },
        "messageTs": "1524560458.000116",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://blog.eta-lang.org/eta-gsoc-2018-accepted-projects-63d31ecd3811>\nGSoCでacceptされたEta関係のプロジェクト。\nFiberでwarpの再実装を行ってみると言うことで興味深い :smirk:"
        },
        "messageTs": "1524523268.000137",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いえいえ、むしろ気づけずすみませんでしたw\nまたいつか！"
        },
        "messageTs": "1524395876.000049",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "チャンネルのアイコンが綺麗になった！"
        },
        "messageTs": "1524395834.000015",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すみません、メンションすべきでしたね…:cold_sweat:"
        },
        "messageTs": "1524395374.000060",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "まーじか、行けばよかった :sob:"
        },
        "messageTs": "1524390889.000079",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "き34にみんなおるで:grin:"
        },
        "messageTs": "1524368293.000035",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "igrepさんを見かけたのだけど、いつのまにかどこかへいってしまっていたっぽかった！"
        },
        "messageTs": "1524367324.000041",
        "messageUser": {
            "unUserId": "U5LV76EJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "余談ですが、DerivingViaの実装のための差分コードは、だいたい以下の付近です。\n\n<https://github.com/ghc/ghc/compare/master...RyanGlScott:deriving-via-8.5#files_bucket>"
        },
        "messageTs": "1524361271.000036",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> uploaded a file: <https://haskell-jp.slack.com/files/U4LGTMTMK/FABS0S5B8/img_20180422_101924251_burst001.jpg|IMG_20180422_101924251_BURST001.jpg> and commented: 技術書典なう"
        },
        "messageTs": "1524359997.000029",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ghc8.6のブランチが切られるまであと6週間しかないですが、DerivingVia拡張をghc8.6に間に合わせるみたいです。\nすごい腕力ですね:haskell:\n<https://mail.haskell.org/pipermail/ghc-devs/2018-April/015647.html>"
        },
        "messageTs": "1524311219.000009",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UAA7Q1QRX> has joined the channel"
        },
        "messageTs": "1524280420.000071",
        "messageUser": {
            "unUserId": "UAA7Q1QRX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "中国で翻訳されていましたので、ご紹介いたします。大学の教科書的なものでしょうか？自分には難しく、、、\n<https://softwarefoundations.cis.upenn.edu>\n中文版（まだ一巻だけ）\n<https://coq-zh.github.io/SF-zh/>"
        },
        "messageTs": "1524278286.000038",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> pinned a message to this channel."
        },
        "messageTs": "1524199197.000020",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "stackageのmirror source by 中国科学技術大学です。もし中国でGFWに悩まされた場合、ご活用下さい。\n<http://mirrors.ustc.edu.cn/help/stackage.html>"
        },
        "messageTs": "1524198040.000218",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA9U1TV8X> has joined the channel"
        },
        "messageTs": "1524053142.000456",
        "messageUser": {
            "unUserId": "UA9U1TV8X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA903N8Q5> has joined the channel"
        },
        "messageTs": "1524048414.000304",
        "messageUser": {
            "unUserId": "UA903N8Q5"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA94ER4R4> has joined the channel"
        },
        "messageTs": "1523974946.000863",
        "messageUser": {
            "unUserId": "UA94ER4R4"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "スライドも見つけました。\n<https://www.snoyman.com/reveal/async-exception-handling#/>"
        },
        "messageTs": "1523943687.000239",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "作ってみました。どんな人に届くか楽しみですね！\n<https://matcher.jp/plans/0025250>"
        },
        "messageTs": "1523921130.000158",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA85G230E> has joined the channel"
        },
        "messageTs": "1523862041.000192",
        "messageUser": {
            "unUserId": "UA85G230E"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "モナド変換子に関する課題を公開しました。興味のある方は是非やってみてください。\n<https://github.com/HirotoShioi/utxo-based-transaction>"
        },
        "messageTs": "1523796297.000063",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "FPcompleteがCardanoのコードを監査したレポートのようです。 読み込めてないですが面白そうです:haskell:\n<https://pay.reddit.com/r/haskell/>\n<https://www.cardano.org/en/cardano-audit-reports/>\n<https://dev-cardanoorg.pantheonsite.io/wp-content/uploads/2018/04/FP-Complete-Cardano-Report-12-April-2018.pdf>"
        },
        "messageTs": "1523760604.000094",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今日だけでQiitaにElmとHaskellの記事が合わせて4つも投稿されてる！"
        },
        "messageTs": "1523698113.000002",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA6J52JSY> has joined the channel"
        },
        "messageTs": "1523693767.000027",
        "messageUser": {
            "unUserId": "UA6J52JSY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hrkr さん、ありがとうございます！\n追加しました！！"
        },
        "messageTs": "1523678548.000034",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すみません、酷く遅いレスポンスになってしまいました。:bow:\n私も全く問題ないです。"
        },
        "messageTs": "1523626943.000164",
        "messageUser": {
            "unUserId": "U56MX93K7"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://www.fpcomplete.com/blog/how-to-handle-asynchronous-exceptions-in-haskell>\nyoutubeにでてました。"
        },
        "messageTs": "1523581561.000032",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA5KF64CS> has joined the channel"
        },
        "messageTs": "1523537264.000320",
        "messageUser": {
            "unUserId": "UA5KF64CS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA5JPLRH8> has joined the channel"
        },
        "messageTs": "1523534438.000453",
        "messageUser": {
            "unUserId": "UA5JPLRH8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA68LF694> has joined the channel"
        },
        "messageTs": "1523498649.000146",
        "messageUser": {
            "unUserId": "UA68LF694"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA4R8D6SD> has joined the channel"
        },
        "messageTs": "1523498268.000023",
        "messageUser": {
            "unUserId": "UA4R8D6SD"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA6CQEGR5> has joined the channel"
        },
        "messageTs": "1523494133.000141",
        "messageUser": {
            "unUserId": "UA6CQEGR5"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA59JLF98> has joined the channel"
        },
        "messageTs": "1523484436.000067",
        "messageUser": {
            "unUserId": "UA59JLF98"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(am 2:00 つらい... :cry: )"
        },
        "messageTs": "1523413817.000187",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今晩（4/12 am 2:00）zoomでSnoymanさんのwebinarがありますね。たのしみです。\n<https://www.fpcomplete.com/asynchronous-exception-handling-in-haskell>"
        },
        "messageTs": "1523412697.000058",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます。\nもう少し様子を見ます。"
        },
        "messageTs": "1523406108.000242",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "チャンネルの作成は特に制限していないので、作っちゃってください！ :gogo:"
        },
        "messageTs": "1523401366.000050",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<#CA5H65L2J|xmonad> があるといいかもしれないですね。自分もかれこれ8年くらい使い続けています。 <https://haskell-jp.slack.com/archives/C4LFB6DE0/p1523320413000242>\n追記：作りました。"
        },
        "messageTs": "1523367126.000728",
        "messageUser": {
            "unUserId": "U58BK72FL"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA4PSBSMU> has joined the channel"
        },
        "messageTs": "1523320312.000309",
        "messageUser": {
            "unUserId": "UA4PSBSMU"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA2SYG5LH> has joined the channel"
        },
        "messageTs": "1523274471.000216",
        "messageUser": {
            "unUserId": "UA2SYG5LH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "CI通すのに手こずった関係で思ったより遅くなってしまいましたが、予告通り解説記事も公開しました。\n<https://haskell.jp/blog/posts/2018/main-tester.html>"
        },
        "messageTs": "1523248900.000065",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ICFP 2018のHaskell Implementors Workshop (HIW) のkeynoteは、Etaを作っているRahul Muttineniのようですね。\n<https://icfp18.sigplan.org/track/hiw-2018-papers>\n\nICFP 2016のときは未だ、GHCVM（Etaになる前の名前）として、発表のうちの１つたったようなので、だいぶ進みましたね:haskell:\n<https://wiki.haskell.org/HaskellImplementorsWorkshop/2016>"
        },
        "messageTs": "1523063497.000018",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA1D0NZK6> has joined the channel"
        },
        "messageTs": "1522921848.000061",
        "messageUser": {
            "unUserId": "UA1D0NZK6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@UA2J5BXMM> has joined the channel"
        },
        "messageTs": "1522905385.000031",
        "messageUser": {
            "unUserId": "UA2J5BXMM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ツイッターで話題になってるけど、愛知県立大学は1年前期でHaskellを学ぶらしいです。\n<https://twitter.com/kotetttt/status/981509633087913985>\n先生の好みで選んだ気がする（そしてわかる）。"
        },
        "messageTs": "1522899604.000258",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "CIでテストするのを忘れるという失態を犯してしまいましたが、リリースしました。\n<https://hackage.haskell.org/package/main-tester>\nこれからHaskell-jp Blogに解説を書きます。"
        },
        "messageTs": "1522885120.000238",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "半年毎リリースになってからの正式なルールは把握していないのですが、\nこのPhabのやり取りをみると、（６つでなく）３つのサポートで良いようです。\n\n<https://phabricator.haskell.org/D4492>"
        },
        "messageTs": "1522758365.000157",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "型宣言のコロンは1個でよくね？という提案 <https://github.com/ghc-proposals/ghc-proposals/pull/118>"
        },
        "messageTs": "1522737040.000189",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Macネタ：たぶん最近の Xcode のバージョンアップで、リンク時の警告が出るようになったんですが、無視して問題なんでしょうか？\n<https://github.com/NixOS/nixpkgs/issues/25139>"
        },
        "messageTs": "1522724591.000182",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHCが半年に一回リリースされるようになったようですが、ライブラリの保守はどうすればいいんですかね？\nこれまで、メジャーバージョンを3つサポートするのが基本でしたが、これからどうなるのでしょうか？\n6つサポートするのかな？"
        },
        "messageTs": "1522718814.000160",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9YSSVB88> has joined the channel"
        },
        "messageTs": "1522660125.000037",
        "messageUser": {
            "unUserId": "U9YSSVB88"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9YLQC8QG> has joined the channel"
        },
        "messageTs": "1522587605.000074",
        "messageUser": {
            "unUserId": "U9YLQC8QG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Phyxさんにより、Windowsの最大パス長の制限対策が、ghc8.6にむけて実装されたようです。\n地道に働かれますね、、、\n<https://mail.haskell.org/pipermail/ghc-devs/2018-March/015556.html>\n<https://phabricator.haskell.org/rGHC4de585a5c1ac3edc2914cebcac1753b514051a89>"
        },
        "messageTs": "1522504760.000054",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9Z23SX61> has joined the channel"
        },
        "messageTs": "1522427371.000181",
        "messageUser": {
            "unUserId": "U9Z23SX61"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Etherum EVMのアセンブラの共有です。 Haskellをホスト言語にしたDSLです:haskell:\n  <https://github.com/takenobu-hs/haskell-ethereum-assembly>\n\n命令型のアセンブリ言語を、命令型風に力づくで書いたものです^^\n外部ライブラリの使用は少数で、GHC拡張は不使用です。"
        },
        "messageTs": "1522417573.000288",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9ZP1SYCX> has joined the channel"
        },
        "messageTs": "1522388683.000021",
        "messageUser": {
            "unUserId": "U9ZP1SYCX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Tweag I/O で技術者募集してる？\n<https://www.tweag.io/posts/2018-03-29-we-are-hiring-swe.html>"
        },
        "messageTs": "1522330132.000169",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9X31FSLR> has joined the channel"
        },
        "messageTs": "1522254156.000536",
        "messageUser": {
            "unUserId": "U9X31FSLR"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9XB88DU3> has joined the channel"
        },
        "messageTs": "1522236925.000283",
        "messageUser": {
            "unUserId": "U9XB88DU3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9WNR5V6D> has joined the channel"
        },
        "messageTs": "1522219353.000109",
        "messageUser": {
            "unUserId": "U9WNR5V6D"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9XHWQX7Z> has joined the channel"
        },
        "messageTs": "1522119736.000075",
        "messageUser": {
            "unUserId": "U9XHWQX7Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9W4FN2MR> has joined the channel"
        },
        "messageTs": "1522080582.000606",
        "messageUser": {
            "unUserId": "U9W4FN2MR"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskellとは関係ないですが、「なるほど」絵文字ってめっちゃ便利ですよね。。海外のSlackでは:white_check_mark:か:+1:か:ok:しかなくてリアクションに困ります。(「なるほど」とはニュアンスが微妙に違う）"
        },
        "messageTs": "1522064136.000466",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ぱっと Google Playを探した感じ\n日本版じゃなさそうなのは <https://play.google.com/store/apps/details?id=com.tencent.qqlite> ですね。。。惜しい。"
        },
        "messageTs": "1522054145.000035",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "QQはスマホアプリです。アイコンはペンギンです。アプリには日本版と中国版があって日本版は機能が制限されてたりするので、中国版がオススメです！が、日本のストアから落とせるか不明です…"
        },
        "messageTs": "1522053770.000152",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうです！wechatよりもqqの方が古いんですよ！"
        },
        "messageTs": "1522053557.000453",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://www.qq.com/> ですか？\nテンセントさんこんなのも出してたんですね！"
        },
        "messageTs": "1522053471.000006",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U561MADLH> uploaded a file: <https://haskell-jp.slack.com/files/U561MADLH/F9VUWV726/ios________________________________________.png|/Haskell函数式编程群> and commented: 1079人でした"
        },
        "messageTs": "1522053446.000304",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "中国のQQというSNSアプリ内の僕が知っているHaskellグループは1000人くらいメンバーがいます！因みに話の内容は僕の中国語及びHaskellのレベルがアレな為、ちゃんと追えてません、、、"
        },
        "messageTs": "1522053192.000142",
        "messageUser": {
            "unUserId": "U561MADLH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8X01G6FJ> has left the channel"
        },
        "messageTs": "1522035211.000208",
        "messageUser": {
            "unUserId": "U8X01G6FJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9WS5DSS3> has joined the channel"
        },
        "messageTs": "1522026915.000226",
        "messageUser": {
            "unUserId": "U9WS5DSS3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "kakkun さん、ありがとうございます :pray: \n追加しました :+1: \n(はてなブログってカテゴリー単位でフィードが取れるんですね)"
        },
        "messageTs": "1521984279.000018",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "有難うございますー:slightly_smiling_face:"
        },
        "messageTs": "1521977420.000024",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "大丈夫ですー <http://Haskell.jp|Haskell.jp> からのリンクのように Haskell タグを登録できればそれでー"
        },
        "messageTs": "1521966860.000061",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "男気ですな:slightly_smiling_face::haskell:"
        },
        "messageTs": "1521890188.000046",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ちなみに私はもうHaskellの記事は原則としてすべてHaskell-jp Blogに書くと決めているのでNo thank youです （聞いてない:sweat_smile:"
        },
        "messageTs": "1521885987.000066",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> pinned a message to this channel."
        },
        "messageTs": "1521885910.000035",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "takenobu.hs さん、わざわざ聞いてくれてありがとうございます :bow: \nfumieval さん、lotz さん、syocy さん、掲載許可ありがとうございます :pray: \n今から追加します :+1:"
        },
        "messageTs": "1521880344.000051",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "↑他の皆さんも、Antennaの探索対象に登録して良いブログなどをお持ちでしたら、matsubaraさんにわかるように連絡を是非どうぞ。\nちなみに、本家の洋物のPlanet Haskellでは、Haskell以外の記事も結構な頻度で流れているので、Haskell以外の記事が多いブログでも遠慮する必要はないと思います。 （全体でおしなべられるので、いい具合にHaskell的な一覧になると思います。）\n\n本家のPlanet Haskellはこんな感じです（Haskell以外の記事が交じる頻度は高いです。）。\n<https://planet.haskell.org/>"
        },
        "messageTs": "1521880023.000088",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "みなさん、ありがとうございます:pray:"
        },
        "messageTs": "1521879309.000069",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私も大丈夫です。"
        },
        "messageTs": "1521872705.000026",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "僕も大丈夫ですー！"
        },
        "messageTs": "1521866324.000060",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "有難うございます！:slightly_smiling_face:"
        },
        "messageTs": "1521864289.000084",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "もちろん良いですよ。減るものではないので"
        },
        "messageTs": "1521858858.000066",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hrkrさん、lotzさん、syocyさん、kakkun61さん、fumievalさんへ。\nmatsubara0507さんが作られている、Haskell Antennaの情報源に皆さんのサイトを登録させてもらっても良いですか？\n（趣旨がずれていれば、遠慮無くスルーor断ってくださいね。）\n\nAntennaについての話の背景や関連情報は以下になります。\n<https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1521429233000021>\n<https://haskell-jp.slack.com/archives/C5BAM1SJW/p1521615327000050>\n<https://haskell.jp/blog/posts/2018/renew-haskell-antenna.html>\n\nサイト情報は以下を参考にさせてもらいました。\n<https://haskell.jp/blog/posts/links.html>\n<https://matsubara0507.github.io/planet-haskell-jp-demo/sites>"
        },
        "messageTs": "1521858539.000072",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell の型システムをHaskellで表現する <http://web.cecs.pdx.edu/~mpj/thih/>"
        },
        "messageTs": "1521800222.000538",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9VSEUNH5> has joined the channel"
        },
        "messageTs": "1521780339.000112",
        "messageUser": {
            "unUserId": "U9VSEUNH5"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "回答がおそくなってすみません。僕のもQittaにある分だけで、あるものは自由に載せていただいていいです。とはいえ、いまこれを乗せてほしいというのはないです。あまり深く考えてなかったです。"
        },
        "messageTs": "1521773556.000005",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9U8B3LJV> has joined the channel"
        },
        "messageTs": "1521770938.000043",
        "messageUser": {
            "unUserId": "U9U8B3LJV"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "近いうちにPRを送ろうと思っています"
        },
        "messageTs": "1521676960.000033",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/composewell/streaming-benchmarks> のグラフにdrinkeryが追加される日は来るのでしょうか？"
        },
        "messageTs": "1521630442.000088",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "redditでストリーミングライブラリのベンチマークが話題になっていたので(<https://www.reddit.com/r/haskell/comments/85jgm5/say_hello_to_haskell_streaming_performance/>)、酒場をテーマにした新型のライブラリdrinkeryで殴り込みをかけてみました。pipesとほぼ同等、処理内容によってはstreamingやstreamlyを上回る速度が出ており満足　<https://github.com/fumieval/streaming-benchmarks>"
        },
        "messageTs": "1521628071.000253",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "パス名の比較は、実用プログラムにおける永遠の課題なので……"
        },
        "messageTs": "1521623015.000215",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうですね。\nそうします。"
        },
        "messageTs": "1521616591.000081",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "確かに、念の為に許可を取っておくのが本筋ではありますね。\n個別に聞いてみますか:slightly_smiling_face:"
        },
        "messageTs": "1521616433.000060",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "それもありっちゃアリなんですけど、ちゃんと了承を得た方がいいかなぁと思ってまして..."
        },
        "messageTs": "1521616121.000127",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell Anntenaすごく良いので、ここの相互リンク集の人のページは全部入れてしまってはどうでしょう。\n<https://haskell.jp/blog/posts/links.html>\n\n表示もコンパクトで一覧性が高くて非常に便利ですね！"
        },
        "messageTs": "1521615891.000195",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "等値比較は `equalFilePath` 使えばいいけど、 `HashMap` のキーにしてて、正しくハッシュを計算するのめっちゃ邪魔くさいな\npath に依存するか"
        },
        "messageTs": "1521610102.000059",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、僕のはQittaに投稿したのでしばらくすれば反映されると思います！お気遣いありがとうございます!"
        },
        "messageTs": "1521606651.000130",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "了解です！素早い回答ありがとうございます！"
        },
        "messageTs": "1521602006.000151",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U74KTAG0N> <@U7Z4F723Z> \nadd reaction ありがとうございます :man-bowing:\nお二人のウェブサイトはどちらでしょうか？\n探したんですけど、見つけることが出来ませんでした..."
        },
        "messageTs": "1521601922.000027",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4M4XHKB8> \nadd reaction ありがとうございます :man-bowing:\nHaskell Antenna に「チェシャ猫の消滅定理 」を追加しました！"
        },
        "messageTs": "1521601822.000073",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> pinned a message to this channel."
        },
        "messageTs": "1521600888.000104",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "この際なんで付け加えますと、Redditはコメントごとにtreeを分岐できますので、レビューしてもらうのであれば論点の分離に対応しやすいです。"
        },
        "messageTs": "1521600231.000121",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "たしかに、Reddit いいですね"
        },
        "messageTs": "1521600048.000118",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今のところ専用のチャンネルはないので、ここでやっちゃってください。（個人的にはRedditを推奨したいところですが）"
        },
        "messageTs": "1521600021.000202",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "自身のブログで投稿した記事を宣伝するチャンネルはありますか。(宣伝というよりレビューしてもらいたいのが本音ですが。。）"
        },
        "messageTs": "1521599228.000026",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`FilePath` が `String` の別名であることを忘れて `.\\\\dir/wrap.txt` と `dir/wrap.txt` の等値比較ではまってた"
        },
        "messageTs": "1521596527.000167",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9SQJH9C4> has joined the channel"
        },
        "messageTs": "1521550249.000184",
        "messageUser": {
            "unUserId": "U9SQJH9C4"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こないだの503ってこれの影響だったんですかね"
        },
        "messageTs": "1521522811.000099",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "生成し直している途中とか...?"
        },
        "messageTs": "1521503914.000001",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "この前redditで言われてたPRが通ったんですね。\nあ、でも完全にリニューアルしたわけじゃなさそう\n<http://hackage.haskell.org/package/text-1.2.3.0/docs/Data-Text.html>"
        },
        "messageTs": "1521502395.000356",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://hackage.haskell.org/> Hackageのデザイン変わりましたね！ :purple_heart:"
        },
        "messageTs": "1521497234.000395",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9SS2NKSA> has joined the channel"
        },
        "messageTs": "1521446403.000149",
        "messageUser": {
            "unUserId": "U9SS2NKSA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Planet Haskell みたいに、日本人 Haskeller のサイトをウォッチして更新を載せたいと考えているので、もし載せてもいいよという方が居ましたら、このメッセージに :ok_woman: してください(Planet Haskell に合わせて、Haskell 以外の記事を投稿してても大丈夫です。)。\nAtom か RSS2.0 の feed があれば追加できます。"
        },
        "messageTs": "1521429233.000021",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell の日本語情報を収集するページ、Haskell Antenna をリニューアルしました！\n<https://haskell.jp/antenna/>\n新 Antenna は Planet Haskell (<https://planet.haskell.org/>) をフィーチャーしています。\nlotz さんの旧 Antenna と比べて見た目も更新頻度も残念なのですが、ただの静的ファイルにしたので動作は速くなりました。"
        },
        "messageTs": "1521428951.000199",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、ちなみにスライドの最後の方で Haskell-jp の活動も宣伝しておきました。"
        },
        "messageTs": "1521377038.000078",
        "messageUser": {
            "unUserId": "U4M4XHKB8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "みなさんに RT してもらったおかげで CFP 通ったので、ScalaMatsuri 2018 で Haskell on JVM の話をしてきました。事後連絡になってしまいましたがありがとうございました。\n\n内容的には、前回の JJUG CCC 2017 Spring の発表（Frege/Eta の比較）とは若干目先を変えてみました。ターゲットを Eta に絞った代わりに `TypeFamilies` を使った継承関係の表現などちょっとだけ深めの解説を追加してあります。\n<https://speakerdeck.com/ytaka23/operation-haskell-plus-scala>"
        },
        "messageTs": "1521376724.000079",
        "messageUser": {
            "unUserId": "U4M4XHKB8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Stackage なら見れるんですね(そりゃそうか)"
        },
        "messageTs": "1521204758.000572",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "同じくですね"
        },
        "messageTs": "1521204712.000324",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あれ、Hackage が 503 ??"
        },
        "messageTs": "1521204681.000020",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なんでそんな世界平和から遠のきそうなことをするんですか…:sweat_smile:"
        },
        "messageTs": "1521194150.000138",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KUNQF9N>　ライバルと呼ばれるほど機能がないです！むしろextesibleのData.Extensible.Sumを真似しようと思っています :grin:"
        },
        "messageTs": "1521189833.000055",
        "messageUser": {
            "unUserId": "U4M5LDXK9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "またもやextensibleの競合ライブラリが…:bird::sweat_drops:"
        },
        "messageTs": "1521169989.000088",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そんなアッテは5末で終わってしまうようですね。\n<http://blog-jp.mercariatte.com/entry/atte_close>"
        },
        "messageTs": "1521169306.000162",
        "messageUser": {
            "unUserId": "U4MAYDV9C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "名前がすごいっすねw <https://github.com/cdepillabout/world-peace>"
        },
        "messageTs": "1521168399.000163",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9PPYU59T> has joined the channel"
        },
        "messageTs": "1521026071.000350",
        "messageUser": {
            "unUserId": "U9PPYU59T"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9P43MNN5> has joined the channel"
        },
        "messageTs": "1521026009.000030",
        "messageUser": {
            "unUserId": "U9P43MNN5"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こちらのページも役に立つと思います。　<http://write.flossmanuals.net/gsocstudentguide/writing-a-proposal/>"
        },
        "messageTs": "1520982922.000316",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell.orgも参加しているGoogle Summer of Codeで、参加する学生の応募が始まりました。期限は3/28 01:00 JSTなので遅れないように気をつけてください。\n現在のアイデアリストは <https://summer.haskell.org/ideas.html> で見られます。学生が自分でアイデアを応募することもできます。いずれの場合も、メンターと早めに連絡を取って計画を練っておくのが良いと思います。メンターの連絡先を知りたい場合は <mailto:committee@haskell.org|committee@haskell.org> に連絡するか、僕に連絡をして貰えれば取り次ぎます。\n<https://summerofcode.withgoogle.com/>"
        },
        "messageTs": "1520982851.000197",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell Report 2010を見てみたら、わざわざ仕様になってますね。 どういう経緯でしょうね。\n<https://www.haskell.org/onlinereport/haskell2010/haskellch5.html#x11-1000005.2>\n\nあと、exportリストについては、末尾に加えて、頭のカンマの話題もあるようです。\n<https://github.com/ghc-proposals/ghc-proposals/pull/87>"
        },
        "messageTs": "1520946036.000089",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いつも思うのですが、仕様の時点でなぜセミコロンにしなかったのでしょうね。"
        },
        "messageTs": "1520909041.000238",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "本日のちょっとした衝撃: ここ、ケツカンマ書いていいんだ。。。！\n<https://github.com/khibino/haskell-relational-record/blob/e78ef97dd0c6fa80154c4f8f2f67c812102e933b/relational-query-HDBC/src/Database/HDBC/Record/Insert.hs#L19>"
        },
        "messageTs": "1520908315.000206",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9PALRVN3> has joined the channel"
        },
        "messageTs": "1520854071.000295",
        "messageUser": {
            "unUserId": "U9PALRVN3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9N6H05K6> has joined the channel"
        },
        "messageTs": "1520846009.000431",
        "messageUser": {
            "unUserId": "U9N6H05K6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "blaze-builderが GHC 8.4 に対応したというのは勘違いでした。訂正します。orz"
        },
        "messageTs": "1520827534.000100",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "blaze-builderに依存しているのは気持ち悪いけど、型としては問題ない。"
        },
        "messageTs": "1520826304.000165",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "昔は気づいていたけど、最近忘れていたような気がする。"
        },
        "messageTs": "1520826283.000093",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ちなみに最近の blaze-builder は bytestring の `Builder` を export しているそうです。"
        },
        "messageTs": "1520826260.000016",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "blaze-builder が GHC 8.4 に対応しました。かなり幸せになりました。"
        },
        "messageTs": "1520826196.000153",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9NUV224E> has joined the channel"
        },
        "messageTs": "1520817203.000171",
        "messageUser": {
            "unUserId": "U9NUV224E"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9MV1480J> has joined the channel"
        },
        "messageTs": "1520757422.000084",
        "messageUser": {
            "unUserId": "U9MV1480J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9MS3T9J7> has joined the channel"
        },
        "messageTs": "1520757413.000064",
        "messageUser": {
            "unUserId": "U9MS3T9J7"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ghc8.4.1が落ち着いたということで、ghc-proposalsにて、\"Pending committee review\"状態の案件ラッシュですね:slightly_smiling_face:\nこれからはghcが半年毎リリースになって、ghc8.6の分岐は6月頃（本リリースの3ヶ月前）に切られるとのことなので、それまでに実装が間に合うものは、ghc.8.6に入りますね。\n\n<https://github.com/ghc-proposals/ghc-proposals/pulls?q=is%3Aopen+is%3Apr+sort%3Aupdated-desc+label%3A%22Pending+committee+review%22>"
        },
        "messageTs": "1520685992.000006",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど"
        },
        "messageTs": "1520665717.000034",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そういうPull requestを送っちゃってください！"
        },
        "messageTs": "1520664743.000086",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "完全に上書きしちゃって大丈夫でしょうか？"
        },
        "messageTs": "1520655793.000009",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "2でよいかと！"
        },
        "messageTs": "1520648514.000012",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "更新頻度は後でなんとかするとして、haskell-jp に置くとしたら\n\n1. haskell-jp/cipangu って感じの新しいリポジトリを作る\n2. haskell-jp/antenna を上書き\n3. haskell-jp/antenna2 や haskell-jp/new-antenna みたいな後継っぽい名前で新しく作る\n\nのどれかですかね？(ぼくはどれでもいいですけど)"
        },
        "messageTs": "1520643806.000006",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど～。やっぱみんな無料でやる技をいろいろ知ってるなー！"
        },
        "messageTs": "1520586279.000304",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "裏技っぽいですけど、やりようはありまして...\nGAS とか Heroku とか使って空コミットをリポジトリにすれば Travis を任意のタイミングで回せます..."
        },
        "messageTs": "1520586220.000120",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "更新頻度にどこまでこだわるかによりますけど、私個人のVPSでもできるかな。。。( <http://the.igreque.info|the.igreque.info> のホストに使っているやつです。Cent OS 6という古いやつなのがつらいですけど)"
        },
        "messageTs": "1520586125.000310",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最短で daily です"
        },
        "messageTs": "1520585962.000410",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "問題は更新頻度か。Travisのcronってどれぐらいの頻度で実行できるんでしょう。"
        },
        "messageTs": "1520585945.000424",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "良いと思います！\n今のAntenna、実質見れない状態なので:sweat_smile:"
        },
        "messageTs": "1520585869.000001",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いっそNew Antennaという位置づけでもいいのかな、と思ったりもしています :thinking_face: 。 <@U4KPPQW7K> さんどう思いますか？"
        },
        "messageTs": "1520585794.000341",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あと、仮に <http://Haskell.jp|Haskell.jp> の名前を貸してくれる場合には、載せるサイトはちゃんと各位に許可をとろうと考えてます。"
        },
        "messageTs": "1520585652.000424",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すごくどーでもいい話ですが、日本語記事って時点で Planet ではなくなってしまったんで、代わりに \nCipangu Haskell という名前を思いつきました :serval:"
        },
        "messageTs": "1520585595.000223",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "まぁこっちは本当にただの静的ファイルですからね :sweat_smile:"
        },
        "messageTs": "1520583406.000067",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "antennaより動作が軽量な分筋はいい気もしますけど :sweat_smile:"
        },
        "messageTs": "1520583229.000143",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "であればサブディレクトリのほうが簡単っぽいですね。"
        },
        "messageTs": "1520583194.000271",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "antenna との兼ね合いは.....まぁそうですね...."
        },
        "messageTs": "1520583180.000151",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(GitHub のリンクがリッチになってる...)"
        },
        "messageTs": "1520583160.000057",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "構成は基本的に Hakyll を利用した静的サイトと同じです。\n<https://github.com/matsubara0507/planet-haskell-jp-demo>\nHakyll と違ってマークダウンの代わりに sites.yaml という設定ファイルを基にいくつかの HTML ファイルと feed.xml を生成します。\nそして、(現状は) TravisCI を使って `gh-pages` ブランチに生成ファイルだけをプッシュしています。"
        },
        "messageTs": "1520583134.000236",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ただその場合、antennaとの兼ね合いが気になりますね。。。 :confused:"
        },
        "messageTs": "1520582614.000048",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "構成次第ですが、もしかしたらサブドメインのほうが楽かも。"
        },
        "messageTs": "1520582583.000249",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> pinned a message to this channel."
        },
        "messageTs": "1520582238.000128",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> \nこのページ、<http://haskell.jp|haskell.jp> のどこかにはやすことって可能ですか？\n<http://planet.haskell.jp|planet.haskell.jp> とか <http://haskell.jp/planet|haskell.jp/planet> とか\n(日本語限定って時点で planet か？？って気はしますが...)"
        },
        "messageTs": "1520579913.000244",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今張ったやつは、とりあえずのデモ版って気持ちで、試しに Haskell-jp ブログと相互リンクしてるブログ(のうち feed があったもの)を集めています。\n<https://haskell.jp/blog/posts/links.html>\n\nAtom か RSS2.0 のフィードさえあればすぐ増やせます。"
        },
        "messageTs": "1520569895.000218",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "個人ブログが中心（しかない？）のはなんでなんすか？"
        },
        "messageTs": "1520569630.000152",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(Haskell Antenna と大分コンセプトが被るんですが)\n知り合いと「Planet Haskell の日本語版が欲しいね」という話になったので作ってみました。\n見た目はかなり適当ですが…\n<https://matsubara0507.github.io/planet-haskell-jp-demo/>\n\nTravis で cron を日に一度回してるだけなのでリアルタイムせいはないです…"
        },
        "messageTs": "1520569022.000066",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "だいぶ旬はすぎてますが、fayでtypescriptが出力できるようになりました。\n<https://github.com/faylang/fay/blob/master/src/main/Main.hs#L140>\nこれでffiでaws-sdkのapiを使ってもTypeScriptで型チェックされるはず。"
        },
        "messageTs": "1520562880.000103",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "wai から blaze-builder を切り離したいのだけれど、作業量が多過ぎてやる気が出ない。"
        },
        "messageTs": "1520555991.000255",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "blaze-builderに依存しているパッケージは全滅です。"
        },
        "messageTs": "1520555971.000115",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "semiringの嵐がやって来ましたね。"
        },
        "messageTs": "1520555958.000265",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hWaitForInputは直った？\n<https://ghc.haskell.org/trac/ghc/ticket/8684>\n"
        },
        "messageTs": "1520554139.000307",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "出ましたね！結局RCとかalpha版のうちに触れなかった。。。<https://www.reddit.com/r/haskell_jp/comments/831fng/blog_ghc_841_released/>"
        },
        "messageTs": "1520547278.000274",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、hackage の方で見れるのか\nありがとうございます。\n<https://hackage.haskell.org/package/extensible-0.4.8/changelog>"
        },
        "messageTs": "1520493871.000237",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "一応CHANGELOGに書いてあります。"
        },
        "messageTs": "1520493701.000265",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(割とどうでもいい)ぼくが作った package でつっかかって stackage の方が更新されてないんですよ...すいません...\n概ね修正して stack に報告しようと思ってたんですけど、0.4.8 が来てて...\n0.4.7.2 - 0.4.8 間のchange log ってどこかで見れないですかね？"
        },
        "messageTs": "1520493643.000109",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://hackage.haskell.org/package/extensible> 拡張可能な概念を実装するライブラリextensibleの新しいバージョンをリリースしました。最近aesonとcassavaのインスタンスが入ったので、JSONおよびCSVと簡単に相互変換できるようになりました"
        },
        "messageTs": "1520493426.000220",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC 8.4 で、Semigroupの*エラー*が出るのは、*警告*フラグの問題ではなく、SemigroupがMonoidのスーパークラスになったからだそう。なので、警告に関するドキュメントに変更がないのは正しい。Proposalの文面は更新されてなくて信用できない。はぁ。Blog を書き換えておきます。"
        },
        "messageTs": "1520474635.000219",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "MonadFail proposal は、想定通りには進んでいないので、今は気にしなくていい模様。Proposal の内容は信じないこと。"
        },
        "messageTs": "1520474499.000267",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Semigroup (as superclass of) Monoid Proposal に引っかかっていた hashable ですが、本日対応版が出たので、GHC 8.4 環境がかなり平和になりました。"
        },
        "messageTs": "1520473311.000233",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9J904EMR> has joined the channel"
        },
        "messageTs": "1520215835.000134",
        "messageUser": {
            "unUserId": "U9J904EMR"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "応募ないやろうと企画立ててみたら1日経たずに応募があってあたふた準備している <https://offer.mercariatte.com/jp/7717353600518203/>"
        },
        "messageTs": "1520208265.000062",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ついにinline-rust、の予告。（Redditのフォローコメントからです）\n<https://github.com/harpocrates/inline-rust>\n\nここが情報元。\n<https://pay.reddit.com/r/haskell/comments/81vrbk/ann_languagerust/>\n\n余談。 その他のinlineシリーズ。 C、R、Java、x86アセンブラ。\n<https://hackage.haskell.org/package/inline-c>\n<https://hackage.haskell.org/package/inline-r>\n<https://hackage.haskell.org/package/inline-java>\n<http://qiita.com/tanakh/items/08c15f6e72dbe2da61a8>"
        },
        "messageTs": "1520149637.000006",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/lwm/tasty-discover/blob/master/CHANGELOG.md>\nmerge されたっぽいので tasty-discover-4.2.0 から SmallCheck のテストもキャッチアップされるようになりました。 stackage-LTS はまだ更新されないので今利用する場合は `stack.yaml` に直接書いてクリーンビルドすれば良いです"
        },
        "messageTs": "1520116825.000002",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "っていうか明らかに実装漏れだったのでPR投げた <https://github.com/lwm/tasty-discover/pull/141>"
        },
        "messageTs": "1520045402.000130",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "tasty-discover , SmallCheck のテストをジェネレートしてなかったので issue で報告しました <https://github.com/lwm/tasty-discover/issues/140>"
        },
        "messageTs": "1520042667.000017",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "直接Haskellではないのですが、これからHaskellをフロントエンドとしてDAppas/Smart contractsにからむ人もいるかもしれませんので、ここでも共有しておきます。（Cardano等の理解の足しにもなるかもしれません:slightly_smiling_face:）\nEthereumの仮想マシン(EVM)関連のイメージ図集です。\n<https://www.reddit.com/r/ethdev/comments/81clg4/ethereum_evm_illustrated/>\n<http://takenobu-hs.github.io/downloads/ethereum_evm_illustrated.pdf>"
        },
        "messageTs": "1520041501.000144",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9J1VU1V3> has joined the channel"
        },
        "messageTs": "1520028061.000320",
        "messageUser": {
            "unUserId": "U9J1VU1V3"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7V6G63LJ> has left the channel"
        },
        "messageTs": "1520006393.000329",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "デフォでリストアップされてなくて自分もしばらく気づかなかった気がします"
        },
        "messageTs": "1519967505.000148",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "補足ありがとうございます。cabal new-buildメインでstackサブなユーザなので知りませんでした。"
        },
        "messageTs": "1519958841.000176",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "この issue がきっかけですかね？\n<https://github.com/commercialhaskell/stack/issues/259>"
        },
        "messageTs": "1519958838.000115",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "技術書典で出すしか"
        },
        "messageTs": "1519958662.000224",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "っていうか `makeBaseFunctor` やばい"
        },
        "messageTs": "1519958591.000051",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://blog.sumtypeofway.com/recursion-schemes-part-41-2-better-living-through-base-functors/>\n今更ながらcatamorphism/anamorphism入門したレベルなんですけど、この手の再帰の話だけで日本語の書籍欲しくなっちゃいますね"
        },
        "messageTs": "1519958565.000177",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "1 . `stack new` で新規プロジェクト作るとベースはhpackでパッケージを作るようになってる\n2. hpack の package.yaml から生成された .cabal ファイルを直接編集すると、今度は `stack build` 時に警告を出すようになった\n3. 1-2 の観点から、今はともかく今後の方向的にstackはできるだけユーザーにはcabalをダイレクトに編集しないで欲しいのかなーって思ったので質問してみた感じです"
        },
        "messageTs": "1519958318.000027",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "場所知らなかった…"
        },
        "messageTs": "1519958129.000119",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほどサボれるところがあるんですね。ありがとうございます。"
        },
        "messageTs": "1519955476.000095",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "みんななんで急に <#C5666B6BB|questions> 使わなくなったんですか…。いや <#C4M4TT8JJ|random> で質問するなとは言いませんけど…"
        },
        "messageTs": "1519955310.000202",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "npmと間違えそうな名前ですし"
        },
        "messageTs": "1519905671.000446",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "読んでみましたが、魅力が、わからない\n<http://typeful.net/talks/hpack/#1>\n"
        },
        "messageTs": "1519905647.000285",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC のバージョンはそうですが。"
        },
        "messageTs": "1519903440.000023",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/VersionHistory>"
        },
        "messageTs": "1519903428.000187",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そんなことはないです。"
        },
        "messageTs": "1519903427.000060",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "base のバージョンって Linux みたいな偶数奇数で安定版開発版になってるんですか？"
        },
        "messageTs": "1519903200.000224",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "common stanza は知らなかったのでなんとも言えませんが、何回も書いてるところ共通化できます。\nbuild-depends とか。\nあとは、expose-modules と othor-modules をサボれる。"
        },
        "messageTs": "1519899156.000240",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "個人的にはhpackに魅力をあまり感じないのですが、何がいいのですか？cabalももうすぐcommon stanzaが入るので些細な構文の違いでしかないような。"
        },
        "messageTs": "1519897595.000005",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "herokuappの方からコピペする事で移行できましたわ"
        },
        "messageTs": "1519895662.000411",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "↑なら clone して build できましたよ\n(windows ですけど)"
        },
        "messageTs": "1519895601.000380",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こっちのフォークならビルドできるかもしれない\n<https://github.com/kindaro/hpack-convert>"
        },
        "messageTs": "1519895098.000069",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hpack-convert はメンテやめてるっぽいですね...\n<https://github.com/yamadapc/hpack-convert>\n去年の1月でコミットやめてるし"
        },
        "messageTs": "1519894952.000069",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hpackは入ったけど、hpack-convertが入らないので移行に頓挫してる"
        },
        "messageTs": "1519894897.000279",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これ、hpack-convertは今のところstack 経由でインストールしようとしちゃダメな状態なのかな"
        },
        "messageTs": "1519894367.000461",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "自分の環境だとhpackビルド失敗しますね…"
        },
        "messageTs": "1519894197.000282",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "自分が困るまでは hpack キャッチアップしなくていいかなと静観してます"
        },
        "messageTs": "1519894133.000437",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hpack でまだサポートされてない構文を使う以外は、package.yaml でいいんじゃないですかね"
        },
        "messageTs": "1519893140.000285",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "もう .cabal って直接書かない方が良い感じなんですか"
        },
        "messageTs": "1519892575.000065",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`-Wall` に加えて `-Wcompat` を付けておくと、将来のバージョンで表示される警告を今のGHCのバージョンでも発生させられるんですね。"
        },
        "messageTs": "1519888645.000061",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/>\n最近見たこの記事がVoQnさんがおっしゃった事と同じ発言をしているのが面白いですね。\n曰く「Haskellは私に正しい事を正しい方法で妥協無くやらせようとする」「最大の弱点は試してみようと私を誘惑することである」\n私も積極的な書き換えによって輝く言語だと首肯するものの、生産性を落とすことにも繋がるので使い手の精神も試されているかもしれませんｗ"
        },
        "messageTs": "1519886484.000030",
        "messageUser": {
            "unUserId": "U5P0CRDSP"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://prime.haskell.org/wiki/Libraries/Proposals>"
        },
        "messageTs": "1519883490.000169",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これからも、いろいろ大変そうだね。&gt; Proposals"
        },
        "messageTs": "1519883489.000183",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Hello. I am slacknowledge bot.\nWhen a thread is added a :memo: (memo) reaction, I will save it.\nEveryone can view the saved thread at <https://slacknowledge.pig-brewing.com> ."
        },
        "messageTs": "1519866732.000125",
        "messageUser": {
            "unUserId": "U8HK4CEVB"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8HK4CEVB> has joined the channel"
        },
        "messageTs": "1519866732.000070",
        "messageUser": {
            "unUserId": "U8HK4CEVB"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今できることはそれぐらいしかないので…\n取り急ぎ私からも再度お願いしました \n<https://twitter.com/igrep/status/969016207432040449?s=19>"
        },
        "messageTs": "1519866689.000246",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "気が向いたらでいいのでTwitterで突っついといて頂けると助かります:pray:"
        },
        "messageTs": "1519866293.000121",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "知らなかった……\n<https://twitter.com/masahiro_sakai/status/968861617038360576>"
        },
        "messageTs": "1519829703.000554",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど、ListStoreの方は使いにくそうですね"
        },
        "messageTs": "1519822511.000076",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "gi-gtk の ListStore は gobject-introspection そのままなので、格納する値は GValue にする必要がありますが、\n一方、gi-gtk-hs の SeqStore だと Haskell の任意の型を入れられるという感じですかね？"
        },
        "messageTs": "1519809862.000390",
        "messageUser": {
            "unUserId": "U4KNX1LQ0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "インスタンスのメソッドが未定義でも警告で済まされてしまうせいで二度も足止めを食らってしまった… :hole: <https://hackage.haskell.org/package/exceptions-0.9.0/docs/Control-Monad-Catch.html#v:generalBracket>"
        },
        "messageTs": "1519799513.000006",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "gi-gtkにListStoreがあってgi-gtk-hsにはSeqStoreというgtk2hsのListStoreのコピーがあるんですね。どう違うのでしょうか。"
        },
        "messageTs": "1519763746.000311",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私も最近 gi-gtk に移行したのですが、ListStore まわりの移植でちょっとハマったくらいですかね (gi-gtk-hs を知らなかった)"
        },
        "messageTs": "1519730689.000410",
        "messageUser": {
            "unUserId": "U4KNX1LQ0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうですねえ、まずサンプルプログラムで違いを理解してから移植に取り組んだのですが、それほど大きな違いはなかったと思います。依存パッケージは増えますが、新しいHeaderBarなどを使いたかったのでgtk-giにしました。しかしgtk2hsも開発続いていたんですね（今知りました）。"
        },
        "messageTs": "1519726455.000317",
        "messageUser": {
            "unUserId": "U90FHSDFG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "特にハマったところもない感じでしょうか。依存関係にxml-conduitが入っていて、conduit周りの依存を引っ張ってきてしまうのも気になるところです。"
        },
        "messageTs": "1519723895.000125",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "一度だけgtk2hsからgi-gtkに書き直したことがあります。\ncairo周りの変更への追従もあり、色々と修正が必要でしたが、使えない機能（ウィジェット）がないのはよいと思いました。"
        },
        "messageTs": "1519722242.000325",
        "messageUser": {
            "unUserId": "U90FHSDFG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9FAYSN12> has joined the channel"
        },
        "messageTs": "1519720430.000295",
        "messageUser": {
            "unUserId": "U9FAYSN12"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "gtk2hsではなくてgi-gtkを使ったことがある人はいますか？gtk2hsはAPIに抜けがあったり公式に新しいアプリでは非推奨と書いてあるんですが、既存のアプリをポートする価値があるかなと検討してます。"
        },
        "messageTs": "1519716338.000201",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://slackarchive.io|slackarchive.io> の収集がなんか止まってるように見えますね\n<https://haskell-jp.slackarchive.io>"
        },
        "messageTs": "1519692370.000090",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なんか早口のオタクみたいになってしまった。"
        },
        "messageTs": "1519647784.000258",
        "messageUser": {
            "unUserId": "U4M4XHKB8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4M598NHM> Frege と Eta は Haskell と言ってしまってよいでしょう。両者とも Haskell 2010 準拠を謳って（少なくとも目指しては）います。Eta はさらに GHC7 相当の拡張を載せることで既存の Hackage ライブラリを再利用可能にしている、という点が Frege に対するアドバンテージです。C-FFI を使っているライブラリはそのままでは動かせないので、パッチを当てるための仕組みがあります。\n\nコードベースに関して言うなら、Frege は GHC とは別系統です（そもそも当初は JVM 言語ですらなく v1 は Perl 実装だった）。Eta は GHC のフォークで、STG 生成までは GHC と同じコードを使います。ちなみにビルドツール Etlas も Cabal のフォークです。"
        },
        "messageTs": "1519647741.000338",
        "messageUser": {
            "unUserId": "U4M4XHKB8"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ああ、すみません、熱に浮かされていたせいかいろいろど忘れしてました…:sweat_smile:"
        },
        "messageTs": "1519645917.000165",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "JVM系で言うと、Eta は GHC を使ってるので Haskell そのものと十分言える。Frege は Haskell 2010 を参考にしている部分が多いが GHC を使っておらず Haskell 完全準拠ではないはずなので Haskell 系の別言語と言えそう。（このあたり <@U4M4XHKB8> さんが詳しいはず…）"
        },
        "messageTs": "1519644552.000106",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ML系とHaskell違くない？"
        },
        "messageTs": "1519643881.000275",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ml系"
        },
        "messageTs": "1519642184.000391",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "JVM で動く Eta とか"
        },
        "messageTs": "1519638672.000073",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "haskell実装だとlunaとかも"
        },
        "messageTs": "1519637509.000379",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "定義によるが Haste は Haskell 風言語ではなく Haskell そのものと言えそう。"
        },
        "messageTs": "1519635239.000391",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Curry というのがあった\n<https://en.wikipedia.org/wiki/Curry_(programming_language)>"
        },
        "messageTs": "1519633742.000122",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Fay, Haste, Royなどがありますが皆まだ生きてるのかは知らない…"
        },
        "messageTs": "1519633681.000154",
        "messageUser": {
            "unUserId": "U57CUMWQ6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Agda とか Idris とか？"
        },
        "messageTs": "1519633609.000064",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なにがありましたっけ？「Haskell風の別の言語」というとPureScriptやElmが思い浮かびますが、それ以外があまり出てこない… Ivoryとか？ <https://twitter.com/qnighy/status/967959302118895616?s=09>"
        },
        "messageTs": "1519633041.000110",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9EBE6ELT> has joined the channel"
        },
        "messageTs": "1519561156.000006",
        "messageUser": {
            "unUserId": "U9EBE6ELT"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9D4PL91N> has joined the channel"
        },
        "messageTs": "1519390651.000303",
        "messageUser": {
            "unUserId": "U9D4PL91N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "HPCでテストのカバレッジを取る時、deriving で導出した部分は（特にderiving (Eq, Show, Ord, Typeable) あたり）は除外したいって思ってしまうのですが、みなさんどうしてるんだろ"
        },
        "messageTs": "1519227767.000810",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4L0B71L1> 多分， <#C8KBGEBR7|code-review> の方がいいと思うので，そっち行きますね"
        },
        "messageTs": "1519039514.000199",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "話がちょっとそれて、cofree が何か知らないんですが、この ↓ AST って cofree 使ってるんですかね\nこの PDF 読みながら実装してるんですが <http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf>\n<https://github.com/kakkun61/liquoh/blob/0eea3ea99e480f11e419febeac476fc3caa32d07/src/Text/Liquoh/Interpreter/Expression.hs>"
        },
        "messageTs": "1519027141.000214",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9C56J90X> has joined the channel"
        },
        "messageTs": "1519026160.000054",
        "messageUser": {
            "unUserId": "U9C56J90X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "3/19（月）にオープンハウスがありますので、興味のある方は是非〜\n<https://preferred-networks.connpass.com/event/79219/>"
        },
        "messageTs": "1519011331.000030",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "たぶん実行時表現まで（本当はAstそのもの使いたい）そうしたがってしまうのはLispっ子ゆえの悪癖かもしれない…"
        },
        "messageTs": "1518665584.000122",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ASTでcofree annotationを使ったことはあるんですが，実行時表現をそれで作るのはあまりやったことなかったです．\n(個人的にFixの辛いとこは，type synonymを使わなきゃいけないのも合わさって，型エラーがやばいことになるとこだと思ってるので，素直にannotation変数追加してDeriveFunctor使っちゃうことも多いです)"
        },
        "messageTs": "1518664859.000073",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ついでに、この手のテクニックって結構紹介されていて、　<https://stackoverflow.com/questions/38462563/how-to-work-with-ast-with-cofree-annotation>\n\nekmett さんのライブラリでも Fix-Functor の組み合わせでTHのライブラリ作っていたりします\n<https://github.com/ekmett/recursion-schemes/pull/23>"
        },
        "messageTs": "1518664618.000112",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます、確かにそうだった。後で試してみます"
        },
        "messageTs": "1518664498.000109",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "!!"
        },
        "messageTs": "1518664398.000014",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "印象としては，Func fというデータで関数fは注釈情報を受け取ることは想定してないように見えるんですが，想定してるんですかね？想定してるなら，確かにうまくなんとかしたい感じはあるんですが，想定してないなら\n```\n  ...\n  | Func ([Val] -&gt; Either Error Val)\n\napply (Func f) args = &lt;argsから注釈抜いて[Val]に変換したのを適用する&gt;\n```\nみたいなんが正しそうな気がするんですよね"
        },
        "messageTs": "1518664011.000114",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ValFに、「何も注釈つけてない版」でテストを書いて、AstからValFに変換する時にはシンボルの位置情報をつけたり、型推論の結果を注釈側に足したり、って言う風にしたかったんです。もちろん素朴にValの構造をコピペして `LocatedVal` とか `TypedVal` とかを作っても同様の事が出来はするんですが、ボイラープレートの山が出来るし…"
        },
        "messageTs": "1518663785.000133",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あー分かりました．ListがFunAppなんですね(Lisp脳じゃなかった)．evalのシステムはFunctorなくても実装できそうな気がするんですが，ValFに関して何かトラバースがしたい感じなんでしょうか？"
        },
        "messageTs": "1518663367.000139",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "うーん，それは，\n```\ntype Val = Fix ValF\neval :: Val -&gt; Either Error Val\n...\neval (FunApp name xs) = buildinf name xs\n```\nみたいな実装になる気がしたのですが(ビルトインをeval時に埋め込むなら)，Funはどういう感じの実装になるんでしょう？(ちょっと察しが悪くてすいません)"
        },
        "messageTs": "1518663231.000031",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Defining_Scheme_Functions>\nこっちの方が近いかもです。この例の `LispVal` のように、関数をメンバーに持たせて、apply の型を `Val -&gt; [Val] -&gt; Either Error Val` という風にしたかった"
        },
        "messageTs": "1518663227.000179",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ここの “Adding basic primitives” の項に書いてあるような感じ <https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Evaluation,_Part_1>"
        },
        "messageTs": "1518662933.000070",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`Func` はhaskellの方で実装しているビルトイン関数本体を渡すように考えていて eval する時にそれを適用させてインタプリタを実装する、という目論見でした。"
        },
        "messageTs": "1518662820.000206",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "更にコレを `newtype Fix f = Fix (f (Fix f))` でラップすると、外側から中に注釈を差し込めるっていう感じです"
        },
        "messageTs": "1518662627.000001",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`Func` の型の意味がよく分かってないんですが， `([a], Either Error a)` ではなくて関数型なんです？"
        },
        "messageTs": "1518662602.000163",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "aはアノテーションにして，型情報とかを入れたい感じですか？"
        },
        "messageTs": "1518662486.000122",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ああ、説明が足りませんでした。\n構文木を評価した結果の型を以下のようにして、型の構造はシンプルなままにして外側から注釈をつけられるような Functor として扱えないかなって取り組んでみたのです\n\n```hs\ndata ValF a\n  = Unit\n  | Bool    Bool\n  | Integer Integer\n  | List    [a]\n  | Func ([a] -&gt; Either Error a)\n```\nビルトインの関数やラムダ式を `Func`   にあてがう用途に足したのですが、この時点でFunctorの導出は出来ないなって気づいて"
        },
        "messageTs": "1518662343.000172",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`newtype Foo e a = Foo([a] -&gt; Either e a)` したときに `fmap :: (a -&gt; b) -&gt; Foo e a -&gt; Foo e b` と考えてやると何らかの方法で `[b] -&gt; Either e b` な関数を作る必要がありますが、 `[b]` を `[a]` に変換して `[a] -&gt; Either e a` に渡す方法が無いので無理な気がします（圏論わからないけど多分mizunashi様の言っていることと同じ）"
        },
        "messageTs": "1518662056.000020",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ちょっとあまりやりたいことがよく分かってませんが，negative positionがなんらかのfunctorであるのを保ったままということなら，多分無理だと思いますね．\n<https://hackage.haskell.org/package/bifunctors-5.5/docs/Data-Bifunctor-Biff.html#t:Biff> において pがProfならBiff p f gはどうしてもProfになってしまうので"
        },
        "messageTs": "1518661859.000201",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`[a] -&gt; Either e a` って関数の型をFunctorにする術ってあるのだろうか…"
        },
        "messageTs": "1518659662.000031",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "AstをFunctorとして、Fixコンビネータと組み合わせてめっちゃ柔軟に取り回せるところまでは良かったんですが、Ast -&gt; Env -&gt; Val の Val の型構成子に「組み込み関数およびユーザー定義関数」の実態が入る為に Functor に出来ないってところで詰まりました"
        },
        "messageTs": "1518659509.000074",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "空文字列の件は確かに 動機足しておこう"
        },
        "messageTs": "1518601057.000337",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "自分の利用には困らないので気長に待ってみます"
        },
        "messageTs": "1518600983.000284",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ただ、ちょっと気になったんですが、\n部外者ながら指摘しますと、\n<https://github.com/projectorhq/haskell-liquid/pull/6/files#diff-2d0936a8864887eabbf384ad52ad12da>\nの修正前のとおり、テストでわざわざ「空文字列の場合は失敗とする」と明記しているのにそれを修正すると言うことは、それなりの動機を description などに書いた方がいいんじゃないかと思います。\nその方が説得力があるかと。"
        },
        "messageTs": "1518599656.000400",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "3日ぐらいならよくありますよ。"
        },
        "messageTs": "1518599064.000043",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こんな状況でも、くじけてはダメ。"
        },
        "messageTs": "1518599003.000130",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/vincenthz/hs-tls/issues/264>"
        },
        "messageTs": "1518598993.000258",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "一週間ぐらいたったら ping を打つとよいです。"
        },
        "messageTs": "1518598961.000316",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "3日前に PR 投げたけど音沙汰がない……\nメンテする気ないかな <https://github.com/projectorhq/haskell-liquid/pulls>"
        },
        "messageTs": "1518598749.000377",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Suggestion: Reduce duplicationはコピペに対する抑止力になるので重宝してるんですが、ただfactor outしたところで「これにどんな名前をつければいいんだろ」みたいなコード片が出来上がることもあるので、うーんという感じです"
        },
        "messageTs": "1518563084.000167",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "コーディングスタイルは一貫したいしlintも機械がやってほしいっていう需要はあって。やっぱりみんな gofmt みたいなのを求めてしまうのです <https://hackage.haskell.org/package/hfmt>"
        },
        "messageTs": "1518530197.000478",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "迷惑メール判定されてたという初歩的なあれでした orz"
        },
        "messageTs": "1518521908.000137",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いっそ自動で直してもらいたい、すでにあるのかもしれませんが"
        },
        "messageTs": "1518517076.000469",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "何も考えずhlintに矯正されてしまった"
        },
        "messageTs": "1518505209.000200",
        "messageUser": {
            "unUserId": "U57CUMWQ6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "了解です！"
        },
        "messageTs": "1518498693.000127",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`hlint --ignore=\"Use fewer imports\" --ignore=\"Use camelCase\"` とか"
        },
        "messageTs": "1518498441.000140",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "うるさいルールは、--ignore で消せばよいかと。"
        },
        "messageTs": "1518498418.000027",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "見てる限りだとみなさん結構hlint使ってらっしゃるんですね\n前に使ってた時にうるせぇわざとこう書いてんだよっていいたくなる指摘ばっかりだったので使うのをやめてしまった…"
        },
        "messageTs": "1518496682.000015",
        "messageUser": {
            "unUserId": "U560KD6DN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いいですね！誰か知り合いを手伝いに行こうと思っていたので、更によい口実ができました！ :smile: \n<https://trello.com/b/GfAyczPt/haskell-jp>\nに追加しましょう！\n最初からTODOで大丈夫です。\n期限ややることなどを挙げておいていただけると助かります！ :pray:"
        },
        "messageTs": "1518496323.000060",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK> ふと思いついてまだ深く考えてないんですが技術書典での自分と <@U4M4XHKB8> さんの卓で <http://Haskell.jp|Haskell.jp> の宣伝をするポストカードみたいなもの配りませんか？"
        },
        "messageTs": "1518496172.000208",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://stackoverflow.com/questions/25355570/simplifying-a-gadt-with-uniplate>\n関連 \n\n背景にある論文 <http://dreixel.net/research/pdf/gpif.pdf>"
        },
        "messageTs": "1518491021.000187",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://www.reddit.com/r/haskell/comments/3sm1j1/how_to_mix_the_base_functorrecursion_scheme_stuff/>\n自分でGADTsスタイルのASTFunctor書いてみてやっとインデックス付きFixのモチベーションが理解できてきた"
        },
        "messageTs": "1518490672.000015",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell に IntelliJ IDEA なみのIDEができれば、そういう書き換えも一瞬でできるんでしょうけどねぇ... :disappointed_relieved:\nhaskell-tools-refactorに期待か？"
        },
        "messageTs": "1518486940.000211",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`&lt;&gt;` で繋ぐようにコーディングする場合、意志的に左右の変数がそれこそ `[a]` でなく、ビルダーに置き換えたり `newtype` などで敢えて別のコンテナにした型として取り扱う予定があるとかになるでしょうね。 `&lt;$&gt;` についても同様（しかし、それだったらその必要なタイミングで書き直すので十分）"
        },
        "messageTs": "1518486818.000042",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いやまぁ、きっかけは <#C8KBGEBR7|code-review> のところで `++` つかってる箇所についてそう指摘しようかと思ったら、そういえばホントに `&lt;&gt;` 使った方が効率いいんだっけか？ ってなったからでした"
        },
        "messageTs": "1518486646.000227",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Prelude の関数実装は一度ならずふとしたきっかけごとに見直すと学びがありますね…"
        },
        "messageTs": "1518486014.000074",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "将来型を変える気がないのであれば、素朴に専用の関数を使うのでいいです。メソッドを使う必要はありません。"
        },
        "messageTs": "1518485871.000077",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こういうの、もちろん haskell の言語仕様ではなく GHC の実装であるから、もしかしたら処理系によっては何故か抽象的な方の関数の方が効率の良いパターンがあるかもしれないけれど、そもGHC拡張つかったファイルの時点でGHCに寄った実装でいいんや…"
        },
        "messageTs": "1518485804.000238",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ああ！ `map じゃなくて &lt;$&gt; つかいなよ` も前のHlintにありましたね。\nしかし…\n```\ninstance Functor [] where\n    {-# INLINE fmap #-}\n    fmap = map\n```"
        },
        "messageTs": "1518485688.000254",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`map` より `fmap` の方がいいんじゃね？とも言われるし、てっきり多相関数の方がコンテナ型を変えたとき( `[a]` から `Vector a` に変えるとか)に楽だから言ってるのかと思ってた。"
        },
        "messageTs": "1518485562.000168",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最終的にputStrLn程度に出力する、つまりは `Show a` 実装程度には `++` として、大規模にファイルとして出力する、あるいは pretty-print するとか `AST` みたいなデータ構造の場合にはビルダー使うっていうやり方してますねー"
        },
        "messageTs": "1518485562.000100",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/kazu-yamamoto/logger/pull/155>"
        },
        "messageTs": "1518485530.000234",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "参考："
        },
        "messageTs": "1518485529.000228",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "実際のところ、文字列に関しては\n<https://hackage.haskell.org/package/text-1.2.3.0/docs/Data-Text-Lazy-Builder.html> や\n<https://hackage.haskell.org/package/bytestring-0.10.8.2/docs/Data-ByteString-Builder.html>\nなど、文字単位で1個ずつ結合していく `++` よりも効率のよいビルダーがあるので、参考までに。（すでにご存じでしたら済みません）"
        },
        "messageTs": "1518485447.000243",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "遅延評価されるリストですしね。 :smirk:"
        },
        "messageTs": "1518485327.000200",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "いちいち `++` を `import Data.Monoid (&lt;&gt;)` して書き換える必要なんてなかったんや…（つらい）"
        },
        "messageTs": "1518485304.000347",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "江添さん、なんだかんだで「わかり」を得ると途端に絶賛しだす"
        },
        "messageTs": "1518485239.000242",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "別のプログラミング言語の `+ で文字列結合するよりビルダー経由で…` っていうノウハウが逆転してしまうアレを連想してしまった（普通に `[a]` に対しては `++` でよいっぽい）"
        },
        "messageTs": "1518485182.000249",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "デフォルトの実装もなくなったので、面倒でも実装を書いておくのが正しい対策のようです。"
        },
        "messageTs": "1518485038.000122",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なので、ちょっと気になって調べたのですが、そもそも <https://hackage.haskell.org/package/base-4.10.1.0/docs/src/GHC.Base.html#local-6989586621679017803> の `[a]` に対する mappend の実装が \n```\n{-# INLINE mappend #-}\n        mappend = (++)\n```\nってなってて、思いっきり自分でたらい回しの順序を増やしているだけだった…"
        },
        "messageTs": "1518485013.000084",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あと、&lt;&gt; が semigroup のメソッドになって、GHC 8.4 から semigroup パッケージが base に組み込まれます。現在、&lt;&gt; 周りは変化が激しいです。"
        },
        "messageTs": "1518484988.000315",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すばらしい！まとめて記事にしていただきたいぐらいです！ :yum:"
        },
        "messageTs": "1518484969.000097",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうだったのか……"
        },
        "messageTs": "1518484967.000038",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hlint は、バージョンによって言うことがコロコロ変わりますよ。"
        },
        "messageTs": "1518484917.000035",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "本当に素朴なトピックっぽくなるのですが、LTSのソルバを更新して一式環境を新しくしたら、Hlint が `++ でなく &lt;&gt; でリスト結合しないの？` っていうサジェストをしなくなりましたね"
        },
        "messageTs": "1518484722.000162",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell.orgが2年ぶり？にGoogle Summer of Codeにメンター組織として採択されました。\n\n<https://summerofcode.withgoogle.com/organizations/5706672807346176/>"
        },
        "messageTs": "1518483637.000124",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最近社内Slackで江添さんのhaskellに纏わる誤解を説くbot化しています"
        },
        "messageTs": "1518479005.000147",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど、formally verifiedなブラウザにするためにIdrisってことですか！素晴らしい！"
        },
        "messageTs": "1518476486.000042",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U98QDF5EJ> has joined the channel"
        },
        "messageTs": "1518469653.000293",
        "messageUser": {
            "unUserId": "U98QDF5EJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "エイリアス抜きにするとすぐメール来ました。エイリアス入れると受諾されたように見えて内部で送信に失敗してそうですね。"
        },
        "messageTs": "1518437633.000288",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なんか書いてばっかりで失礼。 このへんで:sweat_smile:\n詳しく理解できてないのですが、EthereumのウォレットのMistの後継（？）らしきものMoon Browserというがあって、\nこのコアは、Idrisで書かれるようです。\n\nMoon-Browser\n<https://github.com/ethereum/moon-browser>\n\nスマートコントラクトの世界観自体が、immutableな更新とかで、関数型の世界観とフィットしますね。\nトランザクションはほとんど、Stateモナドか、IOアクション自体を彷彿とさせたり。 データのimmutableな更新にツリーが出てきたり。\n何やら、DApps界隈は、関数型系がアツいですね！"
        },
        "messageTs": "1518418672.000144",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "昔に登録したのでうろ覚えですが、半日も待たされた覚えはないです、、、 すぐに作業を継続できた気が。"
        },
        "messageTs": "1518418544.000216",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Hackage へのユーザー登録のメールアドレス検証用メールってすぐに来ますか？\n半日ぐらい経っても来てなくってメールアドレスのエイリアスがダメなのかな？と。\n<http://hackage.haskell.org/users/register-request>"
        },
        "messageTs": "1518404509.000049",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://fumieval.hatenablog.com/entry/2018/02/11/185306> Discordのボットを開発する記事を書きました(けっこう長いです)"
        },
        "messageTs": "1518343264.000070",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "以下を書きました。\n\nGHCへの変更提案とパッチ送付の手順例\n<https://haskell.jp/blog/posts/2018/ghc-proposal-and-patch.html>\n\nGHCの仕様や実装については答えられないかもしれませんが、\n手続きについては、もしかすると答えられる事があるかもしれませんので、\n実際に手順を進めるときに不明な点があれば聞いて下さい:haskell:"
        },
        "messageTs": "1518339051.000040",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IOHK自体は良く知らないし人の人生に関わることなので、このpositionを推しているわけではないのですが、これからの新言語の初期設計に関われるとしたら羨ましい！"
        },
        "messageTs": "1518319050.000076",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IOHKの人ではありませんでして、純粋な言語系の興味です^^;\n\nCardanoのスマートコントラクトの言語系は３外建てになっているようです。\n  * Plutus: 表層言語（Haskellの階層に相当。 Haskellベースsyntax。）\n  * Plutus-Core: コア言語（GHCのCore言語に相当。GHC感満載。）\n  * IELE: 仮想マシン（LLVMベース！。 EthereumのEVMの位置だが相当改善。）\n\nそれぞれ現状の仕様は以下のようです。\n\n* Plutus, Plutus-Core: <https://iohk.io/research/papers/#JT5XKNBP>\n* IELE: <https://github.com/runtimeverification/iele-semantics>\n\nEthereumの言語系と比べてアグレッシブに攻めてる感があるので、頑張って欲しいなぁ。"
        },
        "messageTs": "1518318345.000073",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell MLからです。 IOHK（Cardanoの開発陣のひとつ）が6人も募集しています。\n（haskell-jpのslackにIOHK系の方がおられましたね^^）\n\n[Haskell] [Philip Wadler] IOHK is hiring six PLT engineers\n<https://mail.haskell.org/pipermail/haskell/2018-February/025348.html>\n\nCardano用のスマートコントラクトを記述する言語、\"Plutus\"向けの開発者募集みたいです。\n（Plutusは、EthereumでいうところのSolidityに相当するもの。 Haskell系をベースにしたSyntax）\n\nここのPLUTUSコアのことでしょう。\n<https://cardanoroadmap.com/jp/>\n\nGithubでのプロトタイプはここの模様。（ここの開発を加速しようというもの？） \n<https://github.com/input-output-hk/plutus-prototype>\n\nPlutusの開発が進むのをひそかに期待してたので頑張って欲しいです:slightly_smiling_face:"
        },
        "messageTs": "1518313635.000077",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "初めて lens 使ってるんですけど型エラー読み解くのが苦しい"
        },
        "messageTs": "1518302025.000038",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U96ETFGAC> has joined the channel"
        },
        "messageTs": "1518266541.000039",
        "messageUser": {
            "unUserId": "U96ETFGAC"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "メール文面からだと型(CH対応)ベースの検証にはイマイチ用が無さそうかな？"
        },
        "messageTs": "1518250514.000020",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IntelがCPU設計用の形式検証で開発者募集とのこと。\nHillsboro拠点側らしいので、Icelakes世代のコア開発？\nあるいは、もっと別のデータセンター向けのSaleble品？\n\n[Haskell-cafe] [JOBS] Formal methods positions at Intel\n<https://mail.haskell.org/pipermail/haskell-cafe/2018-February/128553.html>\n\n余談、Leventさんって、Intelの人だったのですね。 Leventさんの、sbvパッケージ。\n<https://github.com/LeventErkok/sbv>"
        },
        "messageTs": "1518219335.000007",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すでに許可されていました：BranchCache ホスト型キャッシュ クライアント (HTTP-送信)"
        },
        "messageTs": "1518216588.000282",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://support.kaspersky.co.jp/11103>"
        },
        "messageTs": "1518215328.000166",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こんな感じで通信を許可できませんかね？"
        },
        "messageTs": "1518215326.000205",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Win10 pro、カスペルスキーに止められる。\n\n```\n&gt;tls-simpleclient -O output.html --http1.1 <http://mew.org|mew.org>\ngroups = [X448,X25519,P256], keyshare = [X448]\nuser interrupt\n```"
        },
        "messageTs": "1518178874.000322",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Windows 10 Pro です。\n```\n&gt;tls-simpleclient -O output.html --http1.1 <http://mew.org|mew.org>\ngroups = [X448,X25519,P256], keyshare = [X448]\nRetrying client hello...\ngroups = [X25519], keyshare = [X25519]\nTLS 1.3: AES128GCM-SHA256 SHA256\nNewSessionTicket received: lifetime = 86400 sec\n```"
        },
        "messageTs": "1518173718.000361",
        "messageUser": {
            "unUserId": "U580LD4G7"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとう！"
        },
        "messageTs": "1518158330.000099",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Windows 7 Professionalです。\n大丈夫そうですねー！\n```\n$ tls-simpleclient -O output.html --http1.1 <http://mew.org|mew.org>\ngroups = [X448,X25519,P256], keyshare = [X448]\nRetrying client hello...\ngroups = [X25519], keyshare = [X25519]\nTLS 1.3: AES128GCM-SHA256 SHA256\nNewSessionTicket received: lifetime = 86400 sec\n```"
        },
        "messageTs": "1518153562.000066",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ここを読むと、TLS 1.3 で定義されている 4 つのハンドシェイクで遊べます。"
        },
        "messageTs": "1518150570.000133",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/vincenthz/hs-tls/issues/167#issuecomment-261823166>"
        },
        "messageTs": "1518150551.000111",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "お、動いていますね。ありがとうございました！"
        },
        "messageTs": "1518150504.000226",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "公開サーバです。ぜんぜん問題ないです。"
        },
        "messageTs": "1518150491.000034",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Windowns 10 Home です\n(これ出していい情報ですよね...ネットワークわからんので...)\n```\n&gt; .\\tls-simpleclient.exe -O output.html --http1.1 <http://mew.org|mew.org>\ngroups = [X448,X25519,P256], keyshare = [X448]\nRetrying client hello...\ngroups = [X25519], keyshare = [X25519]\nTLS 1.3: AES128GCM-SHA256 SHA256\nNewSessionTicket received: lifetime = 86400 sec\n```"
        },
        "messageTs": "1518150451.000208",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Windowsをお持ちの方へお願い：\n以下から、tls-simpleclient をダウンロードし、\n```\n% tls-simpleclient -O output.html --http1.1 <http://mew.org|mew.org>\n```\nを実行して何が表示されるか、教えていただけないでしょうか？\n正しく動けば、TLS 1.3 で接続したよと表示され、\noutput.htmlにHTMLが入ります。\n\n<https://ci.appveyor.com/project/kazu-yamamoto/hs-tls/build/artifacts>"
        },
        "messageTs": "1518150182.000066",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U979PBETG> has joined the channel"
        },
        "messageTs": "1518147012.000122",
        "messageUser": {
            "unUserId": "U979PBETG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "大事そうな話なんでこちらにも共有します。\n<https://www.reddit.com/r/haskell_jp/comments/7w8zsz/redesigning_haskell_docs/>"
        },
        "messageTs": "1518131238.000033",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "昨年の5月から現職です。\n東芝勢はみんな色々なところに行きましたね―"
        },
        "messageTs": "1518073544.000069",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U95LURU2F> has joined the channel"
        },
        "messageTs": "1518066179.000134",
        "messageUser": {
            "unUserId": "U95LURU2F"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://team.inria.fr/marelle/en/coq-winter-school-2017-2018-ssreflect-mathcomp/>\nたとえば、 algebra libraryの使い方とか"
        },
        "messageTs": "1518013996.000155",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "coqは興味があるのですが、\nどこから情報集めてますか？"
        },
        "messageTs": "1518013954.000494",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "転職されたんですね。東芝勢、ごっそり行ったなぁ。"
        },
        "messageTs": "1517991013.000210",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U95SJ1ADC> has joined the channel"
        },
        "messageTs": "1517966441.000110",
        "messageUser": {
            "unUserId": "U95SJ1ADC"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U94E58PKK> has joined the channel"
        },
        "messageTs": "1517963360.000145",
        "messageUser": {
            "unUserId": "U94E58PKK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なんでパースエラーになるんだと思ったらこの Liquid インタープリター、for は未実装っだったのか。はまった。 <https://hackage.haskell.org/package/liquid>"
        },
        "messageTs": "1517958489.000256",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ついでに便乗すると、うちの会社PFNもコンパイラ屋さん言語処理系屋さんなどウェルカムです。\n<https://twitter.com/nobu_k/status/920674798455230464>\nHaskell自体は直接は使ってないですが、言語処理系屋さんはHaskellerな人とそれなりに被ると思うので……"
        },
        "messageTs": "1517912130.000386",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": ":scroll: Tsuru CapitalはHaskellプログラマを募集しています <http://www.tsurucapital.com/en/>"
        },
        "messageTs": "1517898988.000130",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "do記法乱用推進協会会員としては見逃せない変更ですね。\n```\nfoo\n (...)\n (...)\n```\nのようなコードを\n```\nfoo\n  do ...\n  do ...\n```\nのようにできます"
        },
        "messageTs": "1517815367.000166",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4L0B71L1> shared a file: <https://haskell-jp.slack.com/files/U4L0B71L1/F93HB1JLS/procedural.cabal|procedural.cabal>"
        },
        "messageTs": "1517744516.000033",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4L0B71L1> shared a file: <https://haskell-jp.slack.com/files/U4L0B71L1/F94D0V1KQ/main.hs|Main.hs>"
        },
        "messageTs": "1517744515.000061",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "手続き Haskell コード例 <https://gist.github.com/kakkun61/4bbc966ede75c98109fd2c136dc0499a>"
        },
        "messageTs": "1517744376.000009",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "同人誌なのでやりたい放題だ"
        },
        "messageTs": "1517744351.000022",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "タイトルがヤバいw"
        },
        "messageTs": "1517743084.000022",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://twitter.com/kakkun61/status/960106857078468608>"
        },
        "messageTs": "1517743022.000082",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "はい、 `runST $ do` の `$` を消せるので歓迎されているようです。\ndo だけでなく、if や caseなどもまとめて対応させたのがすごいですね。"
        },
        "messageTs": "1517712598.000071",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "```\nrunHoge $ do\n  doIt\n```\nの `$` を消せるやつですね！素晴らしい！"
        },
        "messageTs": "1517699250.000077",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "[Data.Set](<https://www.stackage.org/haddock/lts-10.4/containers-0.5.10.2/Data-Set.html>)\nなんかはshowTree関数を別に定義されていて良かったりしますね\nそれはそれとしてシリアライズにshowを使うのは便利ですがシビアな場合文字列が膨らんで死ぬことがありますね…他にシリアライズのベストプラクティスを知らない,知りたい"
        },
        "messageTs": "1517641565.000098",
        "messageUser": {
            "unUserId": "U57CUMWQ6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "昔の文章のようですが、面白いものを見つけました。（まだ読み込んでないですが有名なものですかね。）\n\nThe Haskell Road to Logic, Maths and Programming\n<https://fldit-www.cs.uni-dortmund.de/~peter/PS07/HR.pdf>"
        },
        "messageTs": "1517635713.000067",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "takano-akioさんのBlockArguments提案の実装が、ghcのmaster分岐にlandedしました。\nghc 8.6.1 から正式に使えるようになります。\n<https://phabricator.haskell.org/rGHCbe84823b956f0aa09c58d94d1901f2dff13546b4>\n\n詳細仕様はこちら。\n<https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0010-block-arguments.rst>\n\ndo, let, case, if などの式のカタマリを、「括弧なし」で、引数箇所に書けるようになります。"
        },
        "messageTs": "1517635628.000051",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ただ，この方法だと <https://github.com/sol/hpack/issues/262> にある通り，既存の設定を上書きすることができないんですよね"
        },
        "messageTs": "1517620297.000217",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "普通にいいアイディアだと思うので :+1: しました"
        },
        "messageTs": "1517620155.000087",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "現在，hpackでescape hatchのためにverbatimフィールドを追加する案が出ています．現状，Cabalとの相互運用が難しい状況ですが，それに対していい対案が無い状況なので，もし何かもっといいアイデアをお持ちの方はコメントしてみると，今後のhpack利用が快適になるかもしれません\n<https://github.com/sol/hpack/pull/260>"
        },
        "messageTs": "1517616515.000030",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Set の API のオーダーを保証するには、木が平衡していることを証明しなければいけないけれど、平井くんをもってして3万行必要だった。。。"
        },
        "messageTs": "1517557410.000221",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "future plan といいつつ、きっと取り組まないでしょうねぇ。。。"
        },
        "messageTs": "1517557304.000106",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "&gt; In the case of fixed precision types, we have chosen these mappings for expediency; in future work, we plan to switch these definitions so that we can reason about underflow and overflow."
        },
        "messageTs": "1517557178.000138",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "FitSpecを使うと、テストの重複を教えてくれたような気がする。"
        },
        "messageTs": "1517556525.000156",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://eprints.whiterose.ac.uk/118200/1/FitSpec.pdf>"
        },
        "messageTs": "1517556499.000218",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あと、証明した性質に過不足がないか、どう証明するんでしょうか？"
        },
        "messageTs": "1517556285.000193",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Int みたいな桁あふれの問題があるデータ型をどうするのかきょうみがあるんですが、なにやら Import IntToZ してますね。"
        },
        "messageTs": "1517556255.000104",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "見てみたら，ワリキリでInductive決め打ちなんですね"
        },
        "messageTs": "1517491058.000193",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "HaskellのADTをCoqに持っていくと，Inductive/Coinductive両方の性質をどうにかしないといけなくなるのどうしてるのかと思って<https://arxiv.org/pdf/1711.09286.pdf>"
        },
        "messageTs": "1517491041.000241",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "librariesのMLに面白そうな話が流れてました。\ncontainersパッケージを、Formal verificationする？、という話のようです。\nHaskellソースからCoq（理解してません）へのコンバータ（hs-to-coq）があるのですね。\n<https://mail.haskell.org/pipermail/libraries/2018-February/028473.html>"
        },
        "messageTs": "1517489682.000196",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U91F1FSJH> has joined the channel"
        },
        "messageTs": "1517378266.000207",
        "messageUser": {
            "unUserId": "U91F1FSJH"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U90TTJDB7> has joined the channel"
        },
        "messageTs": "1517311910.000154",
        "messageUser": {
            "unUserId": "U90TTJDB7"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "おー"
        },
        "messageTs": "1517301034.000459",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ほげほげ｀foo`bar｀ふがふが"
        },
        "messageTs": "1517301028.000131",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://twitter.com/mametter/status/958240021252734976>"
        },
        "messageTs": "1517299353.000005",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://twitter.com/mametter/status/958235368855228416>"
        },
        "messageTs": "1517299332.000205",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U90L8N3K6> has joined the channel"
        },
        "messageTs": "1517291573.000118",
        "messageUser": {
            "unUserId": "U90L8N3K6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あと、表示用関数は機能拡張するときに、フォーマットオプション等の引数を追加する場合がある、というのもあります。"
        },
        "messageTs": "1517285228.000247",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "SQLiteの文字列フィールドに代数データ型を書き込むのに使ってみたり。内部データだからまあ良いかなと思いました"
        },
        "messageTs": "1517282536.000165",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "```\nshow . read = id\nread . show = id\n```\nであってほしい"
        },
        "messageTs": "1517282528.000066",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "禿同"
        },
        "messageTs": "1517282445.000134",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "HRRを推していこうな:muscle:"
        },
        "messageTs": "1517282366.000218",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Showはあくまでもデバッグ用と考えた方がいいですもんね！"
        },
        "messageTs": "1517282258.000057",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ShowはReadと一緒にderivingにして、シリアライズ/デシリアライズに使った方が便利という学びを得ました。画面出力用の文字列化関数なんかは別名で作った方がいい。 :memo:"
        },
        "messageTs": "1517282097.000034",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "レイヤーが違うのが混ざっているとはいえ、めっちゃ多い :joy: \n<https://www.reddit.com/r/haskell/comments/7tx0o4/haskell_3_sql/>"
        },
        "messageTs": "1517276265.000098",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "stack のイシューには newcommer friendly ってラベルがあるんですね <https://github.com/commercialhaskell/stack/labels/newcomer%20friendly>"
        },
        "messageTs": "1517232071.000147",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Solidity(Ethereum)とPlutus(Cardano)を軽くみていて、思い出したHaskellの面白い例の紹介です。\nPhantom型（幽霊型）を使って数値型の誤った混在を防ぐ例です。\n（Don Stewartさんの、資料に書かれてたはずなのですが、資料のURLがなくなってました。）\nコード例は以下です。\n　　<https://gist.github.com/takenobu-hs/36bae8f94410cf7f02b0659bff42b31a>\n\n使い方はこんな感じ。 例えば、Int同士を混在しないように、型で分けるというものです。\nGHCの言語拡張なしの基本的な機能でも、便利なことができます。\nなお、Valはnewtypeで定義されているので、実行時にはValは消えて実行時オーバーヘッドなしです。\n\n```\nghci&gt; x1 = 1 :: Wei\nghci&gt; x2 = 5 :: Wei\nghci&gt; x3 = 10 :: Ether\n\nghci&gt; x1 + 1\n2\nghci&gt; x1 + x2\n6\n\nghci&gt; x3 + 1\n11\nghci&gt; x1 + x3\n&lt;interactive&gt;:17:6: error:\n    • Couldn't match type ‘XEther’ with ‘XWei’\n      Expected type: Wei\n        Actual type: Ether\n    • In the second argument of ‘(+)’, namely ‘x3’\n      In the expression: x1 + x3\n      In an equation for ‘it’: it = x1 + x3\n```"
        },
        "messageTs": "1517230526.000355",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U9023UDGB> has joined the channel"
        },
        "messageTs": "1517227874.000285",
        "messageUser": {
            "unUserId": "U9023UDGB"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U90881C13> has joined the channel"
        },
        "messageTs": "1517226181.000212",
        "messageUser": {
            "unUserId": "U90881C13"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8ZBFJLGY> has joined the channel"
        },
        "messageTs": "1517205764.000177",
        "messageUser": {
            "unUserId": "U8ZBFJLGY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U900NGTV0> has joined the channel"
        },
        "messageTs": "1517200416.000129",
        "messageUser": {
            "unUserId": "U900NGTV0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8ZBMSPPB> has joined the channel"
        },
        "messageTs": "1517175329.000005",
        "messageUser": {
            "unUserId": "U8ZBMSPPB"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8Z94MFCZ> has joined the channel"
        },
        "messageTs": "1517142303.000033",
        "messageUser": {
            "unUserId": "U8Z94MFCZ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8ZN25NE7> has joined the channel"
        },
        "messageTs": "1517138679.000052",
        "messageUser": {
            "unUserId": "U8ZN25NE7"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U90FHSDFG> has joined the channel"
        },
        "messageTs": "1517054099.000004",
        "messageUser": {
            "unUserId": "U90FHSDFG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今まで、slackに情報ながれてたのに、理解できてませんでした^^\nCardanoすごいですね、コントラクトをHaskellベース言語で書けて、仮想マシン層があってレジスタベース！\nEthereum/Solidityよくできてるなぁと最近知り始めたのですが、Cardanoの先進突き抜け感は尋常じゃないですね。\nあと、「関数プログラミングの楽しみ」本の６章の「金融取引契約の書き方」の考えが源流の１つにあったり。\n先見先進な人たちがいますね〜:telescope:"
        },
        "messageTs": "1517038544.000124",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "この間Haskellerを募集している、と言うことで話題になったIOHKが開発するCardanoというブロックチェーンを支えるCardano Foundationと、FP Completeが提携するそうで。\n<https://www.fpcomplete.com/blog/fp-complete-and-cardano-blockchain-audit-partnership>\n<https://www.reddit.com/r/haskell_jp/comments/7kjb85/iohk%E3%81%A7%E3%81%AFhaskell%E9%96%8B%E7%99%BA%E8%80%85%E3%82%92%E5%8B%9F%E9%9B%86%E3%81%97%E3%81%A6%E3%81%84%E3%81%BE%E3%81%99/>"
        },
        "messageTs": "1516945602.000074",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8YBE1TTM> has joined the channel"
        },
        "messageTs": "1516877170.000012",
        "messageUser": {
            "unUserId": "U8YBE1TTM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "恥ずかしながら :point_up: の騒動の背景にあるらしいHackage Revisionsと言うのを存じてませんでした。。。\n<https://github.com/haskell-infra/hackage-trustees/blob/master/revisions-information.md>"
        },
        "messageTs": "1516855545.000095",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "速すぎて読みきれなかったのですが、一旦収束(park)方向のようですね、、、"
        },
        "messageTs": "1516799597.000186",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "先ほどRedditで見かけました。\nSnoymanからのコメントが。\n<https://www.snoyman.com/blog/2018/01/slurp>"
        },
        "messageTs": "1516779430.000120",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hackage でバージョンを変えずに metadata を変えられることが諸悪の原因？"
        },
        "messageTs": "1516766976.000187",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8XGRJ3DZ> has joined the channel"
        },
        "messageTs": "1516766891.000025",
        "messageUser": {
            "unUserId": "U8XGRJ3DZ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "パッケージって、そんなに fork してるの？"
        },
        "messageTs": "1516766329.000108",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8X01G6FJ> has joined the channel"
        },
        "messageTs": "1516762824.000328",
        "messageUser": {
            "unUserId": "U8X01G6FJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ここまでの大炎上を見るのは久しぶりだ…"
        },
        "messageTs": "1516753246.000226",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "立て続けに失礼しますね。 大ネタなのでここでも共有します。\n久しぶりに、Haskellコミュニティの全体に影響を与える大きな提案と議論が始まりました。\nHaskellのpackageシステムを何とかしよう、と言う新しい提案と議論です。\n\nSLURP: a single unified registry for Haskell packages\n<https://mail.haskell.org/pipermail/haskell-cafe/2018-January/128470.html>\n\n公式の議論はここで行われています。\n<https://github.com/haskell/ecosystem-proposals/pull/4>\n\nRedditにも派生議論があります。\n<https://pay.reddit.com/r/haskell/comments/7s58id/slurp_a_single_liberal_unified_registry_of/>\n\n意見や知見などがあれば、上記Githubにて誰でも議論に参加可能ですのでどうぞ:wink:"
        },
        "messageTs": "1516710766.000361",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "gi-gtkが通るか試したい！けど環境作るの大変だ"
        },
        "messageTs": "1516625267.000274",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC 8.4.1 のアルファ２が出ました。 バグを見つけたらぜひ報告をどうぞ:haskell:\n<https://mail.haskell.org/pipermail/ghc-devs/2018-January/015323.html>\n<https://pay.reddit.com/r/haskell/comments/7s076d/announce_ghc_841alpha2_available/>\n\nなお、GHC 8.4.1の正式リリースは、今のところ２月頃予定との状況ですね。"
        },
        "messageTs": "1516624405.000121",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8WGPUHK9> has joined the channel"
        },
        "messageTs": "1516365927.000362",
        "messageUser": {
            "unUserId": "U8WGPUHK9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Thanks, it's Friday!  幾つか話題を。\n\nその１。 ghc-devsのMLから。\nGHCの半年毎リリースに併せて、GHC付属ライブラリのバージョンポリシーを変えようという提案です。\n何か意見があればフィードバックをどうぞ。\n<https://mail.haskell.org/pipermail/ghc-devs/2018-January/015308.html>\n<https://pay.reddit.com/r/haskell/comments/7qvuye/versioning_libraries_bundled_with_ghc_prereleases/>\n\nその２。 GHCのコアライブラリのMLから。\nいつも先鋭なlibrariesの人たちですが、要素が１つのタプル（？）の型に名前をつけよう、というちょっとおもしろい話です。\n<https://mail.haskell.org/pipermail/libraries/2018-January/028419.html>\n\nその３。 haskell-cafeのMLから。\nSimon Peyton Jonesさん、60th\n<https://mail.haskell.org/pipermail/haskell-cafe/2018-January/128447.html>\n\nHappy Haskell:haskell:"
        },
        "messageTs": "1516364013.000441",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "できました！ ありがとうございます。"
        },
        "messageTs": "1516363964.000316",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U570660KX> あずさんありがとうございます。奨励金が出るといったような大会かと思っておりました。"
        },
        "messageTs": "1516362313.000143",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`FlexibleInstances` 拡張を使うのは，ダメなんでしょうか？"
        },
        "messageTs": "1516352931.000331",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "シノニムでは、なんかの class の instance にできないのね。知らなかったよ。"
        },
        "messageTs": "1516348193.000164",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8VEALRHT> has joined the channel"
        },
        "messageTs": "1516341472.000039",
        "messageUser": {
            "unUserId": "U8VEALRHT"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://haskellweekly.news/issues/90.html> Drinkery, Haskell Weeklyにも載りましたね！ :tada: :cocktail:"
        },
        "messageTs": "1516317822.000522",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8TGEH7NV> has joined the channel"
        },
        "messageTs": "1516185016.000298",
        "messageUser": {
            "unUserId": "U8TGEH7NV"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "HaskellのRedditでやってる \"What Are You Reading?\" <https://www.reddit.com/r/haskell/comments/7qz3j8/what_are_you_reading_january/> とか \"What are you working on?\" <https://www.reddit.com/r/haskell/comments/7kkfqg/what_are_you_working_on/> 面白そう。\nみなさん最近何読んでますか・何に取り組んでますか？ :slightly_smiling_face:"
        },
        "messageTs": "1516176837.000054",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ビール(場合によってはワインなど)は蛇口を使うのでそこから取りました。taproomという言葉もあります"
        },
        "messageTs": "1516168180.000084",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど"
        },
        "messageTs": "1516167519.000001",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "お、蛇口とかって意味もあるのか。大体そんなニュアンスでしょう。"
        },
        "messageTs": "1516167290.000121",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "多分 <https://ejje.weblio.jp/content/tap> の、「飲み口をつける」とかって意味からじゃないかと。"
        },
        "messageTs": "1516167238.000042",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Tap ってのはお酒の用語なんですか？\nこれだけネタが分からなかった...."
        },
        "messageTs": "1516167132.000151",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "読めました。毎度素敵なライブラリーありがとうございます！\n何点か気になったのでRedditのスレッドにしました。\n<https://www.reddit.com/r/haskell_jp/comments/7qyrq2/drinkery_the_boozy_streaming_library_school_of/>\nメンションされているのでお気づきかもですが、念のため。"
        },
        "messageTs": "1516166939.000056",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "用語がめっちゃキラキラネームですね... :sweat_smile: :sparkle:"
        },
        "messageTs": "1516154786.000066",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ええっ！？世界最速のListTの実装がリリースされたのかい！？<https://www.schoolofhaskell.com/user/fumieval/drinkery-the-boozy-streaming-library>"
        },
        "messageTs": "1516110769.000193",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "パッケージの依存グラフの比較がすごいですね(笑)"
        },
        "messageTs": "1516070380.000080",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Vincent どこにでもいる説。"
        },
        "messageTs": "1516070226.000296",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "です。"
        },
        "messageTs": "1516070200.000009",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://www.haskel.com|www.haskel.com> だと？ 全然 Haskell と関係ない。。。"
        },
        "messageTs": "1516069366.000091",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これですか？\n<https://github.com/vincenthz/hs-gauge>"
        },
        "messageTs": "1516069255.000038",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これまでベンチマークツールとして criterion が使われてきましたが、スリム化した Gauge が流行り出している模様です。"
        },
        "messageTs": "1516068947.000044",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私もHaskellで競プロやってます\n<http://atcoder.jp/user/hsjoihs>"
        },
        "messageTs": "1516023406.000384",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(主催者の方の評判が...)"
        },
        "messageTs": "1515993867.000076",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あっそれは..."
        },
        "messageTs": "1515993687.000130",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "過去ので私が知っているのは <https://connpass.com/series/132/>"
        },
        "messageTs": "1515993653.000130",
        "messageUser": {
            "unUserId": "U57CGDBMG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "まだ学部生だった頃に一回やったやつが休眠状態でほったらかしてありますけれども\n<https://hshs.connpass.com/>"
        },
        "messageTs": "1515993427.000004",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "うーむ、聞いたことがないですね"
        },
        "messageTs": "1515993385.000109",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "“Any #haskell groups up in Sapporo? 札幌でHaskellの勉強会みたいなグループか何かはありますか？” <https://twitter.com/mojobojo/status/951957150888112128>"
        },
        "messageTs": "1515993346.000168",
        "messageUser": {
            "unUserId": "U57CGDBMG"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうです！Haskellはリスト操作が強くて良いですね"
        },
        "messageTs": "1515990379.000002",
        "messageUser": {
            "unUserId": "U56G77VM1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "おっ競プロHaskell勢ですかね"
        },
        "messageTs": "1515982006.000079",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`scanl` って何に使うんだろうと思っていたんですけど、累積和を取るのに便利ですね！(いもす法をする際に使いました"
        },
        "messageTs": "1515979806.000123",
        "messageUser": {
            "unUserId": "U56G77VM1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": ":heart: \n&gt; 8. Don’t write monad-analogy tutorials."
        },
        "messageTs": "1515777127.000543",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "wiwinwlhにとてもいい言葉が載ってたので，紹介です\n&gt; In other words, the only path to understanding monads is to read the fine source, fire up GHC, and write some code. Analogies and metaphors will not lead to understanding. by <http://dev.stephendiehl.com/hask/#eightfold-path-to-monad-satori>\n&gt; 言い換えれば，モナドを理解するための唯一の道は，良いソースを読み，GHCを起動し，コードを書くことだということです．アナロジーやメタファーは理解に繋がりません．"
        },
        "messageTs": "1515777096.000765",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KUNQF9N> has joined the channel"
        },
        "messageTs": "1515750698.000265",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KUNQF9N> has left the channel"
        },
        "messageTs": "1515750665.000137",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Summer of Code自体よく理解していなかったので色々読んで勉強しているのですけど、「開発コミュニティの活発化」「(下で挙がってる”Make Hackage CDN-aware”みたいに)開発成果はコミュニティで共有されるので、欲しかった物が実装されると嬉しい」みたいなメリットがありそうですね！"
        },
        "messageTs": "1515728960.000127",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "”Make Hackage CDN-aware”がある。\nやった！！"
        },
        "messageTs": "1515720323.000094",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8R2EKE81> has joined the channel"
        },
        "messageTs": "1515700155.000193",
        "messageUser": {
            "unUserId": "U8R2EKE81"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U570660KX> \nこの記事を見てすでに把握している方を除いた方が\nこの記事により得られる情報などのメリットです。\n\n伝わらない部分がありましたら何んなりと申しつけください。"
        },
        "messageTs": "1515663100.000006",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8P5W7YP6> 横槍失礼、「誰が、何から得るメリット」なのか、発言から読み取れないので、補足が欲しいです（それともスレッド間違い？）"
        },
        "messageTs": "1515660883.000234",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "一応Redditにも転記させていただきました。\n<https://www.reddit.com/r/haskell_jp/comments/7pjs3r/summer_of_haskell_call_for_ideas_for_2018/>\n事後報告となりますが、よろしくお願いします。"
        },
        "messageTs": "1515627245.000362",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Sorry again,\nこちらのメリットは何でしょうか？\n不躾ながら質問させて頂きました。"
        },
        "messageTs": "1515625302.000077",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "任務完了です。高専の生徒達、大学生、院生の生徒達にもみてもらうようにします。たくさんの若者のアイデアが出る事を私も楽しみにしています。では失礼します。"
        },
        "messageTs": "1515624615.000103",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "念のためでした。承知しました。"
        },
        "messageTs": "1515624009.000010",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "もちろんかまいません。公に募集していることですので私に確認しなくても大丈夫ですよ。"
        },
        "messageTs": "1515623903.000339",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4M9NJ7QE> 先ほどは、学生が主体と勘違いしてしまいすいませんでした。ツイッターでこちらの件、拡散してもよろしいでしょうか？不要であれば申しつけください。"
        },
        "messageTs": "1515623020.000131",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://summer.haskell.org/news/2017-12-25-call-for-ideas.html>\nGoogle Summer of Code (採択されなければSummer of Haskell) で学生が取り組むプロジェクトアイデアを募集しています。現在のリストは <https://summer.haskell.org/ideas.html> から見られます。アイデアがあれば是非 <https://github.com/haskell-org/summer-of-haskell> にPRを送ってください。"
        },
        "messageTs": "1515621824.000164",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そろそろそうしますか。。。\n<https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1515507754000378> にある企画案で一発Haskell Day 2018を打てればそのタイミングで発表するのがいいのかも知れません。 :smirk:"
        },
        "messageTs": "1515546384.000161",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます"
        },
        "messageTs": "1515541138.000244",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "OK, どちらかというと <#C4NDY2TF1|event-announcement> 向けの内容だと思うのでそっちに移します。"
        },
        "messageTs": "1515540073.000062",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "返信原文を載せます\n返信原文\nHi Masako,\n\nHaskell works best when you modularize a project. If you define your modules as total functions, those having well typed inputs and outputs without affecting global variables, then Haskell provides a guarantee that no imperative language can compete with.\n\nIf you want, I can come to Japan to give a talk about using Haskell in industry."
        },
        "messageTs": "1515510230.000775",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ご指摘は大変ありがたいですが、この件はすでに決着しておりますので、ご心配なく！"
        },
        "messageTs": "1515509326.000449",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "年末年始は Slack を見ていなかったのですが、もしかして同じトピックが３つのチャンネル ( <#C4LFB6DE0|general> <#C4M4TT8JJ|random> <#C8R0H137H|translation>) に投稿されていますか？ 専用のチャンネル ( <#C8R0H137H|translation>) があるなら議論はそこに集約すべきと思います。 <@U8P5W7YP6>"
        },
        "messageTs": "1515509268.000322",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "本日アナウンスさせて頂きました世界からの著名人の方の1人が、日本に来て講義をしてもいいよとおっしゃってくれています。\n勿論催促したわけではなく、あちらがもしよければという形でした。はすもく会でも他の会よいですし、お呼びして直接講義を聞くのはどうでしょうか？同時通訳は私がやります。\n\n↓の方です。\nNishant Shukla 氏\n\n<https://www.linkedin.com/in/shuklanx>\n<https://github.com/BinRoot>"
        },
        "messageTs": "1515507754.000378",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうでしたか……。\n音信不通なのであれば、当時あったロゴ案を採用してしまっていいのではないかと思います。"
        },
        "messageTs": "1515506874.000360",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "現在IOHKが主催しているHaskell及び暗号通貨に関する集中講義をバルベドス諸島で行なっているのですが、講義で使用された資料及び課題は全て公開されることを講師の方から確認しました。詳細が決まればここで告知させて頂きます。"
        },
        "messageTs": "1515501131.000070",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "気づいてしまいましたか。。。\n実は長らくネット上で行方不明となってまして。。。Twitterも更新がなく、ずいぶん前にメールを出したけど反応がありませんでした。 :disappointed: \n:thinking_face: と、思いきやprivate repositoryで活動してるな。。。 <https://github.com/Tatsuki-I?tab=overview&amp;from=2017-09-01&amp;to=2017-09-30>"
        },
        "messageTs": "1515490228.000295",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "何ヶ月か前、Haskell-jpの新しいロゴを作るという話題があったと思いますが、あれってどうなったんでしたっけ？　新しいロゴを描くと宣言した人がいたものの、その人をしばらく見ていないような気がします。もしかして水面下で制作が続いてたりしますか？　（Haskellに関する質問ではないのでここに投稿します）"
        },
        "messageTs": "1515489790.000489",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "1 on 1 を拒むのであれば公開でもかまいませんが、曖昧に指示されると余計混乱をきたしますので恐れ入りますがご理解のほどよろしくおねがいします。\nふみさんは、言葉づかいはどうであれ曖昧な回答はしません。逆にそのほうが突き抜けていてすっきりするくらいです。\nもしこちらでも返信がない場合は、大変失礼ながらあなたの助言はスルーさせて頂きます。"
        },
        "messageTs": "1515486804.000298",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "誤解があるとよくないので\nどういう意味か教えていただけませんでしょうか？\n先人に学ばずとは...わたしがチャンネルを間違えた事そして　here などを送ってしまった事でしょうか？\n被害者意識をもし持っていたら、私はとっくにHaskellのサポートをやめています。暴言を吐かれようと何をされようと私は冷静に対応してきたつもりです。仮に私がそうみえるとしたらどこがだめでしたか？お手すきの際で構いませんがミスコミュニケーションは1番危険ですのでご教授ください。"
        },
        "messageTs": "1515485747.000112",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "先人に学ばず被害者意識を持つ人もいるのだなぁと思いました。私ができる助言はこれが最後です。"
        },
        "messageTs": "1515484892.000206",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "全面戦争なんてしたくありません。する意味がありません。\n陰湿になったり、揉めたくないので\n何か言いたい事があればメッセージを頂きたいです。\n私は15人程の先生がたへコンタクトをとりここまで記事にしたためました。もちろん最後は先生方への感謝の挨拶と共に、記事のURLを送りたいと思います。"
        },
        "messageTs": "1515482794.000153",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Randamに一度移動しましたが、translationチャンネルを作りました。そちらに先日からの議論とkazu先生のご指導の内容を移します。\n\n以下のチャンネルです。ご興味がありましたらご参加ください。\nThere's more information on inviting members to channels in this Help Centre article:\n<https://get.slack.help/hc/en-us/articles/201980108-Invite-members-to-a-channel>"
        },
        "messageTs": "1515477450.000186",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "でもみんな軽い気持ちでHaskellをやっていません。だから応援してくなりました。"
        },
        "messageTs": "1515475749.000143",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "直接私に言いたいことがあるならメッセージなり 1on 1 で仰ってください。\n普段slackは議論の場になることが多かったのと、私がゆうじさんが作成してくださったルールをちゃんと把握してなかったことについては反省しております。\nただ、皆さんに知って欲しかった事は事実です。今後は1人で占有する事を望まない方もいらっしゃいますし、とにかく揉めたくないので節度ある行動を心がけます。\nそして質問投稿はこれが始めでです。"
        },
        "messageTs": "1515475589.000236",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "大変失礼いたします。長く議論に発展するか否かは当初はわかりませんでした。\nslackは議論する場に適しているとおもっていましたのでこちらのルールを知らずご迷惑をおかけしたと反省しております。\nただそうまでしても皆さんにわかって欲しかったこと\n\n海外の教授先生著名な方々へのコンタクトの取り方\n失礼にならないよう幾度ものメールのやりとり\nそして最後にメッセージを描いてくださり。記事に載せて良い許可も頂きました。その事だけはどうかわかって頂きたいです。\nこの後は新しいチャンネルを増やすなどしてルールに従い、節度ある行動をします。どうぞよろしくおねがいします。"
        },
        "messageTs": "1515475000.000222",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ここまで来るのに時間かかりました。\n失礼にならないように、けっしてご迷惑にならないようになんども先生たちとやりとりをし、アンケートに答えて頂き、Advendに載せてよい許可も頂きました。\n其のことがさして重要でないと思う方がいたら仰ってください。\nあなたたちの邪魔をしたくてここまでがんばったわけではありません。自分のためです。\nどうぞよろしくお願いいたします。"
        },
        "messageTs": "1515474810.000054",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私としては、オリジナルコンテンツとして、現時点で教授や先生たちがどう考えているのか、そして日本のHaskellerがここまで頑張っているという事を伝えたかったのです。\nいわゆる1 on 1 です。"
        },
        "messageTs": "1515474593.000306",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "気をつけます。"
        },
        "messageTs": "1515474409.000035",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8NUBHAAV> has joined the channel"
        },
        "messageTs": "1515413802.000164",
        "messageUser": {
            "unUserId": "U8NUBHAAV"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8NMFD8JU> has joined the channel"
        },
        "messageTs": "1515395897.000047",
        "messageUser": {
            "unUserId": "U8NMFD8JU"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell界隈は厳しい。"
        },
        "messageTs": "1515382851.000040",
        "messageUser": {
            "unUserId": "U6M886B2M"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell関係ないですが，OSSの話題として Producing Open Source Software とかも面白いですよね．Webで無料で読めるのでぜひどうぞ\n<http://producingoss.com/en/index.html>\n日本語版もあります\n<http://producingoss.com/ja/>"
        },
        "messageTs": "1515343867.000104",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "どこのコミュニティでも一人でまくし立てて共有空間を占有するような行為は敬遠されますからね。手短な会話を。"
        },
        "messageTs": "1515340408.000045",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "もう落ち着いていますね:slightly_smiling_face:\n・OSSのコミュニティなので全面戦闘はOK、ただし、表現・言い回しには工夫が必要ですね:heart:\n・知らないことは間違えても良し、ただし、そのコミュニティを尊重するなら既存の文化・慣習を事前に知る努力は必要ですね:heart:\n・そして、最も読むべきSimon Peyton Jonesさんの文章のひとつ\n<https://mail.haskell.org/pipermail/haskell/2016-September/024995.html>\nその有り難い日本語訳が、最近のAdCの4にありますね。\n<https://qiita.com/rounddelta/items/41f8121795f5d8954802>\nEnjoy Haskell!:haskell:"
        },
        "messageTs": "1515337898.000055",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "わかりました。ありがとうございます"
        },
        "messageTs": "1515330021.000031",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "このグループの紹介ツイートは知ってましたし何回かRTもしました\nはい。節度は守ります。"
        },
        "messageTs": "1515329170.000107",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "まぁいいや、誰がどう入ろうと、節度を守って、なるべく誰も不快に思わないよう使っていただければ！ :pray:"
        },
        "messageTs": "1515329074.000037",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "えっ、ごめんなんか言ったっけ...?"
        },
        "messageTs": "1515328850.000004",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私がここに来たのは、ユウジさんに誘われたからです。皆様に迷惑をかけたって\nいろいろとルールを知らなかっただけですし\n方法を教えていただいて問題なく話は終わったと認識しています。"
        },
        "messageTs": "1515328595.000047",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "この辺使い出すと何でも `Monoid` と `foldMap` で解決したくなる\n<https://www.stackage.org/haddock/lts-10.2/monoidal-containers-0.3.0.2/Data-Map-Monoidal.html>"
        },
        "messageTs": "1515327945.000049",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "お仕事ハックに自分に手間をかけさせる形でコストを投下させ自分にコストをかける価値があると錯覚させる手法があります。埋没費用という別のハックにつなげるコンボの始動技です。結末はコンコルド旅客機。"
        },
        "messageTs": "1515326977.000023",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "誰であれあまりにも不適切な行動が続いたと判断した場合、然るべき措置を執ります。"
        },
        "messageTs": "1515325712.000037",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1515325101000035> も含め\nもろもろ承知しました。\nとりあえず、暴言は控えましょう。 :bow:"
        },
        "messageTs": "1515325626.000034",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "実はこいつがhaskell-jpに来たのは、私がこいつの危険性を直感でしか把握していなかったころにこのSlackチームを紹介してしまったためです。私の不注意ゆえにメンバーの皆様にご迷惑をおかけして、誠に申し訳ありません"
        },
        "messageTs": "1515325101.000035",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8P5W7YP6> なんか通知が来たと思ったらまたあんたか。いい加減あんたは人をサポートするどころか迷惑を掛けていると自覚したほうがいいし、エゴだと自覚していると言ったところでそれは免罪符にはならない。人の言葉に耳を傾けて自分を改めろ。さもなくばこの場から消えろ"
        },
        "messageTs": "1515324674.000005",
        "messageUser": {
            "unUserId": "U4KUNQF9N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます！！"
        },
        "messageTs": "1515312689.000010",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "全然関係ないのですが、私は昔、インフラ部隊におりました。\n男女関係なく厳しい世界でした。かなり鍛えられました。\nそんなこともわからないなら死んでこいなんてしょっちゅうで\nなんていうかすごく厳しく指摘してくださるのはとても私にとってありがたいですし、ふとその頃を思い出しました。脱線しましたが、今後ともよろしくおねがいします。\n　here channel は禁止と心に刻みますね:blush:"
        },
        "messageTs": "1515312398.000043",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "大変素晴らしい、ワクワクする記事で感謝してます！\n(スレッドになおしました。再投稿ですみません"
        },
        "messageTs": "1515312395.000018",
        "messageUser": {
            "unUserId": "U8LLBJ59Q"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "エゴだといったのは、そのままだからです。サポートしたい、助けたいというのは利他であって利己であるからです。それを知って気を使いなるべくみなさまのご迷惑にならない様にやってきました。其の点だけわかって頂きたいです。"
        },
        "messageTs": "1515312102.000003",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうですね。here と channelは　一生使いません。ご指摘ありがとうございました。"
        },
        "messageTs": "1515311980.000005",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "記事の間違いの指摘ではなく、書き方で色々アドバイスいただけるとは思いもよりませんでした。ただわからないままは怖いので指摘くださってありがとうございました。\n世界からの教授の現在のメッセージと、Haskeller以外のアンケートはとくにみていただきたいです。"
        },
        "messageTs": "1515311784.000023",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8P5W7YP6> どこに書くかや通知の点のみならず，現時点であなたのふるまいは「私は/私が〜」のみであり，\n実際にその結果・影響を受けとる人がどうなるかという視点がやや欠けているように見えます．\n具体的には「here,channel は緊急性を要するので基本NG」とかルールが存在していたとしても，\n「 *私は* 緊急or重要だと思った」等の判断で通知を押し付けてきそうだなぁと，失礼ですが考えてしまいます．\nあなたは「エゴです。それでかまいません。」で今まで行動してきてそれでよかったのかもしれませんが，\nその影響を受けてしまう相手がいる/いたということについても，もう少々でも思考を巡らせて頂ければ，\nこのコミュニティにとどまらず，あなたの人生もより過し易いものとなるものと思います．"
        },
        "messageTs": "1515311581.000072",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ちょっと見れないので後で確認させてください\n\n本当にシンプルに\nこれはやめましょうみたいなかんじでいいんですけど・・・\n初心者にはなかなかつたわりづらいかもしれません\n\nトレロはわたしもつかったことがありますので後でみます。失礼します。"
        },
        "messageTs": "1515311349.000030",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "OK, Trelloのアカウントを持っていれば、ですが続きは <https://trello.com/c/zkJRAxtj/77-slack-work-pace%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%82%A8%E3%83%81%E3%82%B1%E3%83%83%E3%83%88>\nでいいでしょうか？"
        },
        "messageTs": "1515311080.000031",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4LGTMTMK>   \nあっとhere,channel は緊急性を要するのできほんNGとか一言加えていただけると・・・"
        },
        "messageTs": "1515310843.000009",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "改めて作ろうかとも思いましたが、よく考えたらすでに最低限のことは書いています（もっと見やすいところに置くことは別途検討するとしても）。\n<@U8P5W7YP6>  :point_down: に書いたことでは不十分ですか？\n<https://haskell.jp/blog/posts/2017/01-first.html>"
        },
        "messageTs": "1515310709.000007",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U87FHPYS0> \n承知です。アドバイスありがとうございました"
        },
        "messageTs": "1515310299.000031",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "kazuさんが助けてくださってほんとうに嬉しかったです\nみなさんのごめいわくにならないようにしますね"
        },
        "messageTs": "1515310235.000035",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "蛇足ですが、今回であれば本文を書いた他に別に切り分けでgeneralにこういう議論してるからよければここに書いてるから見てねっていう風にすると良いと思いますね:)"
        },
        "messageTs": "1515310235.000033",
        "messageUser": {
            "unUserId": "U87FHPYS0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ほかにもあるかもしれないし"
        },
        "messageTs": "1515310206.000066",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "規約に含めて頂きたいのでそれはおねがいします。すいません"
        },
        "messageTs": "1515310198.000040",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "承知です"
        },
        "messageTs": "1515310171.000026",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U57DM8PBK> 承知です"
        },
        "messageTs": "1515310146.000027",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "はい。ちゃんと興味がある人は未読になっていれば後で読みます。\nメンションを送るときは、重要かどうかというより、緊急性が重要です。"
        },
        "messageTs": "1515310092.000011",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "細かいルールがわからないので\n規約？に含めていただけますと幸いです"
        },
        "messageTs": "1515310082.000072",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8P5W7YP6> <#C4LFB6DE0|general> に書くだけで、全員がその投稿を見ることになります。僕はそれで十分だったのではないかと思っています。通知には「急かす」役割も担っているので、よく吟味して本当に必要な場面だけで使っていただけるとありがたいです。"
        },
        "messageTs": "1515310064.000008",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "@here , @channel ですか？"
        },
        "messageTs": "1515310050.000038",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "とりあえず、原則として使わない方がいいと思います。"
        },
        "messageTs": "1515309978.000004",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "わたしは関係が深いとおもいました。知って欲しかったからです。"
        },
        "messageTs": "1515309867.000030",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "(正直場所を間違えるより注意すべき事項ですね)"
        },
        "messageTs": "1515309858.000003",
        "messageUser": {
            "unUserId": "U87FHPYS0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8P5W7YP6> Slackにおいて「通知が来る」投稿は「受け手にとって関係が深い」投稿です。\n特にhereやchannelを使う場合は、本当にそこにいる全員にとって「関係が深い」投稿かどうか注意深く考察してから利用していただきたいと思います。"
        },
        "messageTs": "1515309809.000046",
        "messageUser": {
            "unUserId": "U57DM8PBK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "reotaso [11:04 AM] \n場所が違ったら申し訳ありません。\n\n\n[11:05] \n一生懸命書いたのでご一読頂き、何かお気付きの点やご指摘がありましたらごいっぽうください。先生方の気持ちと日本にいるHaskellerの思いを届けたく。世界中のSPJ含む先生や教授、本の著者とメッセージをやりとりしました。\n\nそれではまだまだ続きますがこちらの件、お目通し、RTのほど何卒よろしくおねがいします。\n\nHaskell Advent Calender (その５)11日目、私が担当させて頂きました。\nSamuel Gélineau からの返信その1(翻訳) \n\n<https://qiita.com/reotasosan/items/cce796d32105a5f25854> (edited)\n\n\n\nmasako lee [11:24 AM] \njoined <#C4LFB6DE0|general>.\n\n\nkazu [1:07 PM] \n企業ではなく、起業ではないでしようか？\n\n\n[1:10] \nIBMを買はいない の意味が分かりません。\n直訳すると IBMを買って解雇された人はいない だと思います。\n\n\nmasako lee [1:44 PM] \n<@U56MBRKR9> 山本さんありがとうございます！早速修正させて頂きます。\n\n\nmasako lee [1:53 PM] \n<@U56MBRKR9> 山本さん、企業の訳ですが、companyなので一般的な企業だと思われます。\n仮に起業だとしたら、startupなどの言葉を使うのかなと思います。\nただcompanyは仲間という意味もあるのでSamuelに後ほど尋ねようと思います。\n\nIBMの件については、山本さんがご指摘くださったようにIBMを買ったからといって解雇された人はいない\nプラス意訳を加えるのであれば、30-40年前は、コンピューターと言えばIBMという時代がありました。\n故に新しい言語を採用するのはリスクが大きいと判断されました。\n意訳は加えた良いでしょうか？\n\nひとまず、IBMに関しては直訳をつっこみたいとおもいます。\nお忙しいところありがとうございます。 (edited)\n\n\nmatsubara0507 [2:24 PM] \n<@U8P5W7YP6>\n&gt; Choosing Haskell is still a bold choice at the moment. For example, a friend created a startup and chose Haskell for the backend,\n\n\n&gt; 2. Haskellを選択することは、今でも勇気が必要です。例えば、友人が企業してHaskellをバックエンドに使いました。\n\n\nこの部分の「企業」のコトでは？\n\n\nmasako lee [2:42 PM] \nああそっちのだったんですね。大変失礼しました。すぐ修正します。\n\nkazu [2:43 PM] \n先ほど携帯から入力したので、言葉足らずでしたが、そちらです。\n\nmasako lee [2:43 PM] \nかしこまりました。\n\n[2:44] \nIBMの補足についてはいかがしましょう。お手すきの際にお願いします。\n\n[2:45] \n修正しました\n\nkazu [2:50 PM] \n意訳の加筆は必要ないでしょう。原文は読者の知性を信頼しているような感じですし。:-) (edited)\n\n\nmasako lee [2:52 PM] \n承知です。またお気付きの点がございましたらお手すきの際にご指摘お願いします。ありがとうございます。\n\nkazu [2:58 PM] \n&gt; The reason the small number of available Haskellers makes it seem like hiring is going to be difficult is that with popular languages, it is often necessary to interview a large number of candidates before finding one which is worth hiring.\n\n\n[2:58] \nの訳ですが、\n\n[2:59] \nHaskellerの数が少なくて採用が難しいと思わせる理由は、多くの人気のある言語では、採用する価値のある人を見つけるには、しばしばたくさんの候補者に会う必要があるからです。\n\n[2:59] \nぐらいだと思います。\n\nmizunashi-mana [3:10 PM] \n“Haskellerの数が少ないために採用が難しいと思われてしまう理由は” ぐらいがいいのではないでしょうか？\n\n\nmasako lee [3:19 PM] \n文言編集しました。\n\n例えば10人のHaskellerをのなかで優秀な人を採用するのに1人だとして、\n人気言語は30人のうち2人か3人という認識であってますか？\n\n[3:19] \nそのくらいHaskellerが少ないという問題\n\nkazu [3:42 PM] \n他の言語ではたくさん合わないと良い人に巡り会えないが、Haskellだとすぐ良い人に出会うと言うことをマネージャーがわかってないと言うニュアンスです。\n\n\nnaohaq [3:43 PM] \nIBMの件、 \"IBMのPCを買ったという理由でクビになった人はいない\" (だからMacじゃなくてIBMにしておこう) というような観点では、Haskell は安全ではないように見える(Javaとかを選択した方が安全そうに見える) という意味を読み取るのにやや時間がかかりました^^;;\n\n\nmasako lee [3:45 PM] \n<!here>\nkazuさんがおしゃる「他の言語ではたくさん合わないと良い人に巡り会えないが、Haskellだとすぐ良い人に出会うと言うことをマネージャーがわかってない」と言うニュアンスです。これすごくわかりやすいです。でも前の訳の方が適してますか？\n\n\n[3:46] \n<!here>\nIBMの件、 \"IBMのPCを買ったという理由でクビになった人はいない\" (だからMacじゃなくてIBMにしておこう) というような観点では、Haskell は安全ではないように見える(Javaとかを選択した方が安全そうに見える) という意味を読み取るのにやや時間がかかりました^^;;\n\n\nこれについては、私も悩みまして、それで先ほど意訳プラスの\n「IBMの件については、山本さんがご指摘くださったようにIBMを買ったからといって解雇された人はいない\nプラス意訳を加えるのであれば、30-40年前は、コンピューターと言えばIBMという時代がありました。\n故に新しい言語を採用するのはリスクが大きいと判断されました。\n意訳は加えた良いでしょうか？」を加えた方が良いか尋ねました (edited)\n\n\n[3:50] \n<!channel>\nみなさま大変恐れ入りますが、これから仕事がありますので一旦スラックを閉じさせて頂きます。\n夜の10時近辺にまたお伺いします。お忙しい中ほんとうにありがとうございます。失礼いたします。"
        },
        "messageTs": "1515309544.000038",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8P5W7YP6> has joined the channel"
        },
        "messageTs": "1515291849.000080",
        "messageUser": {
            "unUserId": "U8P5W7YP6"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "遅れましたが、みなさまあけましておめでとうございます。:clap:"
        },
        "messageTs": "1515291097.000011",
        "messageUser": {
            "unUserId": "U8AEB7L21"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hirataraさん、typo情報有難うございました。 よく識別できますねすごい。"
        },
        "messageTs": "1515141271.000130",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHCの数値リテラル系のsyntax highlightについて書いておきました。\n<https://mail.haskell.org/pipermail/haskell-cafe/2018-January/128395.html>\n\nついでに、ほろ酔い（しらふです、仕事します）正月ポエムも。\n<https://qiita.com/takenobu-hs/items/dc85d455fef41c091383>\n\nHappy New Haskell! :haskell:"
        },
        "messageTs": "1515134468.000115",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私もHaskellで働いてみたくはある(˘ω˘)"
        },
        "messageTs": "1515055102.000109",
        "messageUser": {
            "unUserId": "U5P0CRDSP"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "名古屋で haskell ..."
        },
        "messageTs": "1515049956.000139",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://twitter.com/ogtkzk/status/948195793827069952?s=09>"
        },
        "messageTs": "1515049031.000123",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC 8.2.xのバグ直したいですよね。たまにぶつかりますし。\n今年は頑張ってpatchだしていきたいです。（新年の抱負ということで。）\n<https://ghc.haskell.org/trac/ghc/wiki/Newcomers>"
        },
        "messageTs": "1515034401.000046",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あけましておめでとうございます。"
        },
        "messageTs": "1515034273.000223",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8LFT6ESV> has joined the channel"
        },
        "messageTs": "1514895125.000265",
        "messageUser": {
            "unUserId": "U8LFT6ESV"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "QtとwxWidgetのバインディングはそもそもメンテされてなくて、gtkだけが命綱という状況がそもそもつらい……"
        },
        "messageTs": "1514853416.000029",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GUIの件、久々にGtk関係見ましたが、lts-10.xにはgtk3もgi-gtkも無いし、\nextra-deps追加してgi-gtkをビルドしても、GHC 8.2.xのバグでpanic起こすし、悲惨なことになってますね…:cry:\n\nとりあえず、lts-10.xでhaskell-giアプリを作成するための回避方法としては\n<https://github.com/haskell-gi/haskell-gi/wiki/Overloading#disabling-overloading>\nの方法で、overloadingを無効化してgi-gtkをビルドして、\nこちらで記述するアプリのソースも、OverloadedLabels拡張を使わないスタイルで記述する感じですね。\n※Window 7(64-bit)/lts-10.2でビルド確認済\n\nただ、GHCのバグが解決したら、再びOverloadedLabels拡張を使うスタイルが標準になることを思うと、\n今、OverloadedLabels拡張を使わないスタイルのソースを増やすのも何だかなぁ\nという感じです… :disappointed_relieved:"
        },
        "messageTs": "1514834916.000041",
        "messageUser": {
            "unUserId": "U8LLBJ59Q"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8LLBJ59Q> has joined the channel"
        },
        "messageTs": "1514711930.000068",
        "messageUser": {
            "unUserId": "U8LLBJ59Q"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ビルドできるようにprだそう"
        },
        "messageTs": "1514546339.000066",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GUIアプリケーションを作ろうと思ったんですが、色々試した結果lts-10系(ghc-8.2系)でビルドできるライブラリがそもそもないということが分かりました(泣いた)"
        },
        "messageTs": "1514543293.000214",
        "messageUser": {
            "unUserId": "U560KD6DN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なにができるのか気になってます"
        },
        "messageTs": "1514542148.000051",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/chrisdone/chaotic-ghc>"
        },
        "messageTs": "1514540912.000014",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なんと"
        },
        "messageTs": "1514535257.000078",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "型シグネチャーがないとき、再帰的に定義する関数に対するプログラマの意図が左辺にあらわれると見なすか、右辺の使用に現れると見なすかが変更になってますよね。"
        },
        "messageTs": "1514531136.000012",
        "messageUser": {
            "unUserId": "U4KU9ABL0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "江添さんのブログ <https://cpplover.blogspot.jp/2017/12/haskell_26.html>\nのGHCのエラーメッセージの話が興味深いですね。\nGHC 8 になったときに型の判定の仕方が変ったんですかねぇ。Release Notes にはそれらしい記述がないように思いますが。。。"
        },
        "messageTs": "1514530333.000029",
        "messageUser": {
            "unUserId": "U4KU9ABL0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "syocyさんの、「A tour of Go in Haskell」、 「the most popular links from Haskell Weekly in 2017」で6th:tada:\n<http://taylor.fausak.me/2017/12/28/haskell-weekly-in-2017/>\n\n今年もHaskell界からの豊富で多彩な情報で楽しませてもらいました。\nではこのへんで、皆さん良いお年を、Happy Haskell:haskell::bamboo:"
        },
        "messageTs": "1514516760.000152",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "頭おかしい(笑)"
        },
        "messageTs": "1514515350.000125",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "iruyanさん、sed での lisp 実装もあります。\n<https://news.ycombinator.com/item?id=10221515>\n<https://github.com/shinh/sedlisp>\n（Haskellから離た話題ですが、Lispがらみということで、まぁ:sweat_smile:）"
        },
        "messageTs": "1514515140.000042",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あ、いえ、脱糖のことは知らなかったので、面白くてためになりました！:+1:"
        },
        "messageTs": "1514514880.000024",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Brickって公式Twitterあったんですねｗ\n<https://twitter.com/brick_haskell/>"
        },
        "messageTs": "1514510871.000098",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど，僕がドキュメントを読み間違えていたようですね．結果的に脱糖に違いが出るってことなんですね．\n\nお騒がせしました"
        },
        "messageTs": "1514473222.000044",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Oh… シンタックス解釈に影響が出るんですね．知りませんでした…  特にUsers Guideに記載がなかったので，脱糖の仕方を `@negative @decimal` の時だけ変えるだけだと思ってました… Twitterの方は修正しておきます\n\nありがとうございます :bow:"
        },
        "messageTs": "1514472146.000209",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "mizunashiさん、別件です、NegativeLiterals について、脱糖の仕方が変わるというのは知りませんでした、よくdocumentを読み込まんでますね、すごい！\n\nただ、最近たまたまGHCのLexer.xのコードを読んでたのですが、NegativeLiteralsの設定によって、シンタックスに影響（変化）が出るようです。\nこの拡張を使うと、マイナスの符号がついた数値リテラルを、（カッコなしでも）負数として優先的に解釈しています。\n\n<https://github.com/ghc/ghc/blob/master/compiler/parser/Lexer.x#L494>\n\n例えば、通常は、マイナス記号は、数値の符号としては解釈されないで、マイナスの演算子として字句解析されているのでこういう結果になります。\n\n```\nPrelude&gt; 2 * -1\n&lt;interactive&gt;:16:1: error:\n    Precedence parsing error\n        cannot mix ‘*’ [infixl 7] and prefix `-' [infixl 6] in the same infix expression\n```\n\nですが、NegativeLiterals拡張を使うと、カッコでくくらなくても、`-1`のカタマリを数値リテラルとして直接、字句解析しています。\n\n```\nPrelude&gt; :set -XNegativeLiterals\nPrelude&gt; 2 * -1\n-2\n```\n\n以下も同様です。\n\n```\nPrelude&gt; :{\nPrelude| f (-1) = \"OK\"\nPrelude| f _ = \"NG\"\nPrelude| :}\n\nPrelude&gt; f (-1)\n\"OK\"\n\nPrelude&gt; f -1\n\n&lt;interactive&gt;:7:1: error:\n    • Non type-variable argument in the constraint: Num (a -&gt; [Char])\n      (Use FlexibleContexts to permit this)\n    • When checking the inferred type\n        it :: forall a. (Eq a, Num a, Num (a -&gt; [Char])) =&gt; a -&gt; [Char]\n\nPrelude&gt; :set -XNegativeLiterals\nPrelude&gt; f -1\n\"OK\"\n```\n\nと、ここまで書いて、そういう事を言ってるのではない？"
        },
        "messageTs": "1514471624.000269",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<#C8KBGEBR7|code-review> を立てました"
        },
        "messageTs": "1514448112.000218",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "( <#C4M4TT8JJ|random> を占領するのもアレだし、 <#C5666B6BB|questions> とは別に「既に書いたコードを添削して頂く」ためのチャンネルがあってもいいかも、と思うなどした）"
        },
        "messageTs": "1514448001.000128",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そういうことです、すごいHとReal World Haskellと「関数プログラミング 珠玉のアルゴリズムデザイン」ぐらいしか当時は読んだことがなかったもので（最近やっと「Haskell入門 関数型プログラミング言語の基礎と実践」を読んだ）"
        },
        "messageTs": "1514447861.000083",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうか。。。そういえばすごいH本とかじゃその辺教えないですもんね。。。 :disappointed_relieved:"
        },
        "messageTs": "1514447762.000026",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "テストにまで流用できるのですか、情報ありがとうございます"
        },
        "messageTs": "1514447649.000165",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "番号振ったのは…なんでだっけ（忘れた）"
        },
        "messageTs": "1514447564.000096",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "自プロジェクトをcabalizeできることを知ったのがコードを書き始めた後だったからです（完）"
        },
        "messageTs": "1514447479.000021",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "年末年始でゆっくり直していきます"
        },
        "messageTs": "1514447399.000179",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "帰宅したらたくさんのマサカリが来ていてありがたい限りです"
        },
        "messageTs": "1514447243.000012",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "インターフェイスとして露出させるならEitherTもといExceptTは嫌ですね。逆に外に漏らさないというメリットでもあるので、適材適所だと思います"
        },
        "messageTs": "1514442410.000006",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あと， <https://github.com/sozysozbot/akrantiain2/blob/master/Akrantiain/Pattern_match.hs#L86> これとかは現状コメントとしてなんですかね？ doctest(<https://github.com/sol/doctest>) を使うとこういうサンプルコードコメントをコメントの書式を変えるだけで Haddockでハイライティングされて，さらにテストに流用できるようになるので，おすすめですね．cabalパッケージ化すると，<https://github.com/phadej/cabal-doctest> がパッケージと依存一覧を自動生成してくれるようになるのでこれもおすすめです(cabalのバージョンが1.24以上じゃないと使えないのが難ですが)"
        },
        "messageTs": "1514439874.000097",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "それから， <https://github.com/sozysozbot/akrantiain2/blob/f1b741b11cea585f72ba2ce6c68cdf9411fa172e/akrantiain2.hs#L72> ですが，cabalのパッケージシステムを使うと，version情報をPaths_&lt;pkg&gt;というcabalが自動生成するモジュールから取れたりするので，その点でもcabalパッケージへの移行はおすすめですね"
        },
        "messageTs": "1514439150.000061",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうか。 `IO` が絡むから `&gt;&gt;&gt;=` なんて作ったのかな、と思っていたけど、よく見たら `IO (Either e a)` ですらないんですね。"
        },
        "messageTs": "1514438874.000035",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ところで，あんまり議論をよく見ていないんですが，このUIの良し悪しはともかくUIをそのまま守るなら，わざわざ `&gt;&gt;&gt;=` みたいな汎用的なインタフェースを用意しないで，こんな感じで書くのが好きですね\n```\n  ...\n  toks &lt;- pure &lt;$&gt; runParser toTokens () fname input `catchEither` \\e -&gt; do\n      printError e\n      exitWith $ ExitFailure TOKEN_FAILURE_CODE\n  ...\n\ncatchEither :: Either a b -&gt; (a -&gt; b) -&gt; b\ncatchEither e f = either f id e\n\nprintError :: (Show a) =&gt; a -&gt; IO ()\nprintError x = do\n  hPrint stderr x\n  hPutStrLn stderr \"\\n\\nPress Enter after reading this message.\"\n  void getLine\n```"
        },
        "messageTs": "1514438733.000041",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "確かに `ExceptT` については、局所的に使うのであれば、って感じですかね。。。"
        },
        "messageTs": "1514437959.000061",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "yesod monad, conduit monad, aws monad ..."
        },
        "messageTs": "1514436315.000045",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "違うモナド間の移動が発生するのは大変ですので、できれば避けたい。\nYesodでこりごりです。"
        },
        "messageTs": "1514436012.000018",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうですが、IOと一緒につかうExceptTは。。\n<https://www.fpcomplete.com/blog/2016/11/exceptions-best-practices-haskell>"
        },
        "messageTs": "1514435916.000029",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ところで， `EitherT` は非推奨になったので，使うなら `ExceptT` ですかね？\n<https://www.stackage.org/haddock/lts-10.1/either-4.5/Control-Monad-Trans-Either.html>"
        },
        "messageTs": "1514435724.000059",
        "messageUser": {
            "unUserId": "U57D08Z9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "コンストラクタ1つでその種類は番号を持たせることで識別するようなエラー型の設計はやや気になります．\nエラーが起きたときそれが何のエラーかを判定してワークアラウンドするなりというのはよくあることと思いますが，\nエラー番号で識別することになると識別(=パターンマッチによる)の網羅性が緩くなる懸念が発生します．\n種類毎にコンストラクタを定義して，番号が欲しい場合は数値への変換を別途定義しておくのが好ましいのではないかと．"
        },
        "messageTs": "1514433891.000118",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "確かに、そういう状況だと例外がいいですね"
        },
        "messageTs": "1514432393.000064",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "全部同じ型のエラーだったらその方がよさそうですね。\n`main` 関数のような、トップレベルに近い、「中の処理でいろいろな例外が起こりうるけどもう復帰できないから最後に最低限何が起きたのかログだけ書いておこう！」みたいな状況でを想定してました。（が、今回の場合全部同じエラーなのかな？）"
        },
        "messageTs": "1514431782.000043",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私だったら `EitherT` コンストラクタを被せてdo文で書くと思います(リンクはMaybeTですが似たような感じで書けるはず) <https://github.com/as-capabl/armageddon/blob/f5f6d676e00f508fe37efa77cedad89b58cf1023/app/Content.hs#L137>"
        },
        "messageTs": "1514431581.000047",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "パーサーの中ならExceptionもいいかもしれないですが。"
        },
        "messageTs": "1514431355.000054",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "どうなんでしょうね。パース結果がせっかくEither で来ているのにException?"
        },
        "messageTs": "1514431281.000052",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/sozysozbot/akrantiain2/blob/f1b741b11cea585f72ba2ce6c68cdf9411fa172e/akrantiain2.hs#L48-L59> らへんのエラー処理ですが、\n自分の場合、 `IO (Either e a)` みたいな値は `e` が `Exception` のインスタンスとなるように変換した上で :point_down: みたいな関数で処理することが多いですね。\n```\nthrowOnLeft = either throwIO return\n```"
        },
        "messageTs": "1514429776.000066",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そうです"
        },
        "messageTs": "1514427828.000064",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "igrepさんのは「自プロジェクトをcabalizeしなかった(.cabalファイルを作らない)のは何故ですか」という話ですよね ．\ndependenciesをinstallするとこの話じゃなくて"
        },
        "messageTs": "1514427801.000183",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/sozysozbot/akrantiain2/blob/master/Makefile#L6>\n実はcabalはつかっています。"
        },
        "messageTs": "1514427645.000092",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "まさか `Makefile` とは。。。なぜcabalも使わなかったのか逆に気になりますね。。。"
        },
        "messageTs": "1514426971.000061",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "もっとキレのいいマサカリが準備できるとよかったのですが。"
        },
        "messageTs": "1514425716.000036",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すみませんが、まだ中身は読んでいません"
        },
        "messageTs": "1514421624.000041",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ciやろう"
        },
        "messageTs": "1514421577.000071",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "テストはよくあるフレームワーク使おう"
        },
        "messageTs": "1514421529.000003",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "stack使ってない"
        },
        "messageTs": "1514421390.000074",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/sozysozbot/akrantiain2>\n自分がHaskellで書いたコードを置いておくとプロの方々がマサカリを投げてくださると聞いて"
        },
        "messageTs": "1514415773.000149",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/commercialhaskell/stack/issues/2240>\nダウンロード、s3直なのをどうにかしたいですね"
        },
        "messageTs": "1514414113.000038",
        "messageUser": {
            "unUserId": "U74KTAG0N"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "はい。プロセスが持てるfdの数が1024個だとすると、1024bitのデータをユーザースペースとカーネルとでやり取りする必要がありました。どんな定義になっているかはこちらの記事 <https://qiita.com/fujinochan/items/2337ce48a998cf67966b> で言及されています"
        },
        "messageTs": "1514364072.000126",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "数年前、PHPから乗り換えるって言ってたけど、GitHubにも動きがないし、Haskellerがいる気配もなくなってしまった"
        },
        "messageTs": "1514355034.000046",
        "messageUser": {
            "unUserId": "U5L06DM55"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ZaloraはHaskellやめちゃったんですかねえ <https://github.com/zalora/>"
        },
        "messageTs": "1514354986.000026",
        "messageUser": {
            "unUserId": "U5L06DM55"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最大値の数ビット分だけメモリーをあらかじめ確保する必要があった、っていうことですか？"
        },
        "messageTs": "1514344351.000040",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "先生と生徒 <https://github.com/hspec/sensei>"
        },
        "messageTs": "1514330132.000126",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今のLinuxカーネルにはepoll(*BSDでいうところのkqueue)があってfdの変化をイベントキューのようなインターフェースで待てるので、そのような制限をかける必要がなくなったと。"
        },
        "messageTs": "1514174058.000023",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "questionsの方でも書きましたが、Linuxは昔は複数のファイルディスクリプタ(fd)の変化を監視して待つシステムコールがselect(2)しかなかったんですよね。\nselectは変化を監視したいfdをビットマップで指定する(fd = nを待つ場合はビットnを立てる)ようなインターフェースになっているので、あまり沢山のfdは扱えないようになっていました。ビットマップをスキャンしたり更新したりするのはカーネルの負担になるので。"
        },
        "messageTs": "1514173807.000019",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あちこちで古いと言われてなぜか悔しかったので意地で更新しました。\n<https://qiita.com/igrep/items/da1d8df6d40eb001a561>\n残念ながら、追記が多くて読みにくくなってしまってはいますが。。。 :disappointed:"
        },
        "messageTs": "1514017190.000022",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC の 8.4.1のアルファ版のリリースについての補足です。 お楽しみ！:haskell:\n\n<https://www.reddit.com/r/haskell_jp/comments/7lm52h/ghc_841alpha1_available_ghc841%E3%81%AE%E3%82%A2%E3%83%AB%E3%83%95%E3%82%A1%E7%89%88/>"
        },
        "messageTs": "1513997414.000013",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8JGMG1QT> has joined the channel"
        },
        "messageTs": "1513964288.000077",
        "messageUser": {
            "unUserId": "U8JGMG1QT"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ではなおさら安いうちに買っておきたいですね！私は買います！"
        },
        "messageTs": "1513940812.000084",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Packt 社の品質は物によるそうですが <http://note.golden-lucky.net/2017/12/blog-post.html>"
        },
        "messageTs": "1513940538.000235",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://www.packtpub.com/application-development/haskell-design-patterns> も5ドルですって！"
        },
        "messageTs": "1513940141.000075",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "評判どうなんですかねー\nセールで5ドル\n<https://www.packtpub.com/application-development/haskell-high-performance-programming>"
        },
        "messageTs": "1513937708.000359",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8HCA22Q1> has joined the channel"
        },
        "messageTs": "1513853090.000070",
        "messageUser": {
            "unUserId": "U8HCA22Q1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`Data.ByteString.Internal` とか `Data.Array.Base` とか、export されているんだけど、ドキュメントはわざと隠してあるモジュールがあります。「コンストラクタを利用できない」と諦める前に、ソースを読むことを勧めします。"
        },
        "messageTs": "1513836452.000088",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Reddit, 公式よりもサードパーティーのアプリ使った方がよさげですね。\n私はReddit is funというのを使っています。\nそっちでは適切に改行されました。\n:thinking_face: どっかにまとめがあったよな。。。"
        },
        "messageTs": "1513820108.000073",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "スマホアプリで Reddit 見るとコード部分も改行が空白に変換されててつらい"
        },
        "messageTs": "1513814984.000203",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Redditでも投稿させて頂きました。"
        },
        "messageTs": "1513778267.000574",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IOHKは来年1月8日から3月2日の約２ヶ月間、Haskell及び暗号通貨の集中講義をバルベトス諸島で行います。（詳細はリンク先にて）優秀な応募者には奨学金も出るそうです。僕も参加します。興味ある方は是非！\n<https://iohk.recruiterbox.com/jobs/658adf4413b54402bccc39db36c9f8a8?utm_content=buffer587f4&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer>"
        },
        "messageTs": "1513775657.000289",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど。 EthereumでもPlasmaを使ってスマートコントラクトをスケールさせようとしてるみたいですが、Cardanoは最初からスケールの問題も考えて設計されてるんですね！"
        },
        "messageTs": "1513669107.000122",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "EthereumだとSLとCLは同じブロックチェーンだけど Cardano は分けてると考えていいんでしょうか？\nその考えで合っています。\n\n分けるメリットはトラフィックの分離とかですか？\nそうです。処理を分離することで負荷の分散し、スケーラビリティが実現できると考えています。（現在のブロックチェーンにはそれがない）\n送金を行うSLが主鎖となり、それとやり取りが可能なCLなどの側鎖が複数あることでネットワークを形成しているとの認識です。"
        },
        "messageTs": "1513668383.000070",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど！EthereumだとSLとCLは同じブロックチェーンだけど Cardano は分けてると考えていいんでしょうか？分けるメリットはトラフィックの分離とかですか？"
        },
        "messageTs": "1513666434.000013",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Settlement Layerは決済のみが行えるブロックチェーンですね（ビットコインと同じ仕組み）。今後分散型アプリケーションを処理するチェーン（Computation Layer)を開発し、SLとCLがやり取りをすることで分散型アプリケーションが実行できるようになります。"
        },
        "messageTs": "1513666292.000036",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "それはOuroborosがCrypto17という暗号学の学会で正式に認められたことだと思います\n<https://iohk.io/blog/proof-of-stake-protocol-ouroboros-at-crypto-17/>"
        },
        "messageTs": "1513666100.000035",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Settlement Layer みたいですねｗ\n本体はまた別？ :thinking_face:"
        },
        "messageTs": "1513656941.000055",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最初、sl って書いてあったから sl コマンドかと思ったけど、ぜんぜん違った"
        },
        "messageTs": "1513656837.000143",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "確かに12月初めからずっと上位にいますね <#C85U8HH0V|github-trends> "
        },
        "messageTs": "1513656245.000019",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GitHub のトレンドにあがってたやつだ"
        },
        "messageTs": "1513655916.000067",
        "messageUser": {
            "unUserId": "U56L7EVNY"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "採用されてるOuroboros PoS protocolってうまくいくことが証明されてるんでしたっけ…（気になってるけど読めてないorz）"
        },
        "messageTs": "1513655738.000229",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell製だ、すごい\n<https://github.com/input-output-hk/cardano-sl>"
        },
        "messageTs": "1513655548.000116",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IOHK が作ってる Cardano、最近韓国の取引所に上場して価格が高騰したやつですよね\n<https://prtimes.jp/main/html/rd/p/000000006.000030305.html>"
        },
        "messageTs": "1513655449.000166",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IOHKと日本の関わりに関しては以下のものが挙げられます\n- 東京工業大学にて暗号通貨共同研究講座を開講しています\n- ブロックチェーンの開発に<@U56MBRKR9> さんのDNSライブラリを利用しています"
        },
        "messageTs": "1513647043.000182",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "残念ながら僕はhaskell初心者でブロッチェーンの開発には携わってませんね。。！\nなので来月からバルベトス 諸島にて開かれるIOHKのhaskell教育プログラムに参加します！"
        },
        "messageTs": "1513640221.000246",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "おっ、HirotoさんもHaskellを書いていると勘違いして、日本人Haskellerもいる、ということをTwitterに書いてしまいましたが、もしかして間違いでしたか！"
        },
        "messageTs": "1513639440.000164",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "IOHKではHaskell開発者を募集しています。\n<https://iohk.io/careers/>\n主に募集しているのは\n- Haskell developer\n- DevOps\n- Software Test Engineer\n- Haskell Infrastructure Wrangler (これだけ特殊で、エディンバラにあるIOHKの研究室で働くことになります)\nです。\n私は直接Haskellの開発には携わっていないので開発環境、開発プロセスなど詳しいことはわかりませんが、会社の雰囲気とかお給料（社長に問い合わせます）に関しては答えられると思います。気軽に聞いてみてください！"
        },
        "messageTs": "1513599579.000010",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8G16FA59> has joined the channel"
        },
        "messageTs": "1513587683.000318",
        "messageUser": {
            "unUserId": "U8G16FA59"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "（土日は）よく使う"
        },
        "messageTs": "1513585584.000322",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8G3R30J0> has joined the channel"
        },
        "messageTs": "1513582489.000193",
        "messageUser": {
            "unUserId": "U8G3R30J0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "聞きたいことあります。全日本でhaskellを良く使ってる方が何人ぐらいいらしゃいいましか？"
        },
        "messageTs": "1513578286.000125",
        "messageUser": {
            "unUserId": "U8B59859T"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8FUVKG3Y> has joined the channel"
        },
        "messageTs": "1513299755.000099",
        "messageUser": {
            "unUserId": "U8FUVKG3Y"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8EJKMNVA> has joined the channel"
        },
        "messageTs": "1513240664.000050",
        "messageUser": {
            "unUserId": "U8EJKMNVA"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8DDVPNGZ> has joined the channel"
        },
        "messageTs": "1513161697.000045",
        "messageUser": {
            "unUserId": "U8DDVPNGZ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Servant のチュートリアルの認証関連のコードがバグっててはまった\n<http://haskell-servant.readthedocs.io/en/stable/tutorial/Authentication.html>\n<https://github.com/haskell-servant/servant/pull/780>"
        },
        "messageTs": "1513151987.000174",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8DR1FRRS> has joined the channel"
        },
        "messageTs": "1513125762.000326",
        "messageUser": {
            "unUserId": "U8DR1FRRS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "私は英語がだめです。\nなので、Chromeでページ丸ごと翻訳 ＋ Google翻訳で文ごとに翻訳して読んでから、作文もGoogle翻訳頼みで全開です！"
        },
        "messageTs": "1512883537.000056",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "PDF 版は無料です"
        },
        "messageTs": "1512882481.000027",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "宣伝なんですが、C# のパーサーコンビネーターライブラリーを attopersec を参考に CPS 変換してみた話を書いてあります\nLINQ はモナド用構文だ！\n<http://klabgames.tech.blog.jp.klab.com/archives/20171210ac.html>"
        },
        "messageTs": "1512882460.000001",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "とても嬉しいですが私の英語処理能力が足りなくてツライ！"
        },
        "messageTs": "1512880786.000025",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "fantastic、nice、fun、ということで、まだまだコメントきているようです、、、:slightly_smiling_face:"
        },
        "messageTs": "1512873406.000037",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "英語でコメントされるとちょっとビビりますね :slightly_smiling_face:"
        },
        "messageTs": "1512829939.000009",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4M598NHM>, 英語版のredditにリンクを勝手に貼っておきました。\nコメント来ているようなので、よろしくどうぞ^^\n\n<https://pay.reddit.com/r/haskell/comments/7ilhb9/a_tour_of_go_in_haskell/>"
        },
        "messageTs": "1512818923.000030",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8CJWHF0E> has joined the channel"
        },
        "messageTs": "1512734961.000262",
        "messageUser": {
            "unUserId": "U8CJWHF0E"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "アドカレ2日ぐらい空いてるなーと（まだ記事書けてないけど）その3の6日目を埋めたんですが、気付いたらその1〜3全部担当付きましたね"
        },
        "messageTs": "1512707885.000077",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "名詞以外とかオリジナルemojiも入れたらアルファベットでも結構いけちゃうもんですね。\n:open_mouth: -&gt; :haskell: -&gt; :lambda: -&gt; :apple: -&gt; :ear: -&gt; :ru: -&gt; :us: -&gt; :satisfied: -&gt; :doughnut: -&gt; :taxi: -&gt; :inbox_tray: -&gt; :yum: -&gt; :memo: -&gt; :orange_book: -&gt; :kissing: -&gt; :golf: -&gt; :full_moon: -&gt; :no_good:"
        },
        "messageTs": "1512638551.000035",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "しりとりは自分だったらこんな感じです． <https://gist.github.com/notogawa/a7d14ee02ca80a5729fdcb9b6788fb0c>"
        },
        "messageTs": "1512638140.000517",
        "messageUser": {
            "unUserId": "U5G2BCVBN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8B59859T> has joined the channel"
        },
        "messageTs": "1512633463.000045",
        "messageUser": {
            "unUserId": "U8B59859T"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "今回はQiitaの記事に突発的に反応する形になったのでQiitaへの投稿になってしまったのですが、次のカレンダー記事はHaskell-jp blogに投稿するつもりで計画してます(汗 <https://qiita.com/as_capabl/items/2031fe28e577e77dc269>"
        },
        "messageTs": "1512572744.000257",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Congrats! ghc-proposalsで、takanoさんの BlockArguments proposal が acceptされました。\n今後、GHCでの関数適用時に、演算子 `$` やカッコなしで、直接、 `do` や `case` や `if` や `let` や `\\x -&gt;` などを記述できるようになります^^\n\n<https://github.com/ghc-proposals/ghc-proposals/pull/90#issuecomment-349511990>\n<https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0010-block-arguments.rst>"
        },
        "messageTs": "1512564135.000077",
        "messageUser": {
            "unUserId": "U55V441FS"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U8AEB7L21> has joined the channel"
        },
        "messageTs": "1512534643.000111",
        "messageUser": {
            "unUserId": "U8AEB7L21"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Goにそのような経緯があるのは知らずに記事を書いてしまいました……。ご教示ありがとうございます。\n記事を書いているときにコルーチンという語を完全に忘れていた。。"
        },
        "messageTs": "1512389063.000125",
        "messageUser": {
            "unUserId": "U4M598NHM"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "OCamlの並行フレームワーク(名前は忘れました)でも、(&gt;&gt;=)相当の関数の中に yield() が隠されていたはず。"
        },
        "messageTs": "1512364726.000074",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<http://syocy.hatenablog.com/entry/a-tour-of-go-in-haskell>\n\n&gt; あとたぶん goroutine というのは軽量スレッドという言葉を言い換えたものだと思うのですが、 別の名前をつけることで言語固有のすごい機能として見せるのはうまい手だなと思いました。\n\ngoroutine は、おそらく co-routine のもじりです。goroutineは、昔は non pre-emptive (スケジューラが横取り不可能)だったので、自分でCPUタイムを譲る必要がありました。ただし、yield()する必要はなくて、入出力のAPIにこっそり隠れていたのがうまかったんだと思います。最近のgoのランタイムは進化していて、goroutineはpre-emptiveになったので、軽量スレッドと呼んでもよくなりました。間違っているかもしれませんが、僕の理解はこの通りです。"
        },
        "messageTs": "1512364355.000184",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U88QWFHJ7> has joined the channel"
        },
        "messageTs": "1512294025.000051",
        "messageUser": {
            "unUserId": "U88QWFHJ7"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U88NRUX26> has joined the channel"
        },
        "messageTs": "1512219817.000058",
        "messageUser": {
            "unUserId": "U88NRUX26"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ありがとうございます！さっそく <#C89028A6S|advent-calendar> 作りました〜"
        },
        "messageTs": "1512090877.000104",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KPPQW7K> Nice idea! やっちゃってください！ :pray:"
        },
        "messageTs": "1512090685.000173",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskell Advent Calendar 始まりましたね :tada:\nアドベントカレンダーのRSSを購読する #advent-calendar チャネル作っちゃってもいいですか？\n<https://qiita.com/advent-calendar/2017/haskell>\n<https://qiita.com/advent-calendar/2017/haskell2>\n<https://qiita.com/advent-calendar/2017/haskell3>"
        },
        "messageTs": "1512089740.000043",
        "messageUser": {
            "unUserId": "U4KPPQW7K"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U87QYA152> has joined the channel"
        },
        "messageTs": "1512055255.000364",
        "messageUser": {
            "unUserId": "U87QYA152"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U86V3B4PJ> has joined the channel"
        },
        "messageTs": "1512035579.000186",
        "messageUser": {
            "unUserId": "U86V3B4PJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U87FHPYS0> has joined the channel"
        },
        "messageTs": "1511999839.000143",
        "messageUser": {
            "unUserId": "U87FHPYS0"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "実際、警告に従って運算していったらEta reduceで引数なくせるだろ、と言われて微妙な気分になりました^^;"
        },
        "messageTs": "1511868159.000090",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "警告の前の文字列をコピペするだけです。"
        },
        "messageTs": "1511833245.000230",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`hlint --ignore=\"Eta reduce\"` とかで、ルールを排除できますよ。"
        },
        "messageTs": "1511833228.000139",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hlint をはじめて使ってみましたが、 `foldr (+) 0` は `sum` にしろとか、 `map (...) $ map (...)` は1個のmapにまとめろとか、なかなかアグレッシブな？指摘をしてくれますね"
        },
        "messageTs": "1511748339.000099",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U85FBE23C> has joined the channel"
        },
        "messageTs": "1511673295.000011",
        "messageUser": {
            "unUserId": "U85FBE23C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U84RD9F32> has joined the channel"
        },
        "messageTs": "1511671574.000026",
        "messageUser": {
            "unUserId": "U84RD9F32"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "了解です。ではリポジトリーのownerは hexirp さんのままでよろしくお願いします。\nほかに必要なことがあればなんなりといってください！"
        },
        "messageTs": "1511612576.000072",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "1&amp;2&gt;そうします。\n3&gt;実行時に使うslackのトークンはTravisCIの機能で暗号化しないといけないのですが、暗号化したものは暗号化した人のリポジトリでしか復号できない仕様になっています。そのため私がslackのトークンを設定/暗号化するのであれば譲渡はできないかと思います。あと、今使っている古いタイプのトークンはできる範囲が多すぎるため余り他人に渡したくないというのもあります。もしこれらを解決する良い方法が見つかったらその時でも譲渡は可能だと思いますので、とりあえず今は実際に動かしてみます。"
        },
        "messageTs": "1511612253.000056",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U84K1P2RE> has joined the channel"
        },
        "messageTs": "1511559653.000083",
        "messageUser": {
            "unUserId": "U84K1P2RE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "拡張可能レコードは別の機会に"
        },
        "messageTs": "1511529942.000373",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U4KPPQW7K> さんの Servant 入門記事と <@U56L7EVNY> さんの Elm との連携記事を読んだから土日やっていくぞ\n<https://qiita.com/lotz/items/883b41fa79f060e59efa>\n<https://matsubara0507.github.io/posts/2017-09-17-create-haskell-and-elm.html>"
        },
        "messageTs": "1511529898.000352",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "両方とも保守されてない感じだ。。。"
        },
        "messageTs": "1511509595.000128",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あれ、LinearTypesもまだですね.."
        },
        "messageTs": "1511502110.000128",
        "messageUser": {
            "unUserId": "U4L091RKK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskellコードのcyclomatic complexityを測るツールとして、Argonとかhomplexityがあるみたいなんですが、使っている人がいたら、使い物になるか教えてください。"
        },
        "messageTs": "1511494992.000036",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "通常通りであれば約半年に1回のペースで `LTS` のメジャーバージョンがアップデートされるので12月か1月ぐらいですかね？:thinking_face:"
        },
        "messageTs": "1511492787.000028",
        "messageUser": {
            "unUserId": "U5B3EGEFQ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Stackage NightlyへのGHC 8.2.2の導入も順調なようですね！\n<https://github.com/fpco/stackage/issues/3037>\n:sweat: .oO(LTSにはいつ入るのか...)"
        },
        "messageTs": "1511487192.000024",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U5LEE6C1J> \n(1) 差し支えなければ <@U5LEE6C1J> に取得・設定までお任せしたいのですが、何か懸念点はありますか？\n(2) チャンネルは適当に作ってしまってください。作った後のアナウンスも <#C4LFB6DE0|general> にやっていただけると助かります。\n(3) 差し支えなければ <https://github.com/haskell-jp> をownerにさせていただきたいです。"
        },
        "messageTs": "1511480634.000099",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "了解です。ちょっと詳細観て検討しますね。"
        },
        "messageTs": "1511479286.000062",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "気になっていることは連携できるサービスの数の制限を回避するために古いタイプのトークンを使っていること、そのトークンは自分で取得するか代表者に取得してもらうかどっちがいいのか、どのチャンネルに投稿するようにしたらいいのか、このリポジトリは公式ユーザー <https://github.com/haskell-jp> に送るべきか、といったことです。"
        },
        "messageTs": "1511427530.000242",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "投稿することが出来るようになりました。TravisCIのcron機能を使って実行し続ければOKだと思います。\n<https://github.com/Hexirp/github-trends>"
        },
        "messageTs": "1511427200.000132",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U84LW224U> has joined the channel"
        },
        "messageTs": "1511426979.000124",
        "messageUser": {
            "unUserId": "U84LW224U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "```\nisNothing                                                          \n  = \\ (@ a_a217) (ds_d21I :: Maybe a_a217) -&gt;\n      case ds_d21I of {\n        Nothing -&gt; GHC.Types.True;                         \n        Just ipv_s21X -&gt; GHC.Types.False\n      }\n               \nisNothing'     \n  = \\ (@ a_a210) _ [Occ=Dead] (x_a1TR :: Maybe a_a210) -&gt;\n      case x_a1TR of {                                        \n        Nothing -&gt; GHC.Types.True;                                  \n        Just a1_a22b -&gt; GHC.Types.False                      \n      }\n```\nisNothingがパターンマッチ、isNothing'が(==)です。"
        },
        "messageTs": "1511356487.000320",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Coreを見ると少なくとも8.2.1では同じコードにコンパイルされるようです。unfoldingは少し違いますが。"
        },
        "messageTs": "1511356432.000022",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これAMPが実装されたときによく見た物だと思います。たいていの場合 `import Prelude` を最後に置くとCPPなしで警告を避けられます。\n参考: <https://ghc.haskell.org/trac/ghc/wiki/Migration/7.10#GHCsaysTheimportof...isredundant>"
        },
        "messageTs": "1511356046.000171",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "bytestring-0.9.0.4からみたいですね。ByteString型はData.ByteStringとData.ByteString.Char8で同じで、かつインスタンスはモジュールではなく型に紐付く物なので、 `import Data.ByteString.Char8 ()` は不要ではないかと思いました。"
        },
        "messageTs": "1511355826.000505",
        "messageUser": {
            "unUserId": "U4M9NJ7QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "少なくとも前者はxが `Eq a =&gt; Maybe a` でないといけないので後者の方が汎用的なコードではありますね(パフォーマンスのことは知りません)"
        },
        "messageTs": "1511341418.000349",
        "messageUser": {
            "unUserId": "U560KD6DN"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "x == Nothing も isNothing を使えと言われるんですが、== だと辞書渡しになるから遅いんですかね？"
        },
        "messageTs": "1511337341.000139",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "unsafePerformIO を NOINLINE してないことも指摘されました。"
        },
        "messageTs": "1511337303.000053",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hlint がまた強力になっていて、昔出さなかった suggestion を出すようになっています。"
        },
        "messageTs": "1511337278.000066",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "魔法のようです。素晴らしいです。"
        },
        "messageTs": "1511326034.000038",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://github.com/kazu-yamamoto/dns/blob/master/Network/DNS/Imports.hs>"
        },
        "messageTs": "1511325964.000064",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "こんなモジュールを作成し、必要なら import すれば OK です。"
        },
        "messageTs": "1511325963.000037",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Data.MonoidやControl.Applicativeのimport関係で、GHCのバージョンによって警告が出たり出なかったりする問題ですが、この度 #ifdef を使わない画期的な解決方法が発見されました。"
        },
        "messageTs": "1511325934.000143",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "import Data.ByteString.Char8() しまくりだった。"
        },
        "messageTs": "1511317188.000091",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "知らなかった。。。"
        },
        "messageTs": "1511317174.000075",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC 7.6 以降、Data.ByteString が IsString のインスタンスを export していたのか！"
        },
        "messageTs": "1511317171.000023",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "あら、そうなのですね"
        },
        "messageTs": "1511315329.000060",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "著者が音信不通で、みんな心配しています。"
        },
        "messageTs": "1511315247.000245",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "『本物のプログラマは Haskell を使う』今の情報に更新して本の形にまとまってほしい\n<http://itpro.nikkeibp.co.jp/article/COLUMN/20060915/248215/>"
        },
        "messageTs": "1511314597.000198",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHCが Haskell コードをコンパイルする速度が上がるみたいだけど、どれくらい速くなるのかなぁ。"
        },
        "messageTs": "1511167124.000204",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "hadrian は入る。"
        },
        "messageTs": "1511166949.000168",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "DependentHaskell は入らないみたい。"
        },
        "messageTs": "1511166920.000047",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://ghc.haskell.org/trac/ghc/wiki/Status/GHC-8.4.1>"
        },
        "messageTs": "1511166910.000277",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHC 8.4 はこんな感じ："
        },
        "messageTs": "1511166909.000391",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://hackage.haskell.org/package/dns> ですね！"
        },
        "messageTs": "1511149795.000035",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "WindowsでデフォルトのDNSサーバを探したり、複数のDNSサーバが見付かった/指定されていたら、一斉にクエリを出して一番早い応答を採用したりと、すぐれものです。"
        },
        "messageTs": "1511149737.000005",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "DNSライブラリ v3.0.0 をリリースしました。"
        },
        "messageTs": "1511149670.000126",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U826HT001> has joined the channel"
        },
        "messageTs": "1511101387.000097",
        "messageUser": {
            "unUserId": "U826HT001"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "日本語 UI の Slack 見慣れなくて違和感"
        },
        "messageTs": "1510895388.000080",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U819ERB44> has joined the channel"
        },
        "messageTs": "1510813070.000014",
        "messageUser": {
            "unUserId": "U819ERB44"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Cabal 2.1 を要求しているから、簡単には試せないやん。"
        },
        "messageTs": "1510795612.000126",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Haskellに関するアンケートにご協力ください。\n<https://www.surveymonkey.com/r/fpcomplete-haskell-survey>"
        },
        "messageTs": "1510794890.000064",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "GHCのビルドをshakeベースにしたのは、Hadrianって言うんですね。\n<https://github.com/ghc/ghc/tree/master/hadrian>"
        },
        "messageTs": "1510794847.000105",
        "messageUser": {
            "unUserId": "U56MBRKR9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "すいません、「後は」と言った通り投稿まではまだ出来ていません。後でやるつもりなのでしばしお待ちください。現在はstackを使いビルドして実行すると、slackに投稿する予定の文が表示される形です。完成したらREADMEに手順を書いておきます。"
        },
        "messageTs": "1510788264.000065",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なるほど。RSSフィードもないみたいなんでちょうど良さそうですね！詳しい手順だったり、設定に必要な情報を書いておいていただけますか？"
        },
        "messageTs": "1510748776.000128",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "前書いたこれですが、スクレイピングするやつを作りました。後はこれをtravisとかで定期的に実行してslackに送信すればいちおう購読できるという形になります(手作り感が否めないですが)\n<https://github.com/Hexirp/github-trends>"
        },
        "messageTs": "1510748069.000110",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U80GXHF6Y> has joined the channel"
        },
        "messageTs": "1510724048.000010",
        "messageUser": {
            "unUserId": "U80GXHF6Y"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7ZPSL3QE> has joined the channel"
        },
        "messageTs": "1510476749.000034",
        "messageUser": {
            "unUserId": "U7ZPSL3QE"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "アナウンスしたとおり、作りました。 <#C7Y71415W|math>"
        },
        "messageTs": "1510454702.000020",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://haskell-jp.slack.com/archives/C4M4TT8JJ/p1510026276000184>\nそういえばこれもHaskellからちょっと外れすぎか。。。\nなんでこのときは気にならなかったんだろう。いずれにしても数学チャンネルを作ったほうがよさそう。"
        },
        "messageTs": "1510454157.000027",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "本題と異なるので敢えてThreadは生やしませんが、ちょっとHaskellから外れた質問なのが悩ましいですね。\n以前圏論の本を読んでいたときも思ったのですが、\n圏論用（あるいはHaskellに関連する数学の諸分野？）用のchannelを別途作った方がいいのかも知れません。"
        },
        "messageTs": "1510454078.000025",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "「同型を除いてただ1つ存在する」というのは体としてなのですか？ベクトル空間としてなのですか？"
        },
        "messageTs": "1510453705.000021",
        "messageUser": {
            "unUserId": "U7JQH5CP5"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7YPZHR5Z> has joined the channel"
        },
        "messageTs": "1510452914.000106",
        "messageUser": {
            "unUserId": "U7YPZHR5Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7YMV774J> has joined the channel"
        },
        "messageTs": "1510397422.000027",
        "messageUser": {
            "unUserId": "U7YMV774J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7ZPASHB9> has joined the channel"
        },
        "messageTs": "1510379434.000014",
        "messageUser": {
            "unUserId": "U7ZPASHB9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<https://twitter.com/mod_poppo/status/928606973876101120>"
        },
        "messageTs": "1510379348.000046",
        "messageUser": {
            "unUserId": "U5LEE6C1J"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7Z4F723Z> has joined the channel"
        },
        "messageTs": "1510278661.000046",
        "messageUser": {
            "unUserId": "U7Z4F723Z"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7XGESRSQ> has joined the channel"
        },
        "messageTs": "1510219739.000315",
        "messageUser": {
            "unUserId": "U7XGESRSQ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7XC5U1RR> has joined the channel"
        },
        "messageTs": "1510216762.000348",
        "messageUser": {
            "unUserId": "U7XC5U1RR"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7W1XE04Q> has joined the channel"
        },
        "messageTs": "1510113695.000086",
        "messageUser": {
            "unUserId": "U7W1XE04Q"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "↑ちょっと議論が雑すぎました。"
        },
        "messageTs": "1510112554.000054",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7X2WF99C> has joined the channel"
        },
        "messageTs": "1510060442.000178",
        "messageUser": {
            "unUserId": "U7X2WF99C"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "n次の別の生成多項式 q(x) をもってきたとき、{α^{2^k}} を基底とする表現で q(x)=0 の根βが求まったとすると(←求まるはずだけど要証明)、やはり同様に β^2, β^4, ... , β^{2^n} も q(x)=0 の根になり、これらは線形独立なn本のn次元ベクトルになります(←これも要証明)。したがって q(k) を生成多項式とする体と p(k) を生成多項式とする体との対応はn本の基底 {β^{2^k}} からn本の基底 {α^{2^k}} への線形写像で表すことができ、ベクトル空間として同型になります。"
        },
        "messageTs": "1510028227.000176",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "n次の原始多項式 p(x) について、α を p(x)=0 の根とすると、α^2, α^4, ... , α^{2^(n-1)} も p(x)=0 の根になります。(∵ GF(2) 上の多項式 f(x) について、 f(x^2) = (f(x))^2 )\n生成多項式を p(x) としたとき、GF(2^n) の元は α, α^2, α^4, ... , α^{2^(n-1)} を基底とし、係数体をGF(2)とする n次元のベクトルとして表現でき、和とスカラー倍について線形ベクトル空間を構成します。"
        },
        "messageTs": "1510027244.000014",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "そういえば、先日のもくもく会で given n∈ℕ について GF(2ⁿ) が「同型を除いてただ1つ存在する」という主張について <@U57CGDBMG> さんに「そうなの？」と聞かれた件ですが、めちゃくちゃ大雑把にですがなんとなく理解したような気がします。"
        },
        "messageTs": "1510026276.000184",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7URL21G9> has joined the channel"
        },
        "messageTs": "1509945665.000130",
        "messageUser": {
            "unUserId": "U7URL21G9"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "最近TidalCyclesというライブラリに興味を持ち始め、\nHaskellをかけるようになりたいと思い、Slackに参加させていただきました。\nよろしくおねがいします。"
        },
        "messageTs": "1509944810.000083",
        "messageUser": {
            "unUserId": "U7VCQPXDJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7VCQPXDJ> has joined the channel"
        },
        "messageTs": "1509944602.000110",
        "messageUser": {
            "unUserId": "U7VCQPXDJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "これ、まだ読んでないけど、ちゃんと読んで系統的に理解したい。 今の自分の代数的実数の実装は系統的な理解に基づいた系統的な実装、という感じではないので。"
        },
        "messageTs": "1509936075.000027",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7VAVLWQL> has joined the channel"
        },
        "messageTs": "1509926532.000114",
        "messageUser": {
            "unUserId": "U7VAVLWQL"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7V6G63LJ> has joined the channel"
        },
        "messageTs": "1509892035.000022",
        "messageUser": {
            "unUserId": "U7V6G63LJ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "ちなみに、「週刊 代数的実数を作る」 <https://miz-ar.info/math/algebraic-real/> のサンプルコードは全面的にHaskellで書かれています"
        },
        "messageTs": "1509855271.000002",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "Yesod で relational-record を使うための部分を分離しました\nとりあえず、自分の使ってた部分と `Database.Relational.Query.Documentation` の IO アクションを。\n<https://github.com/kakkun61/yesod-relational-record>"
        },
        "messageTs": "1509802931.000022",
        "messageUser": {
            "unUserId": "U4L0B71L1"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "なんとなく便乗で :grin: 、自作の toysolver パッケージに入れてある代数的実数の実装で計算してみました。\n```\n*ToySolver.Data.AlgebraicNumber.Real&gt; 1 / (nthRoot 2 2 + nthRoot 2 3 + nthRoot 2 5 + nthRoot 2 7)\nRealRoot (fromTerms [(1 % 46225,mfromIndices []),((-136) % 46225,mfromIndices [(X,2)]),(6476 % 46225,mfromIndices [(X,4)]),((-141912) % 46225,mfromIndices [(X,6)]),(1513334 % 46225,mfromIndices [(X,8)]),((-7453176) % 46225,mfromIndices [(X,10)]),(13950764 % 46225,mfromIndices [(X,12)]),((-1119368) % 9245,mfromIndices [(X,14)]),(1 % 1,mfromIndices [(X,16)])]) (Finite (0 % 1) &lt;..&lt;= Finite (666573 % 4403200))\n```\n多項式 `x^16 - 1119368/9245 x^14 + 13950764/46225 x^12 - 7453176/46225 x^10 + 1513334/46225 x^8 - 141912/46225 x^6 + 6476/46225 x^4 - 136/46225 x^2 + 1/46225` の実根のうち  `(0, 666573/4403200]` に含まれる根というのはわかったけれど、有理化には使えなかった…… (当たり前)"
        },
        "messageTs": "1509788145.000024",
        "messageUser": {
            "unUserId": "U4MA78F6X"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "割り算すると分母に無理数を含まない形で結果が求まりますw\n```\n*Q2357&gt; 1 / (root2 + root3 + root5 + root7)\n(37 % 43)√2 + ((-29) % 43)√3 + ((-133) % 215 + ((62 % 215)√2)√3)√5 + (27 % 43 + (((-10) % 43)√2)√3 + (((-34) % 215)√2 + (22 % 215)√3)√5)√7\n```"
        },
        "messageTs": "1509604674.000121",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "有理数体の拡大体 ℚ(√2,√3,√5,√7) を作ってみました^^;;; <https://gist.github.com/naohaq/5ffc8a7ea6be11c27fdea37a462dea8f>"
        },
        "messageTs": "1509604330.000144",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "前に 1/(√2+√3+√5+√7) の分母の有理化( <https://twitter.com/kamo_hiroyasu/status/852512487740030979> )という話題がTwitterで流れていたので、"
        },
        "messageTs": "1509604262.000239",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "デフォルトにして欲しいオプションにArrowsを入れた以外は真面目に回答してみた"
        },
        "messageTs": "1509553649.000504",
        "messageUser": {
            "unUserId": "U570660KX"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "haskell weeklyがhaskellユーザ調査をやっているようです！\n<https://haskellweekly.news/surveys/2017.html>"
        },
        "messageTs": "1509550351.000574",
        "messageUser": {
            "unUserId": "U5P0CRDSP"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "haskell-jpに入ってから幽霊部員してたのでしばらく経ってますが年末が近くなって幽霊部員から脱却したいなと思ったのでまたこれからよろしくお願います\nquestionチャンネルでお世話になるかもしれません"
        },
        "messageTs": "1509544402.000002",
        "messageUser": {
            "unUserId": "U5J6ELW3S"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "<@U7U0GSX9U> has joined the channel"
        },
        "messageTs": "1509525001.000144",
        "messageUser": {
            "unUserId": "U7U0GSX9U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`&lt;$&gt;` と組み合わせて使っていないところが意外と面白い所かなと思っています:grinning:\n\nあと使っている関数が遅延評価版のフィボナッチ数列の式と似ているので、そっちと間違えた (?) 人が多かったです。\n\n```\nfib = 0 : 1 : zipWith (+) fib (tail fib)\n```\n\n一応、正解は `奇数の無限リスト` です。"
        },
        "messageTs": "1509340002.000032",
        "messageUser": {
            "unUserId": "U5B3EGEFQ"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": "`((-&gt;) a)` が Applicative の instance で、\n```\nf :: ((-&gt;) a) b -&gt; c\ng :: ((-&gt;) a) b\n```\nのとき、\n```\nf &lt;*&gt; g :: ((-&gt;) a) c\n(f &lt;*&gt; g) x = f x (g x)\n```\nとなるから……ってことですね"
        },
        "messageTs": "1509337649.000082",
        "messageUser": {
            "unUserId": "U61BA2X0U"
        }
    },
    {
        "messageType": "message",
        "messageText": {
            "unSlackMessageText": ":serval: すごーい！\n<https://twitter.com/waddlaw/status/924513731890921473>"
        },
        "messageTs": "1509257931.000009",
        "messageUser": {
            "unUserId": "U4LGTMTMK"
        }
    }
]
