[
    {
        "text": "HLSはLSPの仕様にはないVSCode特有の機能は使わない（LSPの範囲内で機能を提供する）という方針なので、あとはクライアント側（VSCode / emacs / vim）がLSPをどうやってどの範囲までサポートしているか、ということが問題になってきますね",
        "type": "message",
        "ts": "1651396985.571669",
        "user": "UK0MXUCAV"
    },
    {
        "text": "VSCodeで eval や import まわりなどの薄字で出てくるアクションは LSP では Code Lens と呼ばれる機能なので、使っているクライアントで code lens をどう使うのかを調べればよさそうです ",
        "type": "message",
        "ts": "1651397083.857859",
        "user": "UK0MXUCAV"
    },
    {
        "text": "codelens の踏み込んだ設定方法等は書いてないみたいですが、vim に限らず主要なエディタでの HLSの使い方は、こちらの公式ドキュメントに書かれていたりします\n<https://haskell-language-server.readthedocs.io/en/latest/configuration.html#vim-or-neovim|https://haskell-language-server.readthedocs.io/en/latest/configuration.html#vim-or-neovim>",
        "type": "message",
        "ts": "1651397309.169359",
        "user": "UK0MXUCAV"
    },
    {
        "text": "<@U03DNG36U67> has joined the channel",
        "type": "message",
        "ts": "1651413843.624429",
        "user": "U03DNG36U67"
    },
    {
        "text": "<@U03E8FDQAF5> has joined the channel",
        "type": "message",
        "ts": "1651764691.534079",
        "user": "U03E8FDQAF5"
    },
    {
        "text": "<@U03DUKNQL3H> has joined the channel",
        "type": "message",
        "ts": "1651771721.942629",
        "user": "U03DUKNQL3H"
    }
]