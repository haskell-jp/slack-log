[
    {
        "ts": "1590209571.151300",
        "text": "ぼ、僕もPureScriptやってるので…((()))",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1590209618.151900",
        "text": "そ、それはサーバーがHaskellなんでセーフで！ :sweat:  :male-judge:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590209804.153100",
        "text": "作るもの思いついた。\n自作Haskellアプリの放置度を可視化するツールを Haskell で作ります！\n（今漁ろうとしてめんどいなってなった）",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590209860.153400",
        "text": "定期的に依存 Stackage LTS アゲアゲをするんですけど、自作ツールが多すぎて。。",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590209913.154100",
        "text": "まずツールの名前を考えるのに数時間溶けます（あるある？",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590209964.155100",
        "text": "qualified do の提案読んでたら graded monad というのがあって、既存コードが実は graded monad なのでは？と思って `Control.Effect.Effect` のインスタンスにしようと思ってたら地味にできなくてボツになって\n<http://hackage.haskell.org/package/effect-monad-0.8.1.0/docs/Control-Effect.html>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1590210064.155800",
        "text": "`Inv` が `type Inv m (f :: k) (g :: k) a b` ならできたのに",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1590210658.158600",
        "text": "外出中なのでエア参加で。今日はグラフ/図式描画ライブラリの Chart をいじりました。<https://hackage.haskell.org/package/Chart|https://hackage.haskell.org/package/Chart>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1590210792.160600",
        "text": "めちゃめちゃ高機能で複雑なAPIになってますが、 Easy なInterfaceも用意されててそちらからだとかなりサクッと使えます",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1590210954.163100",
        "text": "それぞれのexampleにEasy helperを使ったバージョンとstateful interfaceを使ったバージョンが併記されてます <https://github.com/timbod7/haskell-chart/wiki|https://github.com/timbod7/haskell-chart/wiki>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1590214138.163500",
        "text": "とりあえず雛形\n<https://github.com/matsubara0507/deps-sensor>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590214689.163900",
        "text": "落ちてたCIが直りました :clap:\n<https://circleci.com/gh/lotz84/recursion-algorithms/17>",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1590217836.166200",
        "text": "<@U4KPPQW7K> <@U59TQ3MJ9> 運営ガイド作りました。ご査収ください。\n次回以降、イベントページの作成と告知は前の会の担当者が行うことにします。\nなので <@U4KPPQW7K> さんは次回の分もやることになってしまいますがあしからず :pray:\n<https://wiki.haskell.jp/Workshop/hasmoku/OrganizerGuide>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590221373.166500",
        "text": "FFIでちょっとずつJSからPSに移行していきます\n<https://book.purescript.org/chapter10.html>",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1590224295.166700",
        "text": "ここまでできた\n```$ stack exec -- deps-sensor\nmatsubara0507/deps-sensor: lts-15.13\nmatsubara0507/git-plantation: lts-15.5\nhaskell-jp/antenna: lts-14.20```",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590224400.167500",
        "text": "*<!here>* そろそろ時間です！\n今日やったことを軽くご共有いただけると幸いです hask(_ _)eller",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1590224480.169100",
        "text": "<https://haskell-jp.slack.com/archives/CUPBC8WCE/p1590217836166200> のとおり運営ガイドを作りました。\n運営に協力していただける方は随時募集中です。\n一月か二月に1回どこかの土日に参加できるなら十分でしょう。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590224532.170800",
        "text": "あ、あと、まつばらくんから報告いただいた <https://github.com/haskell-jp/slack-log/issues/42> の解決に向けてslack-webパッケージのソースやSlackのAPIのドキュメントを読んでました",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590224572.171800",
        "text": "ごにょごにょして、発散、Deadlock、Live lock、意図しない処理順入れ替わり、と色々発生しましたが、何とか順次実行モデルと並行モデルの作成が一部完了しました。TINA便利です。\n<http://projects.laas.fr/tina//>",
        "user": "U57A2859S",
        "type": "message"
    },
    {
        "ts": "1590224753.177400",
        "text": "bifunctor を導入するために元のデータ型を多相にして,クラス宣言をMultiParamTypeClasses にしてなど順番にしていました.\n取り敢えずbifunctorには出来たけれど失ったものも多そうです.\nbiforldableがあると無理やり作っていた偽mapをいい感じにできそうなので次はそれをやろうと思っています.\n\n<https://github.com/yakagika/ExchangeAlgebra/commit/2348298b9d00cd83bc36b1c4f776603c673130ea>",
        "user": "UEC0PN1PA",
        "type": "message"
    },
    {
        "ts": "1590224759.177700",
        "text": "elm-license-checker に、purescript-optparse を使ってコマンドラインオプションを扱う機能が増えました",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1590224805.178800",
        "text": "興味本位なんですけど、なんでPureScript製なんすか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1590224846.179600",
        "text": "開発環境の構築と調査で終わってしまいました。\n・Hyper-vにFreeBSDをインストール\n・FreeBSDにHaskell開発環境等をインストール\n・上記の各種設定(初期設定)\n・ipfwのソースコード確認\n\n私的に運用しているサーバの管理を楽にしようと、急遽思い立ったのですが、いろいろと忘れてて事前準備に時間がかかってしまいました",
        "user": "UU0KWNXRN",
        "type": "message"
    },
    {
        "ts": "1590224966.182700",
        "text": "TODO: 帰ったら積分をシンプソンの公式使ったものに書き換える",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1590224978.182800",
        "text": "指定した Haskell Stack プロジェクトリポジトリの resolver を一覧表示してくれるツールを作成しました\n<https://github.com/matsubara0507/deps-sensor>\n```$ stack exec -- deps-sensor\nmatsubara0507/deps-sensor: lts-15.13\nmatsubara0507/git-plantation: lts-15.5\nhaskell-jp/antenna: lts-14.20```",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590225078.183900",
        "text": "追々、Webページの生成と <http://packdeps.haskellers.com> っぽい機能を足したりするつもりです。",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1590225123.184000",
        "text": "まず、Elm プロジェクトの依存ライブラリーのライセンス一覧を取得するツールです。\n• Elm プロジェクトはほぼ NPM プロジェクトでもあるので NPM パッケージとして提供すると親和性がいい\n• Elm で作らなかった理由としては Elm で CLI ツールを作れると知らなかったから",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1590226328.186600",
        "text": "オプションの実装等できていない箇所は多々あるのですが、基本的な動作までは動くことができました\n<https://github.com/kwhrstr/httplabkell>",
        "user": "UD34X8SGZ",
        "type": "message"
    },
    {
        "ts": "1590226717.188400",
        "text": "今日は勉強したりダラダラ本読んでたら終わってしまいました・・・継続モナドをどう使うのかがいまいちあまりわかってません。",
        "user": "U55V45LQ0",
        "type": "message"
    },
    {
        "ts": "1590226815.189400",
        "text": "haxl試してましたが、途中脱線してたりして進捗悪かったです\nもうちょっとコード書いた後ブログ書いたりしたい",
        "user": "U59TQ3MJ9",
        "type": "message"
    },
    {
        "ts": "1590226938.189500",
        "text": "継続モナドの応用例、たなこふさんの記事とか参考になるかもです :eyes:\n<https://qiita.com/tanakh/items/81fc1a0d9ae0af3865cb>",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1590227218.189900",
        "text": "継続モナドの詳しい説明があるわけじゃないですけど、応用例の紹介記事です\n<https://haskell.e-bigmoon.com/posts/2018/06-26-cont-param.html>",
        "user": "U56L7EVNY",
        "type": "message"
    }
]