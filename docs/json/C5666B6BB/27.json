[
    {
        "ts": "1535474190.000100",
        "text": "うーん、なんででしょう...",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1535474514.000100",
        "text": "コピペミスしてるわけでもないみたいですし…うーん…",
        "user": "UC42RRAVC",
        "type": "message"
    },
    {
        "ts": "1535474547.000100",
        "text": "これもまたフラグが必要なものだったりしますか？",
        "user": "UC42RRAVC",
        "type": "message"
    },
    {
        "ts": "1535475485.000100",
        "text": "BangPatterns\nLambdaCase\nが必要です。",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1535475789.000100",
        "text": "BangPatternsをつけたらビルドできました！\n```\n(Nil,0)\n(Bool True,1)\n(Bool False,2)\n(UInt8 1,3)\n(UInt16 2,5)\n```\nおかげさまでやりたかったことができました！遅くまで本当にありがとうございました！",
        "user": "UC42RRAVC",
        "type": "message"
    },
    {
        "ts": "1535695926.000100",
        "text": "ちょっと前出てきたすごい長い英語のHaskell入門書ってなんていうんでしたっけ。書名が出てこない... :thinking_face:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535695965.000100",
        "text": "Get programming with haskell ですか？",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1535696026.000100",
        "text": "多分それです！確か割とお勧めされてましたよね？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535696066.000100",
        "text": "僕はまだ読んでる途中なので、まだレビューできていないです:innocent:",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1535697599.000100",
        "text": "<http://haskellbook.com/> のことだったかも！まぁ両方紹介しとくか！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535705759.000100",
        "text": "質問です。遊びでRedditのようなものを作ってたのですが。`Comment`のArbitraryインスタンスで躓いています。。\n<https://gist.github.com/HirotoShioi/94367f655bd0fb00e5acb27be1ed29eb>\n`runSumComment 100`\nと実行するとランダムなコメントをn個生成してその統計を取っているのですが、StackOverFlowで実行エラーになります。\n\n```\ndata Comment = Comment\n    { cId          :: !Integer\n    , cAuthor      :: !User\n    , cParentId    :: !(Maybe Integer)\n    , cPoint       :: !Int\n    , cDescription :: !Text\n    , cResponse    :: ![Comment]\n    } deriving Show\n```\n\n原因はcResponseがコメントのリストだからねずみ講の要領でとんでもない量のコメントに膨れ上がってるからだと睨んでます。\nできればコメントの返信の総数を200以下に留めたいのですが、それは可能なのでしょうか。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1535706091.000100",
        "text": "総数ではなく深さを200に制限することになりますが、愚直にやるなら\n\n```\narbitrary = go 0\n where\n  go depth = do\n    ...\n    cResponse &lt;-\n      if depth == 200\n        then pure []\n        else vecorOf listLen $ go (depth + 1)\n    pure Comment {..}\n```\n\nですかね。\n（総数も各 `cResponse` の `length` をとって足し合わせればできるかな...?）",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535706189.000100",
        "text": "あとは自分で試したことがないので自信がないのですが、 <http://hackage.haskell.org/package/smallcheck> を使えば大きさを指定した上でのテストができます。\n「任意の文字列のコメントに対してテスト」みたいなことはできなくなってしまいますが。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535706367.000100",
        "text": "ほかには、  `cResponse` の `!` を外すとメモリ消費量はめっちゃ増えそうですがstack overflowはしないかもしれません。\n（ :warning: これも試さないで想像で言ってます！）",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535721701.000100",
        "text": "igrep さんのやり方でもいいと思いますが、 `sized` と `scale` を使うのがより正当なやり方かもしれません。 <http://hackage.haskell.org/package/QuickCheck-2.11.3/docs/Test-QuickCheck-Gen.html>\n```\narbitrary = scale (min 200) $ sized $ \\size -&gt; {- 最大でsize個のcResponseを持つCommentを生成する処理-}\n```\n（今手元に環境がないのでコードは適当です）",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1535901196.000200",
        "text": "<@UCM4G8PGW> has joined the channel",
        "user": "UCM4G8PGW",
        "type": "message"
    },
    {
        "ts": "1535961077.000100",
        "text": "ありがとうございます！`size`のことに関して調べてみます！",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1535967508.000100",
        "text": "ICFP行く人います？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1535967751.000100",
        "text": "HIWとHaskell Symposiumだけ行きます。 :raised_hand:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1535975668.000100",
        "text": "確か <@U4KNU6N48>さんは本体も参加されるんでしたっけ？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536013461.000200",
        "text": "<@UBF17AM6U> has joined the channel",
        "user": "UBF17AM6U",
        "type": "message"
    },
    {
        "ts": "1536316959.000100",
        "text": "行きます！strangeloopも参加します。",
        "user": "U4M5LDXK9",
        "type": "message"
    },
    {
        "ts": "1536494452.000100",
        "text": "mapM, filterM, じゃ物足りなくて、maximumByMとかなんでも欲しくなりません？\nそりゃあやろうと思えばfoldMで書けるんでしょうけども。\nあとずいぶん前に insertWithKeyM も欲しくなったかなぁ。\nなんかいい方法ありませんかねぇ。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536494521.000100",
        "text": "おお、maximumByM はあったか！\n<https://www.stackage.org/haddock/lts-12.9/monad-loops-0.4.3/Control-Monad-Loops.html#v:maximumByM>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536511131.000200",
        "text": "<@UCPNXSSGL> has joined the channel",
        "user": "UCPNXSSGL",
        "type": "message"
    },
    {
        "ts": "1536738218.000100",
        "text": "ちょっと困ってるんですが、みなさん `stack --resolver lts-12.9 repl --package iCalendar-0.4.0.4 --package mime-0.4.0.2` と実行したらどうなります？\n（特にMacの人）\n<https://www.reddit.com/r/haskell/comments/9f5ovv/link_error_with_icalendar0404/>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536738840.000100",
        "text": "",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1536738881.000100",
        "text": "全く同じエラーみたいですね。。。\n再現性が高いようで良かった。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536738983.000100",
        "text": "",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1536739035.000100",
        "text": "Macですかね。やっぱりLinux版とよく似たエラーですな。。。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536739149.000100",
        "text": "シンボルテーブル見ると未定義となっており入ってない． `Paths_iCalendar` モジュールのシンボルなので，\n`<https://github.com/chrra/iCalendar/commit/91fc4ac7abdae0bed42f0282fe39c6072a88397f>` が原因？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1536739482.000100",
        "text": "確かに <https://github.com/chrra/iCalendar> をcloneしてビルドすると\n```\n&lt;no location info&gt;: warning: [-Wmissing-home-modules]\n[ 1 of 10] Compiling Paths_iCalendar  ( .stack-work\\dist\\7d103d30\\build\\autogen\\Paths_iCalendar.hs, .stack-work\\dist\\7d103d30\\build\\Paths_iCalendar.o )\n    These modules are needed for compilation but not listed in your .cabal file's other-modules: Paths_iCalendar\n```\nなどと出ますね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536739552.000100",
        "text": "ああー、報告されてた。これっぽいですね！ありがとうございました！\n<https://github.com/chrra/iCalendar/pull/30>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536902722.000100",
        "text": "ICFP 行きます。",
        "user": "U4KNU6N48",
        "type": "message"
    },
    {
        "ts": "1536916236.000100",
        "text": "こちらの質問に関連している論文が、今度のHaskell Symposium 2018に投稿されてましたので共有いたします。\n再帰的なデータ構造の `Arbitrary` をどうするか、というのは結構難しい問題みたいでして。\n<https://arxiv.org/pdf/1808.01520.pdf>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1536981440.000100",
        "text": "おお、ありがとう。連休中に読んで見ます。前に講義の課題でトライ木のArbitraryインスタンスを定義してたなーと思って見直したらえらい難解でした。。\n<https://gist.github.com/HirotoShioi/94ca87534be2144250fa10b61c7ce0d8>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537417014.000100",
        "text": "Persistent PostgreSqlに関する質問です。\n以下の記事にそって`createdAt UTCTime default=CURRENT_TIME`と設定しました。\n<https://www.yesodweb.com/book/persistent#persistent_attributes>\n\nしかしマイグレーションの際に以下のエラーメッセージが出力されます。\n\n```\n*** Exception: SqlError {sqlState = \"42804\", sqlExecStatus = FatalError, sqlErrorMsg = \"column \\\"created_at\\\" is of type timestamp with time zone but default expression is of type time with time zone\", sqlErrorDetail = \"\", sqlErrorHint = \"You will need to rewrite or cast the expression.\"}\n```\n\nこれに対する回避策はあるのでしょうか。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537417909.000100",
        "text": "代わりに，now()を使うのはどうでしょう？\n<https://github.com/yesodweb/persistent/blob/master/docs/Persistent-entity-syntax.md#default>",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1537418378.000100",
        "text": "ありがとうございます。やってみます。なにやらTimeZoneに関する記事がリンクされてますので、それも読んでみます。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537418765.000100",
        "text": "Postgresでは，timestamp型のデフォルト値用にCURRENT_TIMESTAMPとnow()がサポートされています(なので，CURRENT_TIMESTAMPを使っても良いと思いますね)．\n<https://www.postgresql.jp/document/10/html/functions-datetime.html>",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1537418833.000100",
        "text": "いけました！ありがとうございます。\n調べてみるとpostgresqlにおけるcurrent_timeはその日の時刻のみ（日付はない）返すようです。。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537418848.000100",
        "text": "<https://www.postgresql.jp/document/7.2/user/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537504617.000200",
        "text": "<@U57MR0SQ7> has joined the channel",
        "user": "U57MR0SQ7",
        "type": "message"
    },
    {
        "ts": "1537518614.000200",
        "text": "<@UCZJAMHL6> has joined the channel",
        "user": "UCZJAMHL6",
        "type": "message"
    },
    {
        "ts": "1537542160.000200",
        "text": "<@UCZRZLXDL> has joined the channel",
        "user": "UCZRZLXDL",
        "type": "message"
    },
    {
        "ts": "1537767864.000200",
        "text": "<@UCXV98292> has joined the channel",
        "user": "UCXV98292",
        "type": "message"
    },
    {
        "ts": "1537847261.000100",
        "text": "`catchAnyDeep`, `tryAnyDeep`より更に評価を強制する関数ってありますかね。。\nこれらの関数を用いてもキャッチできない例外があって困ってます。（しかも部分関数からの例外です。。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537853925.000100",
        "text": "なんとか解決できました！",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1537920700.000100",
        "text": "HackerRank の `Substring Diff` <https://www.hackerrank.com/challenges/substring-diff/problem> の Haskell での解法を教えて下さい　Python ならば通る方法（２次元のテーブルを作り二分探索）を使うと　n = 1500 のテストケースで Data.Array メモリーエラーになりました",
        "user": "U584T7GAH",
        "type": "message"
    },
    {
        "ts": "1537964991.000100",
        "text": "書いてみたけど TLE なってしまった",
        "user": "U4L0B71L1",
        "type": "message"
    }
]