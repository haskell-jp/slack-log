[
    {
        "ts": "1550827439.024100",
        "text": "お二方とも、ありがとうございます！！修正してみます！",
        "user": "UF797SSBC",
        "type": "message"
    },
    {
        "ts": "1550827561.024300",
        "text": "部分関数という概念を初めて知ったんですが、「定義されていないパターンマッチが残る関数」って解釈であってますか？",
        "user": "UF797SSBC",
        "type": "message"
    },
    {
        "ts": "1550828758.024500",
        "text": "パターンマッチに限った話ではなく、全域で定義されていない関数のことを言うと思います。例えば除算も実は部分関数ですね（0で割る場合に定義されない）",
        "user": "UF8SE896V",
        "type": "message"
    },
    {
        "ts": "1550835086.025100",
        "text": "なるほど！理解しました！",
        "user": "UF797SSBC",
        "type": "message"
    },
    {
        "ts": "1550849389.025400",
        "text": "純粋な計算は値を求める(だけ)というのに対し，effectもside-effectもそれとは違うという感覚では同じなのですが，effectとside-effectとでは，観点が少々違うという印象です．effectは，計算の環境というか文脈を差し替えるような計算．side-effectは従来の命令的プログラミングにおいては参照透明性のない記述が必要になるような計算という印象です．",
        "user": "U4KU9ABL0",
        "type": "message"
    },
    {
        "ts": "1550850512.025600",
        "text": "呼ばれたような気がする．\n:relaxed:\nHaskell Sudoku でググルと沢山でてきますよ．ついでにステマ(死語?)\n<https://amzn.to/2Tg4DcO>",
        "user": "U4KU9ABL0",
        "type": "message"
    },
    {
        "ts": "1550878170.025900",
        "text": "純粋関数が言語で、命令言語でいう side-effect をどう扱うかという課題に対し、monad による progiramming with effect が考え出されたという説明になっています。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1550878259.026100",
        "text": "なので、この文脈では、side effect の一般化が effect ではないかと。effect だと、IO もその振る舞いを狙ってやってるんだみたいなニュアンスが出てるのかも。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1550880281.026600",
        "text": "Hutton本第二版の謝辞に\nTomoyas Kobayashi\nさんという名前があります。\n\"u\"が抜けているのではないかとか、漢字に直すべきですか、とか質問したいのですが、Huttonさんに教えていただいたメールアドレスは user unknown になってしまいました。\nこの方をご存知の人はいませんか？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1550884240.026700",
        "text": "同一人物かはわかりませんが Scala mailing list archive にその表記のまま投稿している方がいるので，\n<http://www.scala-archive.org/template/NamlServlet.jtp?macro=user_nodes&amp;user=15217>\nScala界隈にも聞いてみたほうがいいかもしれませんね．\nただ 2008 年以降の投稿は見付からないので，つながらないかも．",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1550893443.029600",
        "text": "申し訳ない、Hutton本というのを読んだことがないので軽く調べた限りでは、 @huskellhutt というハンドルの方がツイッターに居るのですが、おそらくその方と同一なのではないかなと。",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1550893923.029800",
        "text": "それは「Hutton氏が自身の別名義であるTomoyas Kobayashiを謝辞に並べた」「Hutton氏がkazuさんに自身の別名義のしかも無効なメアドを教えた」ってことになるんですが何か元の質問を誤解してませんか？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1550893971.030000",
        "text": "haskellhuttさんは、著者のHuttonさんのようですね。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1550897491.033400",
        "text": "この質問の私の理解は、 Hutton本の著者になんとかして連絡したい、連絡先が分かる方はいるか。 ですが。 何か問題ありました？",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1550898419.033600",
        "text": "その解釈だと，メールアドレスを教えて頂いたこともあるHuttonさん=kazuさんにとって既知の人物，を対象として「この方をご存知」かと問うていることになるので，おかしいと思います．\nこの質問文面でkazuさんが「この方をご存知」か問うに値する対象はTomoyas Kobayashiさんのほうであり，質問は\n\nHutton本第二版の謝辞に\nTomoyas Kobayashi\nさんという名前があります。\n\"u\"が抜けているのではないかとか、漢字に直すべきですか、とか(Tomoyas Kobayashi当人に)質問したいのですが、Huttonさんに教えていただいた(Tomoyas Kobayashiの)メールアドレスは user unknown になってしまいました。\nこの方(=Tomoyas Kobayashi)をご存知の人はいませんか？\n\nだと読み取ってるんですが，実際どちらが質問の意図なんでしょう？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1550898973.033800",
        "text": "私は参加したことなくて，これだけの情報から推して知るのも私にはちょっと難しいので参加したことある人に純粋に質問なんですが，どんなコミュニティなんでしょう？",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1550899124.033900",
        "text": "わいわいしゃべりながらめいめいがめいめいの作業をやってる感じです。Haskell-jpもくもく会よりもしゃべる比率がかなり高めでしたね。\nあと、Meetupで英語で募集していることもあってか、外国の方が大半を占めることが多いです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1550899921.034200",
        "text": "当てこすりのつもりではないですが、実際にHaskellを使うこととはあまり関係のないおしゃべりの割合が多い(私に言わせれば、\"なんか違う\")印象を受けました。オーガナイザのYasuaki KudoさんがHaskellを使っているところも一度も見たことがないです",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1550901993.034500",
        "text": "notogawa さんの解釈であってますよ。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1550903335.035700",
        "text": "notogawaさんの情報を見て「Tomoyasu Kobayashi scala」でググったら「Programming in Scala」の謝辞に「Tomoyasu Kobayashi」という方が載っていました。この本は 2011年ですか。",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1551059253.036400",
        "text": "土日はバタバタしていてお返事が遅くなりましたが、ありがとうございました。\nScalaコミュニティにはコネがないので、Twitterで聞いてみます。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1551072487.037700",
        "text": "構成子が一つの data が、newtype のようにオーバーヘッドなしでは扱われない理由って、何かありますか？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1551072779.037900",
        "text": "補足：格納する型も1つの場合です。newtype として扱えるのに、なぜそういう最適化がなされないのか知りたいです。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1551073400.038100",
        "text": "WHNF に違いがあったような\nStrictData なら newtype に変えても意味変わらないかもですね",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1551073702.038300",
        "text": "bang 付きとも違うようでした\n<https://haskell.e-bigmoon.com/posts/2018/06-25-all-about-strictness#newtype-%E3%81%AE%E8%88%88%E5%91%B3%E6%B7%B1%E3%81%84%E3%82%B1%E3%83%BC%E3%82%B9>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1551073985.038600",
        "text": "挙動が変わるので、最適化できないんですね。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1551077805.038900",
        "text": "<@UGGMPMRM5> has joined the channel",
        "user": "UGGMPMRM5",
        "type": "message"
    },
    {
        "ts": "1551079956.040200",
        "text": "皆さんの中で、CRLFでHaskellのソースを書くよ、という方はいらっしゃいますか？いたら :heavy_check_mark: のemoji reactionかこのスレッドに返事をください（押しやすいように私があらかじめ追加しておきます）。\nWindowsでエディターの設定を特に変えずに書いている場合も該当する可能性があります。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1551085999.041000",
        "text": "途中で気付いて、後で一括変換しようと思いながら、今もそのままになってるやつがあります……",
        "user": "U570660KX",
        "type": "message"
    },
    {
        "ts": "1551086245.041300",
        "text": "日常的にCRLFで書くことを想定してましたが、それはありそうですね。。。\n実は本件を聞こうと思ったきっかけが、hsimportというツールを使ってみたら処理したファイルがすべてCRLFになってしまってどうしたもんかと思ったことだったんで、気づかなかったらそのまま私もCRLFでコミットしていたかも... :disappointed_relieved:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1551087467.043600",
        "text": "git関連なら core.autocrlfをinputにしとけば勝手にCRLFはLFに変換されるので(LFで開発してるなら) 便利ですよ。",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1551087733.044000",
        "text": "「それぐらいエディタの設定でやるわい！」という思いとその手の自動変換への恐怖で避けてましたが、この際それは一案ですね... :thinking_face:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1551104395.044600",
        "text": "<@UGF77SWNL> has joined the channel",
        "user": "UGF77SWNL",
        "type": "message"
    },
    {
        "ts": "1551105448.048100",
        "text": "Haskell入門 (本間、類地、逢坂)を読んでおります。p224において、\nclass Triple a where\n    triple :: a -&gt; a\ninstance Triple String where\n    triple s = s ++ s ++ s\n と定義されておりますが、どうやらinstanceではStringはそのままでは定義できないようです。代替として、instanceにおいてStringを入れる方法は存在するのでしょうか。",
        "user": "UGF77SWNL",
        "type": "message"
    },
    {
        "ts": "1551105833.048200",
        "text": "`String`を `newtype`で包んであげるか、 `TypeSynonymInstances`のGHC拡張を入れてあげると行けると思います",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1551105873.048500",
        "text": "参考 <https://qiita.com/7shi/items/17a1567a635af17fc83f#%E5%9E%8B%E3%82%AF%E3%83%A9%E3%82%B9>",
        "user": "U7155GPR9",
        "type": "message"
    },
    {
        "ts": "1551108768.048800",
        "text": "どうもありがとうございます。newtypeで出来ました。言語拡張の方法も後に試してみようと思います。",
        "user": "UGF77SWNL",
        "type": "message"
    },
    {
        "ts": "1551110263.049200",
        "text": "<@UGHG1RKDL> has joined the channel",
        "user": "UGHG1RKDL",
        "type": "message"
    },
    {
        "ts": "1551137334.049800",
        "text": "正誤表にもありました！\n<https://gihyo.jp/book/2017/978-4-7741-9237-6/support>\n\n&gt; P.224　下部のリスト\n&gt; コードの一番上に{-# LANGUAGE FlexibleInstances #-}を追加します。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1551158489.050400",
        "text": "<@UGHR31EDD> has joined the channel",
        "user": "UGHR31EDD",
        "type": "message"
    },
    {
        "ts": "1551223425.051000",
        "text": "<@UGH60TV17> has joined the channel",
        "user": "UGH60TV17",
        "type": "message"
    },
    {
        "ts": "1551244900.051800",
        "text": "WSL Ubuntu 18.04 から Visual Studio Code を立ち上げると Editor の default EOL は auto ですから　ほとんどの directories で CRLF になります",
        "user": "U584T7GAH",
        "type": "message"
    },
    {
        "ts": "1551248189.052100",
        "text": "それは、さすがに既存のLFなファイルを開いた場合はLFのままですよね？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1551257355.052600",
        "text": "ふと思ったんですけど、型クラスReadってどれくらい優秀なんですか？\nread . show == id\nが成り立つデータ型なら、それがどれだけ複雑になったとしてもRead可能なのかなーと気になりました。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1551257401.052800",
        "text": "逆に\nread . show == id\nであってもreadできないものってありますか。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1551258522.053200",
        "text": "標準の Read クラスの場合、 readsPrec の設計思想の範囲でまともなパーザが書けるか？という話になるかと思いますが、たぶん（性能を気にしなければ）ひたすら分岐してやり直す形のパーザならば書けそうだと思います。ただしデータ構造の複雑度のべき乗で遅くなりそうな気はするので、それを「Read 可能」と言っていいかどうか…\nで、それだと効率がわるいということで ghc の Read クラスは拡張されてるみたいですね（今調べて知ったのですが^^;）。 <http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Read.html>",
        "user": "UF8SE896V",
        "type": "message"
    },
    {
        "ts": "1551258856.053500",
        "text": "おおう、ありがとうございます。このモジュールに書いてあるコメントを読んでみます。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1551259811.054300",
        "text": "気になった理由としては、Readには地雷があって、いずれ踏み抜くんじゃないかとふと思ったからです。",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1551260063.054400",
        "text": "速さを気にするなら、遅いのでデバッグ用途や書き捨てぐらいの気持ちで使った方がいい気はします",
        "user": "U4L0B71L1",
        "type": "message"
    }
]