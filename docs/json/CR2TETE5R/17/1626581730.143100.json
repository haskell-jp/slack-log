[
    {
        "ts": "1626581730.143100",
        "text": "初心者です。\nこのサイト（<https://wiki.haskell.org/99_questions/Solutions/3>）に\nfun n xs = xs ! !  (n - 1)と\nfun = (last . ) . take . ( + 1)が\n同じと書かれているのですがよくわかりません。\n特に(last . ) . というのが何を表しているのかが分からないのですが、これはなんなのですか？",
        "user": "U02580P7H5J",
        "type": "message"
    },
    {
        "ts": "1626590884.145500",
        "text": "まず、ご存知だとは思いますが `.` は関数合成をする右結合の演算子です。\n次に、 `(  ) . take . (  )` というのは、この3つの関数を合成することを意味します。\nさらに、`(last .)` というのはセクション記法で、「関数を受け取って、その関数に `last` を合成したものを返す」ものです。\n\n流れは以下のようになります。\nまず、整数 `n` が `fun` に入ってきます。\n`n` は関数 `(+ 1)` の作用を受けて `n + 1` になります。\nさらに、関数 `take` の作用を受けて、「リストを受け取り、リストの最初の `n+1` 個を返す関数」になります。\n最後に、 `(last .)` の作用を受けます。これにより、上記の関数は\n「リストを受け取り、リストの最初の `n+1` 個を返」したあと「そのリストの一番最後の値を返す」ような関数に変換されます。\nこれは、リストの `n` 番目（ただし `n` は1-indexed）で取得する関数と等価になります。",
        "user": "U021XMH7NDT",
        "type": "message"
    },
    {
        "ts": "1626604476.149600",
        "text": "とてもわかりやすかったです。\n教えていただきありがとうございます。",
        "user": "U02580P7H5J",
        "type": "message"
    }
]