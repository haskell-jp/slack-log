[
    {
        "ts": "1574235741.117100",
        "text": "一例を挙げます。\n環境: stack を使っています。それによって GHC 8.6.5, cabal 2.4.0.1 が使われています。 cabal-install はちょっとわかりません。\ncabal ファイル: <https://github.com/Hexirp/hexirp-hakyll/blob/e6b28eaf95031baf6193c8bd4bb652eefa31f70b/hexyll/hexyll.cabal>\nログ (on Travis CI): <https://travis-ci.org/Hexirp/hexirp-hakyll/builds/614356184>",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574236389.117500",
        "text": "<https://github.com/haskell/cabal/issues/5022> 曰くパッケージそのもののバージョンではなく依存パッケージのバージョンのことを言っている可能性もありますね... でもぱっと見おかしなところがわからない。 :confused:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1574236757.117900",
        "text": "この変更から hexyll に関する `Cabal file warning ***.cabal@0:0: version with tags` というエラーがなくなっているようなのですが、手掛かりになりますでしょうか\n<https://github.com/Hexirp/hexirp-hakyll/commit/2f857cd001109d7587ab4e82f8f15e40d5c746aa>",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574236872.118200",
        "text": "もしかしてライセンスの GPL-3-or-later という指定が原因……？",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574237570.118400",
        "text": "cabal がバージョンとライセンスに同じ処理をかけていたりしているかもしれないですね",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574245196.118700",
        "text": "確かに、cabalはどっかのバージョンでLICENCEで使用できる値を変えたのでそれが関係しているかも知れません",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1574269430.119000",
        "text": "<@UQSDZ5E8M> has joined the channel",
        "user": "UQSDZ5E8M",
        "type": "message"
    },
    {
        "ts": "1574296238.119300",
        "text": "<@U5U85FXSQ> has joined the channel",
        "user": "U5U85FXSQ",
        "type": "message"
    },
    {
        "ts": "1574333349.119500",
        "text": "hpack に移行したら `GPL-3.0-or-later` と license に書いてもエラーが出なくなりました。 cabal へ変換した後の内容は前と同じはずなのに……",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574347809.119800",
        "text": "<@UQGDTBMV1> has joined the channel",
        "user": "UQGDTBMV1",
        "type": "message"
    },
    {
        "ts": "1574426028.120100",
        "text": "cabal-version がファイルの先頭にない場合、旧バージョンのファイルとして前処理されます。 SPDX の式が書けるのは、新バージョンからなはずです。詳しく見てないので断言できませんが、それが関係してる気がしますね",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1574426105.120300",
        "text": "hpack はその仕様が出来てから cabal-version を最初に吐き出すようになったはずですね",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1574427495.120600",
        "text": "Oh… 適当を言うのはやっぱだめですね．手元で試せる環境ができたので試しましたが，まず cabal は 1.2 からファイル仕様に関してバージョン指定ができ，どのファイル仕様を使うか cabal-version で指定できるようになりました．で， cabal-version: x.y と指定するのが普通ですが，\ncabal-version: >=1.10\ncabal-version: >=2.0\nだけ特別扱いされ，それぞれ 1.12 の形式と 2.0 の形式が選ばれます．\n\nで， 2.2 の形式から license に書ける式が変わっており，旧来は cabal 独自の形式だったのが SPDX expression で指定するようになりました．\n独自の形式の AST は， <http://hackage.haskell.org/package/Cabal-3.0.0.0/docs/Distribution-License.html#t:License> で，見ての通り GPL はバージョンだけしか指定できず or-later は指定できません．それが警告として表示されていて， 「GPL のライセンス指定してるんだと思うけど書く形式間違ってるんじゃない？」と言ってるんだと思います．で， hpack は多分 cabal-version: 2.4 とかで出力してるので通ってるとかではないですかね？",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1574429207.121000",
        "text": "その通りでした。 hpack による出力は `cabal-version: 2.2` と一番最初の個所に書いてありました。詳細な回答ありがとうございます。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574429282.121200",
        "text": "ところで、もっと詳細に知るには <https://www.haskell.org/cabal/users-guide/file-format-changelog.html> と <https://www.haskell.org/cabal/users-guide/developing-packages.html#package-properties> を読めばOKでしょうか？",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574432989.121500",
        "text": "そうだと思います (僕が知った経緯は，たまたま cabal file の AST を最近いじろうと思ったことがあってっていうだけなので，本当にそのドキュメントを読むだけで良いかはちょっと自信ないですが)",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1574433076.121700",
        "text": "(現状， cabal の仕様は複雑になっていく一方なんですが，エラーメッセージはかなり不親切で cabal user  guide もあまり網羅性がないので，置いてけぼり食ってるユーザかなりいそうな気がするんですよね…)",
        "user": "U57D08Z9U",
        "type": "message"
    },
    {
        "ts": "1574478725.122000",
        "text": "エラーメッセージが不親切なのは、現に私はこの問題を最初はパッケージのバージョンに関する問題だと勘違いしてしまったわけで、かなり問題そうですね。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1574608620.123300",
        "text": "<@UQJC79QBU> has joined the channel",
        "user": "UQJC79QBU",
        "type": "message"
    },
    {
        "ts": "1574680889.123800",
        "text": "<@UQLCH2M0B> has joined the channel",
        "user": "UQLCH2M0B",
        "type": "message"
    },
    {
        "ts": "1574920822.124100",
        "text": "<@UR1U3B6LU> has joined the channel",
        "user": "UR1U3B6LU",
        "type": "message"
    },
    {
        "ts": "1575079131.126800",
        "text": "AppVeyorで `choco install -y ghc --version 8.8.1` すると[NuGet] The operation has timed outと言われてしまうのですがどうしたらよいかわかる人いませんか？`--timeout 0`でタイムアウトを無効にしても直りませんでした。\n<https://ci.appveyor.com/project/maoe/threadscope-3cf8u/builds/29216836/job/jadrm74fdjigwlqq>",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1575089581.126900",
        "text": "choco が落ちてるみたいですね。\n\n<https://status.chocolatey.org/>\n<https://gitter.im/chocolatey/choco>",
        "user": "U5B3EGEFQ",
        "type": "message"
    },
    {
        "ts": "1575089661.127500",
        "text": "おーなるほど。ありがとうございます。",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1575165166.128100",
        "text": "<@UQTDJ5YBD> has joined the channel",
        "user": "UQTDJ5YBD",
        "type": "message"
    },
    {
        "ts": "1575202108.128400",
        "text": "<@UR6UEM24X> has joined the channel",
        "user": "UR6UEM24X",
        "type": "message"
    },
    {
        "ts": "1575391713.128700",
        "text": "<@U590WPG3A> has joined the channel",
        "user": "U590WPG3A",
        "type": "message"
    },
    {
        "ts": "1575421690.129900",
        "text": "はじめまして。初歩的な質問で恐縮いたしますが、、、\nこの MyInteger の型クラスインスタンスの実装だと MyInteger と Integer が同一の型として扱われるようになっちゃうんですがなぜなんでしょうか？\n```newtype MyInteger = MyInteger { getInteger :: Integer } deriving (Eq, Show)\n\ninstance Num MyInteger where\n  fromInteger = MyInteger\n  x + y       = MyInteger $ getInteger x + getInteger y\n  x - y       = MyInteger $ getInteger x - getInteger y\n  x * y       = MyInteger $ getInteger x * getInteger y\n  abs x       = if getInteger x &lt; 0 then x * (-x) else x\n  signum x    = if getInteger x &lt; 0 then -1 else 1\n\n-- え？\nghci&gt;MyInteger 1 + 1\nMyInteger {getInteger = 2}\n\nghci&gt;MyInteger 1 == 1\nTrue```",
        "user": "UQBK4AKNG",
        "type": "message"
    },
    {
        "ts": "1575421832.130000",
        "text": "Haskellの整数値リテラルは `Num a =&gt; a` という型とみなされるので、\n```&gt; :t 1\n1 :: Num p =&gt; p```\n`MyInteger` はNumのインスタンスになっているので == の右辺にある 1 は MyInteger と認識されているはずです！",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1575421872.130200",
        "text": "<https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.13.0.0/Prelude.html#v:fromInteger>",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1575421887.130400",
        "text": "つまり\n```MyInteger 1 == 1```\nは\n```MyInteger 1 == fromInteger 1```\nと同じ挙動をしてます",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1575422241.131500",
        "text": "おおー！そうなんですね！\n理解しました！ありがとうございました:raised_hands:",
        "user": "UQBK4AKNG",
        "type": "message"
    },
    {
        "ts": "1575446794.132400",
        "text": "<@URB930G94> has joined the channel",
        "user": "URB930G94",
        "type": "message"
    },
    {
        "ts": "1575748526.132900",
        "text": "<@URGB8NB4N> has joined the channel",
        "user": "URGB8NB4N",
        "type": "message"
    },
    {
        "ts": "1575788993.133200",
        "text": "<@URG7HKSMV> has joined the channel",
        "user": "URG7HKSMV",
        "type": "message"
    },
    {
        "ts": "1575795579.137000",
        "text": "stack ghciで、開発しているパッケージと、それを使ったサンプルコードを同時に（ `:reload` でリロードできるよう）読もうとして\n```stack ghci -- &lt;パッケージ名&gt;:lib サンプルコード.hs```\nと書いたのですが、\n```Cannot use 'stack ghci' with both file targets and package targets```\nというエラーが出てしまいます。\n多分 `サンプルコード.hs` の方をパッケージのcabalファイルにおける `executable` なり `test-suite` なりに一時的にせよ書いてしまえばいいと思うのですが、他に良い方法はないでしょうか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1575795929.137100",
        "text": "多分自己解決しました。一旦\n`stack ghci -- &lt;パッケージ名&gt;:lib` でパッケージを読んだ後、 `:add` コマンドで`サンプルコード.hs` を追加するといいみたいです。 `:add` なんて便利なのがあったんですね。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1575797458.137300",
        "text": "面白い。 `stack ghci` を `-v` オプション付きで実行してみたら\n```Run process: ghc-8.6.5.exe --interactive -ghci-script=C:\\Users\\igrep\\AppData\\Local\\Temp\\haskell-stack-ghci\\0752026d\\ghci-script```\nなんて出てきて（実際にはもっと長いコマンド）、\nその `C:\\Users\\igrep\\AppData\\Local\\Temp\\haskell-stack-ghci\\0752026d\\ghci-script` を開いてみたら\n```:add 読み込んでいるパッケージのモジュール...\n:module + 読み込んでいるパッケージのモジュール...```\nってしてた。\n要はどちらもひたすら `:add` してるだけってことか:sweat_smile:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1576425347.000200",
        "text": "<@URBFBEURG> has joined the channel",
        "user": "URBFBEURG",
        "type": "message"
    },
    {
        "ts": "1576486723.000500",
        "text": "<@UREG7F64R> has joined the channel",
        "user": "UREG7F64R",
        "type": "message"
    },
    {
        "ts": "1576707292.000200",
        "text": "<@URVESAAE9> has joined the channel",
        "user": "URVESAAE9",
        "type": "message"
    },
    {
        "ts": "1576795201.000200",
        "text": "<@URX5KJDLY> has joined the channel",
        "user": "URX5KJDLY",
        "type": "message"
    }
]