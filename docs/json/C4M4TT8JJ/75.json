[
    {
        "ts": "1591585478.358100",
        "text": "ここだけの話元メンテナの不参加と職権濫用が委員会に問題視されて追い出されたという感じですが、平和的に解決したようで何より",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1591676716.359700",
        "text": "本日のネタ画像 :black_joker: <https://twitter.com/vrom911/status/1270009831622131712>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1591684047.362100",
        "text": "Unboxed で Mutable な Vector を使うとHaskellでも十分？高速な配列アクセスができると実感したけど、関数プログラミングっぽい書き方からは遠くなっていく……",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1591728063.362300",
        "text": "ありがとうございます。",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1591744613.363100",
        "text": "CodeWorldという、ブラウザーベースのHaskell実行環境で動くライブラリーを登録して欲しいとのこと\n<http://haskell.1045720.n5.nabble.com/Library-maintainers-Include-your-library-in-CodeWorld-web-based-Haskell-environment-td5896969.html>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1591865663.365100",
        "text": "Erlang VM上で動くHaskell風言語\n<https://www.hamler-lang.org|https://www.hamler-lang.org>",
        "user": "U561MADLH",
        "type": "message"
    },
    {
        "ts": "1591866529.365600",
        "text": "変態だ",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1591866781.366100",
        "text": "会社で作ってるの、、、やばw\n<https://github.com/hamler-lang/hamler#authors>\n&gt; The Hamler core team comes from <https://emqx.io/|EMQ Technologies Co., Ltd.> now.",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1591873189.369400",
        "text": "約1ヶ月半ぶりのHaskell-jp Blogの記事です。 <https://haskell.jp/blog/posts/2020/strict-gotchas.html>\n最初にTopic Requestのissueを作ってから10ヶ月近くもかかってしまいましたがなんとかやりきりました... :sweat_smile:\n<https://github.com/haskell-jp/blog/issues/167>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1591873965.370800",
        "text": "名前の由来はアメリカのオハイオ州にあるハムラー村だそうです。",
        "user": "U561MADLH",
        "type": "message"
    },
    {
        "ts": "1591875131.372100",
        "text": "Elixir では満足しなかったのか",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1591885141.373100",
        "text": "型検査ないし",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1591891048.373800",
        "text": "あ、Elixir もそうだったか\n簡単な静的検査があるぐらいか",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1592014694.374500",
        "text": "<https://twitter.com/public_ai000ya/status/1271627699228819456?s=19|https://twitter.com/public_ai000ya/status/1271627699228819456?s=19>",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1592014746.375200",
        "text": "あ、もう上で紹介されてたw",
        "user": "U5LV76EJH",
        "type": "message"
    },
    {
        "ts": "1592028292.378400",
        "text": "その hamler の docker image 作りました。手元で動かしたい人で brew install したくない人はぜひ\n<https://hub.docker.com/repository/docker/matsubara0507/hamler>",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1592028386.379000",
        "text": "（その過程で、修正して欲しいところが出てきたので PR を出した <https://github.com/hamler-lang/hamler/pull/157>）",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1592038671.380100",
        "text": "<@U0155JPRS4E> has joined the channel",
        "user": "U0155JPRS4E",
        "type": "message"
    },
    {
        "ts": "1592098396.383900",
        "text": "今年のZuriHac 2020 のOnline公開群です。登壇者はスター揃いで内容もすごい、大豊作です！ これらがOnlineで見れるとは、すごい年ですね:ideograph_advantage::haskell:\n<https://www.youtube.com/channel/UC2zfPMH_srjxUN5EYrfIhCw>\n\nRichardさんの、30分のライブコーディングでGHCに機能拡張(default構文)を入れるのも面白いです。\n<https://www.youtube.com/watch?v=bhhE2DxbrJM>\n\nなお、字幕も付けられます。\n\nZuriHac 2020は、まだこの週末中、続きます。 全体内容はこちら。\n<https://zfoh.ch/zurihac2020/>",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592193605.386100",
        "text": "おっ、GHC 8.10 Stackage Nightly入り間近か？（まだWIPっぽいし、気が早い\n<https://github.com/commercialhaskell/stackage/pull/5425>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592196274.387600",
        "text": "mwc-random の `uniformRange` の実装を見ていて「TypeFamilies使うとこんなことできるのかー」という気持ちに <https://github.com/bos/mwc-random/blob/master/System/Random/MWC.hs#L565>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1592213451.388600",
        "text": "“Quick Look Impredicativity” というのが承認されたらしい（よく分かってない\n<https://twitter.com/nomeata/status/1272441484789366784>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1592214415.388900",
        "text": "参考: <https://www.facebook.com/masahiro.sakai/posts/10157627338829792>",
        "user": "U61BA2X0U",
        "type": "message"
    },
    {
        "ts": "1592313870.390300",
        "text": "↑ （私は仕様の中身を理解できてませんが）著者本人による解説動画があります。\n<https://www.youtube.com/watch?v=ZuNMo136QqI>",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592398708.392100",
        "text": "めっちゃレアなバグを引いてしまって、しかもそれが作っているプロダクトにとって結構深刻で回避困難なものだったので嘆かせてください :cry:\n<https://github.com/fpco/typed-process/issues/32>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592398913.392300",
        "text": "うわ、これWindows依存なんですかね、、、つらそう",
        "user": "U4KPPQW7K",
        "type": "message"
    },
    {
        "ts": "1592398939.392500",
        "text": "ちなみに、今のところWindowsでしか試せてないので、もしよければ他のOSをお持ちの皆さんも試してみてissueにコメントください :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592399085.392800",
        "text": "最初に発覚したのがこのコメントのときで、その時がAppVeyorのみだったので多分Windowsだけなんじゃないかなぁと思っています。\n<https://github.com/haskell-jp/makeMistakesToLearnHaskell/pull/108#issuecomment-641945858>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592399792.393100",
        "text": "MacOS入れときました",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1592400126.393400",
        "text": "WSL2(のUbuntu LTS 20.04)でも起きないですね．",
        "user": "U5G2BCVBN",
        "type": "message"
    },
    {
        "ts": "1592401591.393700",
        "text": "やっぱり手元のLinuxでも再現しませんねぇ。（そして、やっぱプロセスの起動速いなLinux... Windowsが遅いというべきなんでしょうけど... :cold_sweat:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592407797.394300",
        "text": "スペースのありなしで意味が\n<https://twitter.com/smdiehl/status/1273276086105903106>",
        "user": "U4L0B71L1",
        "type": "message"
    },
    {
        "ts": "1592467725.395000",
        "text": "<@U015L5JEP8D> has joined the channel",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1592486878.396100",
        "text": "先日のZuriHac 2020での、Alexis Kingさんのプレゼン動画です。 すごい名作です:tada:\nタイトルからしてEffectシステム中心の話かと思ったのですが、GHCの最適化コード生成の話です。\nGHCでの最適化・コード生成の紹介に興味のある人は、是非、いつか見て下さい。\n\nEffects for Less\n<https://www.youtube.com/watch?v=0jI-AlWEwYI>\n\n単なる機能紹介ではなくて、小さな話から始めて、シンプルなコード例で、機構的・動機的に本質を掘り進めていく展開は圧巻です。ディープな研究者以外に丁寧に説明してくれるスタンスが素晴らしいです。\n\n詳細内容を事前に知りたくない人がいるかもしれませんので、概略内容はスレッド側に書きます。",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592487047.396500",
        "text": "視聴する人の楽しみのために内容詳細は控えますが、例えば以下の内容があります:\n•  Inline化などの、Simplifierでの最適化\n•  List fusion (rewrite rule) (ここは軽めの紹介のみ)\n•  型クラスは、どのようなコードに変換されるか\n•  .hi ファイルに出力される内容\n•  known call と unknown call の違い\n•  Specializingの適用可否\n•  bind(&gt;&gt;=) の課題\n•  unbox化  (ここも軽めの紹介)\n私は未だ全部を理解しきれてません、ゆっくりとenjoyします:slightly_smiling_face:\nなお、それぞれの項目については、日本語でも良いWeb記事がたくさんあると思います。",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592487125.396700",
        "text": "-- 内容詳細 あるといいかもしれないですね。(あまりきにしないでください。)--",
        "user": "U74KTAG0N",
        "type": "message"
    },
    {
        "ts": "1592521539.397900",
        "text": "私もほぼ全部観ました。これまでGHCの最適化についてもやもやしていたことがまとまってすっきりしました。すごいです。\nあと、 :point_up: の内容の他に、開発中のeffパッケージや <https://github.com/ghc-proposals/ghc-proposals/pull/313> の背景も最後の方で説明されます。\nこれ以外の話はすべてこの二つの背景につながるわけです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592522370.402000",
        "text": "Haskell製のAndroid・iOSで動くゲームらしいが技術的な詳細が載ってないっぽい…:confused:\nクロスコンパイルでもしたのだろうか。\n<https://keera.co.uk/2020/06/18/enpuzzled-released-for-android-and-ios/|https://keera.co.uk/2020/06/18/enpuzzled-released-for-android-and-ios/>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1592571786.402700",
        "text": "Linear types言語拡張の巨大なパッチ第一弾がGHCのmasterにlandingしました。 安定すれば、8.12に間に合うかもしれませんね:haskell:\n<https://gitlab.haskell.org/ghc/ghc/-/commit/40fa237e1daab7a76b9871bb6c50b953a1addf23>\n\nQualifiedDo言語拡張のパッチはこちら。 まだmasterには入ってませんが、こちらも8.12に間に合いそう:haskell:\n<https://gitlab.haskell.org/ghc/ghc/issues/18214>\n\nなお、どちらも、ZuriHac 2020での解説動画があります。\nA tour of linear types and linear base\n<https://www.youtube.com/watch?v=I7-JuVNvz78>\n\nQualifiedDo: customizable 'do' syntax without fuss\n<https://www.youtube.com/watch?v=TH3cYp3349A>",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592572244.404000",
        "text": "動画ついでに。\nGHC 8.10から入っている、Non-moving GC についての、Benさん本人による解説動画があります:haskell:\n2020 ACM SIGPLAN International Symposium on Memory Management (ISMM)\nAlligator Collector: A Latency-Optimized Garbage Collector for Functional Programming Languages\n<https://www.youtube.com/watch?v=skNDP5ZYZJ4>\n（3:04:00付近から）\n\n今年中に見きれないくらい豊作ですね:slightly_smiling_face:",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592578498.404300",
        "text": "Linear typesについて、tweagによる記事が上がってました\n<https://www.tweag.io/blog/2020-06-19-linear-types-merged/>",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592616963.406500",
        "text": "妙に圧にならないように、このくらいにしときます:slightly_smiling_face:\n\n週明け6/22(月)のCHALMERS ONLINEは、Stephanie Weirich氏です。\n内容は \"Strongly Typed System F in GHC\" です。\nYouTubeで日本時間だと夜11時から。後からでも見れます。\n\nCHALMERS ONLINE FUNCTIONAL PROGRAMMING SEMINAR SERIES\n<http://chalmersfp.org/>\n\nStephanie Weirichさんは、\"System FC with explicit kind equality\"(<https://www.seas.upenn.edu/~sweirich/papers/fckinds.pdf>) 等の著者で、GHCのactive開発者のRichard Eisenbergさんの師匠です。\n\nGHC Haskellの内部表現の１つであるCore言語は、System F(C)に基づいています:haskell:",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592617392.407300",
        "text": "英語の動画リンクをいっぱい貼っちゃったので補足です。既知かもしれませんが念の為。\n少なくともPC版のYouTubeだと、コンテンツによっては字幕(誤変換多々ですが)が付きます。ショートカットの\"c\"キーで字幕on/off。\nショートカットの、\"j\", \"l\"キーがそれぞれ、10秒戻しと10秒送りです。 ショートカットの\"k\"キーか\"space\"キーが、停止/再生のトグルです。\n（10分くらいの内容を見るのに、1時間くらいかかってます:thinking_face:）",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1592622490.408200",
        "text": "字幕、知らなかった！",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1592655975.408900",
        "text": "まさかHaskell製とは <https://github.com/SimulaVR/Simula>",
        "user": "U4LGTMTMK",
        "type": "message"
    }
]