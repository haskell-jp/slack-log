[
    {
        "ts": "1714616748.587099",
        "text": "Haskellを勉強中の学生です。Haskellの美しさに日々感動しながら勉強しているのですが、下の構文だけは美しくないなと思っています。\n```ghci&gt; :t (+2)\n(+2) :: Num a =&gt; a -&gt; a\nghci&gt; :t (-2)\n(-2) :: Num a =&gt; a```\nみなさんはこの構文についてどのように考えていますか？\nこの構文に納得できる説明はありますか？また、この構文が導入された背景を知りたいです。",
        "type": "message",
        "user": "U07162WJL95"
    },
    {
        "ts": "1714617156.661359",
        "text": "```ghci> :t (+ 2)\n(+ 2) :: Num a => a -> a\nghci> :t (- 2)\n(- 2) :: Num a => a\nghci> :t (/ 2)\n(/ 2) :: Fractional a => a -> a\nghci> :t (* 2)\n(* 2) :: Num a => a -> a\n\nghci> :t +2\n<interactive>:1:1: error: parse error on input '+'\nghci> :t -2\n-2 :: Num a => a\nghci> :t (+1)\n(+1) :: Num a => a -> a\nghci> :t (-1)\n(-1) :: Num a => a```\n演算子の中でマイナスだけを特別扱いするのは仕方のないことだとは思いますが、プラスも同様に使えたり、演算子と値を（直接）つなげるとエラーを吐いたりしてほしいなという気持ちがあります。",
        "type": "message",
        "user": "U07162WJL95"
    },
    {
        "ts": "1714617222.719679",
        "text": "それはどちらかというと `-` だけが例外で「負の数を表すための単項演算子としてのマイナス」の解釈を優先した結果ですね。\n一般的には `(二項演算子 右側のオペランド)` という記法で section と呼ばれますが、たとえば\n`map (+ 2) [10, 20, 30]` が `[12, 22, 32]` となる例のように、一引数関数を取る高階関数に対して二項演算子の右側のオペランドを固定して一引数関数となるようにして渡す際に便利な記法です。\n逆に `map (100 -) [10, 20, 30]` のようにすれば `[90, 80, 70]` となり、左側のオペランドを固定することもできます。\nまた、 (Haskell 自体の仕様ではありませんが) ghc 処理系の独自拡張では `(-2)` と `(- 2)`  の区別をする機能があります。\n<https://zenn.dev/mod_poppo/articles/ghc-8-10-and-9-0#lexicalnegation-%E6%8B%A1%E5%BC%B5%E3%81%A8-negativeliterals-%E3%81%AE%E5%A4%89%E6%9B%B4>\n一方、残念ながら (+2) を「単項プラスつきのただの値」だとみなす記法はたぶんありません…",
        "type": "message",
        "user": "UF8SE896V"
    },
    {
        "ts": "1714618371.229569",
        "text": "返信ありがとうございます。\n使う人はあまりいないとは思いますが、(+2)が使えたら対称性があってきれいだなあと感じます。これがないのは残念です。\nリンク先のLexicalNegation拡張は知らなかったです。これを使えば僕が感じているほとんどの違和感は解消されると思います。やはり(-2)の構文は美しくないと感じる人が多いのでしょうか？",
        "type": "message",
        "user": "U07162WJL95"
    },
    {
        "ts": "1714618670.528419",
        "text": "そもそも Haskell には `-` しか単項演算子がないので、たぶん「単項演算子なんてものは本当は言語機能に導入したくなかった（が、さすがにマイナスは `-x` とか書きたいのでしょうがなく導入した）」という感じがあります。なので単項プラスは「不要なのだから導入しなかった」ということだと思います",
        "type": "message",
        "user": "UF8SE896V"
    },
    {
        "ts": "1714619536.239919",
        "text": "なるほど。必要最低限の仕様にしたいという背景には納得できます。\n必要最低限を美しさとするか、対称性を美しさとするかで派閥が分かれそうですね。\nもやもやしていた部分がはっきりしてよかったです。ありがとうございました。",
        "type": "message",
        "user": "U07162WJL95"
    }
]