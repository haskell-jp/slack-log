[
    {
        "ts": "1619067613.071300",
        "text": "`bracket` の第二引数(資源解放)で STM を利用すると、デッドロックを起こすことがあるのは、よく知られたことですか？",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1619347815.073800",
        "text": "具体例はありますか？むしろ、STMを使えばデッドロックが起きないように記述しやすいと思うのですが",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1619356789.074500",
        "text": "僕の quic ライブラリでは 100% 再現します。STM を IORef にすると、デッドロックはなくなります。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1619356832.074700",
        "text": "Note that cancel will not terminate until the thread the Async refers to has terminated. This means that cancel will block for as long said thread blocks when receiving an asynchronous exception.\n\nFor example, it could block if:\n\n    It's executing a foreign call, and thus cannot receive the asynchronous exception;\n    It's executing some cleanup handler after having received the exception, and the handler is blocking.",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1619356877.074900",
        "text": "async ライブラリには上記の記述があります。block には STM の block も含まれるのでしょう。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1619356910.075100",
        "text": "close の STM が、どうして block するのかは、不明なんですが。。。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1619360390.075400",
        "text": "「STM を IORefをすると」というのは、TVarのことを指していますか？また、closeのSTMとは何を指していますか？",
        "user": "U4KUNQF9N",
        "type": "message"
    },
    {
        "ts": "1619387675.075600",
        "text": "「TVar を IORef にする」「bracket の第二引数」という意味でした。",
        "user": "U56MBRKR9",
        "type": "message"
    },
    {
        "ts": "1619518346.076300",
        "text": "bracketの第二引数はTVarの操作だけでしょうか？`&lt;|&gt; pure ()`を加えるとどうなりますか",
        "user": "U4KUNQF9N",
        "type": "message"
    }
]