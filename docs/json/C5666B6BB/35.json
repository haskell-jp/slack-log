[
    {
        "ts": "1547389247.079000",
        "text": "でもTemplate Haskellだとコンパイル時になってしまうから、実行時はさすがにないはず...",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547442381.080600",
        "text": "<https://codeutopia.net/blog/2011/08/20/adventures-in-haskell-dynamic-loading-and-compiling-of-modules/> リンクベタ付けで悪いけど、これ改良すればいけそう？ でも、ただのハックになってしまいそう、、、かなーと思ったり",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1547454365.080900",
        "text": "これはさすがにimportではないんじゃないかなーって気がしますね。。。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547454436.082200",
        "text": "まぁ、これは実行時評価に近い気がしますがこんな感じでGHCのインポートプロセスをハックできそうな気がしたので、、、",
        "user": "U9XHWQX7Z",
        "type": "message"
    },
    {
        "ts": "1547525697.083000",
        "text": "<@UFDJAUMSP> has joined the channel",
        "user": "UFDJAUMSP",
        "type": "message"
    },
    {
        "ts": "1547535496.083300",
        "text": "<@UFDKZJBLK> has joined the channel",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547535838.084600",
        "text": "初めてプログラミングを始めたものです。かなり初歩的なとこで質問するかもしれませんが、よろしくお願い申し上げます:man-bowing:",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547550551.087500",
        "text": "<https://api.slack.com/methods/conversations.history>\n↓のようなJSONの `ts` をaesonでパースしたいのですが、インスタンスを定義したいんですがエラーがでます。どんな対応がありますか？\n\n```\n{\n            \"type\": \"message\",\n            \"user\": \"U061F7AUR\",\n            \"text\": \"What, you want to smell my shoes better?\",\n            \"ts\": \"1512104434.000490\"\n        }\n```\n\n```\n\n/Users/sho/src/github.com/shokohara/automerge/slackworkcount/src/Main.hs:30:10: error:\n    Duplicate instance declarations:\n      instance FromJSON LocalTime -- Defined at src/Main.hs:30:10\n      instance FromJSON LocalTime\n        -- Defined in ‘aeson-1.4.2.0:Data.Aeson.Types.FromJSON’\n   |\n30 | instance FromJSON LocalTime where\n   |          ^^^^^^^^^^^^^^^^^^\n```",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547552020.087800",
        "text": "エラーメッセージ自体は、 `LocalTime` の `FromJSON` インスタンスが二個定義されているといってます\n自分でインスタンスの定義をしなければ良いので？",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1547552086.088000",
        "text": "返信ありがとうございます。フォーマットが違うため自分で定義してみました。",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547552412.088200",
        "text": "なるほど、それは難儀ですね…\nいくつかやり方がある気はしますが、もっとも行儀の良いやり方は `newtype` 宣言で `LocalTime` をラップした型を定義して、それを使う方法ですかね…",
        "user": "U56L7EVNY",
        "type": "message"
    },
    {
        "ts": "1547554846.088500",
        "text": "ちなみに、 <http://hackage.haskell.org/package/slack-web> にも同様のパーサーがすでに定義済みかと思いますが、それではダメなんですか？",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547558142.091700",
        "text": "この「-&gt;」で、この場合aがBoolを返すことはわかったのですがなぜもう一つaがあるのでしょうか？\n画像見にくくてすみません。",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547558319.092100",
        "text": "(&gt;)の型表記は、型制約を示す `(Ord a) =&gt;` の部分と、引数および返値を表す `a -&gt; a-&gt; Bool` の部分に分かれています。\n(&gt;) は 2つの比較可能な値を取って、その大小をBoolで返すため、 `a` を2つ取る必要があります。",
        "user": "U57DM8PBK",
        "type": "message"
    },
    {
        "ts": "1547559121.094000",
        "text": "2つの比較可能な値はa.bで表すのではないのでしょうか？2つの値を取った上で、Bool値を、返す。ということではないのかと思ったのですが",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547559301.095200",
        "text": "これが例えば `(Ord a, b) =&gt; a -&gt; b -&gt; Bool` のように定義してしまうと、例えば `a` が `Int` 、 `b` が `String` のようなものを比較可能になってしまいますよね。これを `(Ord a) -&gt; a -&gt; a -&gt; Bool` と定義することで、片方の型を入力するともう片方の型を自動的に固定して、同じ型でなければ比較できないという制約を作り出すことができるのです。",
        "user": "U57DM8PBK",
        "type": "message"
    },
    {
        "ts": "1547559804.095900",
        "text": "ほんとにわかりやすいです笑笑ありがとうございます:blush:",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547559834.096700",
        "text": "これが謎で他のものも理解できなかったのでこれで一気にわかると思います笑笑",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547570518.097500",
        "text": "返信ありがとうございます。\nnewtypeの方法を勉強も兼ねて試しました。ありがとうございます。\nslack-webに乗り換えを検討しています。教えてくださってありがとうございます。ただ、乗り換え中に `Left (SlackError \"invalid_ts_latest\")` という実行時エラーがでるようになり、この通信をデバッグしたいのですが、どのようにするのが良さそうでしょうか？（Java,Scalaだとlogback.xmlなどを書き換えたりしますが、、、）",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547593536.097800",
        "text": "残念ながらそうしたlogback.xmlのような設定ファイルはありません。\nHaskellでは、そもそも外部のパッケージには何もログが仕込まれていないのが普通です。\n直接やりたければ、ソースコードをダウンロードして、書き換えた上でstack.yamlで参照するしかないです。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547593785.098000",
        "text": "そしてそのエラーは、Slackのサーバーが返しているものなので、通信をデバッグしてもあまり実のある結果にはならないような気がしますね。。。\n大方、 `LocalTime` をJSONに変換した結果の文字列が、Slackが受け付ける文字列になっていないというエラーかと。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547608108.102400",
        "text": "$を使った関数適用の\n($) :: (a -&gt; b)  -&gt; a -&gt; b\nの部分なんですけど、()を$として使うのになぜ、aやbを使って関数を定義するのでしょうか。また、aとbということはそれぞれ違う型の値ということでしょうか？",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547608777.102500",
        "text": "昨晩ソースをたどってみたところ、UrlEncodedFormにNothingのものは文字列のnotingがtimestampに入っていくところを確認したので、それが原因っぽいなと検討はつきました。",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547609058.102700",
        "text": "質問の意図をくみ取れているのかわかりませんが、($) は関数 `f :: a -&gt; b` と、その関数に渡す引数 `x :: a` と取って関数適用した値 `f x :: b` を返すと読めます。a と b は同じ型でも問題ありません。たとえば `f` として `id` を渡す場合などです。",
        "user": "U4M9NJ7QE",
        "type": "message"
    },
    {
        "ts": "1547609835.104300",
        "text": "了解です。ありがとうございます:blush:",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547612963.104500",
        "text": "この質問は，なぜ($)を言語要素としてではなく関数として用意するのか，ということでしょうか．（解決済みでしたらすいません．）",
        "user": "UAMGYKUP5",
        "type": "message"
    },
    {
        "ts": "1547616610.105100",
        "text": "調査方法を教えてくださってありがとうございます :bow:",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547616849.106800",
        "text": "interoで `M-.` によって Jump to definition したいのですが、\n`instance ToForm HistoryReq where` の `ToForm` の定義に飛ぼうとすると `http-api-data-0.3.8.1-CLVb2SyagwA9bGtbONTDYI:Web.Internal.FormUrlEncoded` のように表示されます。この挙動は intero では当然のものでしょうか？\n<https://github.com/shokohara/slack-web/blob/master/src/Web/Slack/Common.hs#L82>",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547618049.107200",
        "text": "ソースコードにジャンプしたいです",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547618105.108300",
        "text": "<@UAMGYKUP5> さん。わざわざ考えてくださって感謝します！！もう解決したので大丈夫ですよ！",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547621442.110000",
        "text": "This message was deleted.",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1547621569.110400",
        "text": "僕は自動化したいことをリストにまとめていて、暇になったらそれに着手します。例えばSlackやGitHubから情報を集めて業務報告文の自動生成です。作っておけば自分が楽になるもの等にやる気がでます。",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547621597.111000",
        "text": "ありがとうございます！ぜひ実践したいと思います！",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547621670.111400",
        "text": "今回は特に消す必要もないですが、さすがにあまりにもHaskellから離れた質問になってしまっているので、今後はここでは控えていただきたいです。 :pray:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547621738.111900",
        "text": "了解です。申し訳ないです。",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547621812.112800",
        "text": "一応迷惑にもなるので消しときます。申し訳ないです。",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547622850.113300",
        "text": "チャンネルの趣旨からは外れるかもしれないけど私はこれは結構重要な疑問なんじゃないかと思いますね。変に浮世離れしたイメージを持たれがちなHaskellのユーザはどんなモチベーションでプログラミングに取り組んでいるのかというのは、回答を募る意味があると思う。",
        "user": "U4M598NHM",
        "type": "message"
    },
    {
        "ts": "1547623264.113500",
        "text": "そう、だから迷ったんですけども... :cold_sweat:",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547623400.113700",
        "text": "<@UFDKZJBLK> 僕はScalaの業務委託案件でご飯食べてますが、Haskellのしかたも踏まえた上で現場により良いコードを提供したいという思いを持って細かいツールをHaskellで作ってます。自分の評価にも繋がることとより希少な人材になれると信じて取り組んでます。",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547623502.115500",
        "text": "ごめんなさい。自分性格的に中途半端なことが嫌なので、消すか消さないかということで、1人でも困ってる方がいましたら消す考えになってました。もしそれがダメであったら申し訳ないとしか言えないです。",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547623562.117100",
        "text": "<@U5672KG1X> 自分まだまだ始めたばかりですが、将来のことを考え、また自分を評価してくれるというのはとても良い考えですね。参考にさせていただきます！！",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547623611.117300",
        "text": "&gt; 自分を評価してくれる\n\nこれは妄想ですけどｗ多分より良い評価に繋がる気がしてます",
        "user": "U5672KG1X",
        "type": "message"
    },
    {
        "ts": "1547623650.117500",
        "text": "まぁ、もう遅いんでいいです。\nどちらかというと私は「あまりにもこういう質問が増えるのはおそらく好ましくないので注意する。でも前例を残すためにも消さない方がよい」という立場でしたが、「消すな」ということをちゃんと明言するべきでした。すみません。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547623722.117700",
        "text": "&gt; 変に浮世離れしたイメージを持たれがちなHaskellのユーザはどんなモチベーションでプログラミングに取り組んでいるのかというのは、回答を募る意味があると思う。\nもし本当にそういう意図があっての質問だったのであれば、そう明言していれば私も特に注意はしなかったと思います。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1547625425.120600",
        "text": "たしかに前例を残し他にこのようなことがなくなるという面では消さないという案もありでしたね:cry:もう消したものは戻らないので、次から気をつけたいと思います。わざわざ忠告してくださり感謝致します:man-bowing:",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547625491.122100",
        "text": "ごめんなさい。このアプリhaskellのために入れたものであまり使い方を分かっておらずこちらのメインの方にもコメ欄行ってしまいました。すみません:man-bowing:",
        "user": "UFDKZJBLK",
        "type": "message"
    },
    {
        "ts": "1547631818.122900",
        "text": "<@UFE5C32DN> has joined the channel",
        "user": "UFE5C32DN",
        "type": "message"
    },
    {
        "ts": "1547644276.124800",
        "text": "<@UFES5NULC> has joined the channel",
        "user": "UFES5NULC",
        "type": "message"
    },
    {
        "ts": "1547703810.125600",
        "text": "ParsecってTextを返すコンビネーターを提供をしていないのでしょうか。\n<http://hackage.haskell.org/package/parsec-3.1.13.0>\nStringをパースするのなんかやだなと思って色々やってるんですけど、どうしてもうまく行かなくて、最終的にパースしたものにfromStringを適用してTextに変換してます。\n<https://gist.github.com/HirotoShioi/f75a547ff2730f7905a6b9a40d2d675d#file-inlineparser-hs-L21>",
        "user": "U7Z4F723Z",
        "type": "message"
    },
    {
        "ts": "1547704000.125800",
        "text": "parsec って任意の型にパースできないっけ？",
        "user": "U56L7EVNY",
        "type": "message"
    }
]