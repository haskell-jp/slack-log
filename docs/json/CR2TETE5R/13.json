[
    {
        "ts": "1606127990.064600",
        "text": "一時的に確認したいだけだったので、 :point_down: のコマンドを（ほぼ元のコードそのままですが）手打ちしました。\n\n```&gt; stack haddock\n&gt; stack exec -- hoogle generate -v --local=$(stack path --local-doc-root) --local=$(stack path --snapshot-doc-root) --database=$(stack path --local-hoogle-root)/database.hoo\n&gt; stack exec -- hoogle --database=$(stack path --local-hoogle-root)/database.hoo \"a -&gt; a\" # 今回は動作確認がしたかっただけなので、 a -&gt; a という型の関数を探してみるだけ```\nなお、元のコードでは `hoogle server` を必ず実行することになっていますが、hoogleの他の機能を使いたい場合も考えるとbashの `\"$@\"` などで一般化した方がいいでしょうね。\n\nで、本題に答えると、例えば `stack-hoogle` とかでいいんじゃないでしょうか。場所は本当に `PATH` の中の自分が触れる領域であればどこでもよいでしょう。もしなければ、この機会に自前で作ったコマンドを入れておくディレクトリーを一つ作っておいてそこにすればいいんじゃないかと。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1606130228.066000",
        "text": "すみません本題から外れますがこれからオンライン集合論ゼミのため反応が鈍ります。\n申し訳ないです。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606133858.066200",
        "text": "お気になさらず！私含めみんな気が向いたときに回答しているので！",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1606135205.066500",
        "text": "「stack haddock」\nと実行した時に以下のエラーメッセージが出ます\n\nMacBook-Air:~ sirkerf$ stack haddock\nError parsing targets: The specified targets matched no packages.\nPerhaps you need to run ‘stack init’?",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606135520.066700",
        "text": "あれ、global projectでは `stack haddock` は使えなかったっけか...\nええっと、そのエラーメッセージは、「 `stack haddock` はプロジェクトのディレクトリー（ `stack.yaml` が入っているディレクトリー）でないと使えません」という旨のメッセージです。\nプロジェクトを作ってから使う... でもいいんですが、本当に必要かどうかちょっと自分も確信が持てなくなってきたのですっ飛ばして `stack exec -- hoogle generate ...` で始まる方を実行してみてください",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1606136529.066900",
        "text": "「stack exec — hoogle generate …」\nで始まる方を実行した後に二個目実行してみました。\nその後に\n「stack hoogle “min”」で実行してみました。\n\nMacBook-Air:~ sirkerf$ stack hoogle “min”\nNo hoogle version was found, trying to install the latest version\nMinimum version is hoogle-5.0. Found acceptable hoogle-5.0.17.15 in your index, requiring its installation.\nDistribution.Compat.Prelude.Internal min :: Ord a =&gt; a -&gt; a -&gt; a\nPrelude min :: Ord a =&gt; a -&gt; a -&gt; a\nData.Ord min :: Ord a =&gt; a -&gt; a -&gt; a\nGHC.Classes min :: Ord a =&gt; a -&gt; a -&gt; a\nData.Semigroup newtype Min a\nData.Semigroup Min :: a -&gt; Min a\nBasicTypes minPrecedence :: Int\nCmmExpr minusRegSet :: Ord r =&gt; RegSet r -&gt; RegSet r -&gt; RegSet r\nCmmProcPoint minimalProcPointSet :: Platform -&gt; ProcPointSet -&gt; CmmGraph -&gt; UniqSM ProcPointSet\nDynFlags mIN_CHARLIKE :: DynFlags -&gt; Int\n-- plus more results not shown, pass --count=20 to see more",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606136556.067100",
        "text": "必ず初めに\nNo hoogle version was found, trying to install the latest version\nMinimum version is hoogle-5.0. Found acceptable hoogle-5.0.17.15 in your index, requiring its installation.\nが表示されるようです。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606136743.067300",
        "text": "ともあれ、hoogleの機能は利用できるようになったのでありがとうございます。\n残った問題についてもできれば解決したいですが、また機会がありましたらお願いします。ありがとうございました。\n連日ありがとうございます、また機会がありましたらお願いします。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606145054.071100",
        "text": "Haskellのコーディングでの質問です。\n\nmultiply :: Int -&gt; Int -&gt; Int\nmultiply a b = a * b\n\nmain = do\n     return $ multiply a b\n\nをしようとしたのですがうまくいきません。\nエラーコードは\n\nMacBook-Air:haskell_sutdy sirkerf$ runghc multiple.hs \n\n*multiple.hs*:eight:*23: error: Variable not in scope: a :: Int*\n *|*\n*8 |*   return $ multiply *a* b\n *|            ^*\n\n*multiple.hs*:eight:*25: error: Variable not in scope: b :: Int*\n *|*\n*8 |*   return $ multiply a *b*\n *|             ^*\n\nとなります。\nVariable not in scopeのエラーを調べてみても「型が合ってない」としか言われないのですが、そもそもaとbはIntのはずですからこのエラーはおかしいように感じるのです。\nどなたか、このコードが通るように改変していただけませんでしょうか？",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606145174.072000",
        "text": "ちなみに最後を「return $ multiply 2 3」と具体的なIntのものにすると通ります。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606145491.072200",
        "text": "推測するにaとbが具体的な型を持っていないと見られているのが問題だと思っています。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606146527.072400",
        "text": "aとbが定義されていないというエラーです。\na :: Int\na = 2\nb :: Int\nb = 3",
        "user": "U01A20R5Z0Q",
        "type": "message"
    },
    {
        "ts": "1606146559.072700",
        "text": "などと定義を追加すれば動きます",
        "user": "U01A20R5Z0Q",
        "type": "message"
    },
    {
        "ts": "1606147157.072900",
        "text": "動きました。ありがとうございます。\nところが件のコードは\n「module Multiply.Bug.Fix where\n\nmultiply :: Int -&gt; Int -&gt; Int\nmultiply a b = do\n  return $ a * b」\n\nこの誤りを正せ\nと言う問題だったのでさっきのコードになったのですが、具体的な値を入れると怒られてしまいました。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606150110.073100",
        "text": "「module Multiply.Bug.Fix where\nmultiply :: Int -&gt; Int -&gt; Int\nmultiply a b = a * b」\n\nで通りました。ありがとうございました。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606174310.073600",
        "text": "&gt; No hoogle version was found, trying to install the latest version\n&gt; Minimum version is hoogle-5.0. Found acceptable hoogle-5.0.17.15 in your index, requiring its installation.\nについてはよくわかりません。インストール自体は済んでいるでしょうし、stackのバグではないでしょうか。",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1606225433.074100",
        "text": "<@U01FEQHLVDG> has joined the channel",
        "user": "U01FEQHLVDG",
        "type": "message"
    },
    {
        "ts": "1606452843.074400",
        "text": "<@U01F7AKBH0F> has joined the channel",
        "user": "U01F7AKBH0F",
        "type": "message"
    },
    {
        "ts": "1606561219.075400",
        "text": "はじめまして、どうぞよろしくお願いいたします。\n\nある型について、とりうる値をすべてリストで列挙する方法はありますか？\n\n```data DrinkMenu = Oolong | OrangeJuice | Cocktail deriving Show```\nのようなデータ型があるとして、\n構文としては正しくないのですが、理想としては下記のようなことができればいいなと思っています\n```&gt; show $ enumrate DrinkMenu \n[Oolong, OrangeJuice, Cocktail]```\n似たようなことができる方法をご存じでしたら、教えていただきたいです",
        "user": "UKAS45C80",
        "type": "message"
    },
    {
        "ts": "1606561551.075500",
        "text": "deriving Enum で自動的にEnumクラスのメソッドが得られます <http://walk.northcol.org/haskell/type-classes/|http://walk.northcol.org/haskell/type-classes/>",
        "user": "U01A20R5Z0Q",
        "type": "message"
    },
    {
        "ts": "1606561700.075700",
        "text": "&gt; data Day = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n&gt;            deriving (Enum, Show)\n&gt; main = print [Mon .. Fri]  -- 出力: [Mon, Tue, Wed, Thu, Fri]",
        "user": "U01A20R5Z0Q",
        "type": "message"
    },
    {
        "ts": "1606562178.075900",
        "text": "また、deriving Boundedにすると最初と最後が得られます\n\n&gt; data Day = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n&gt;            deriving (Enum, Bounded, Show)\n&gt; main = do print $ (minBound :: Day)  -- 出力: Sun\n&gt;           print $ (maxBound :: Day)  -- 出力: Sat",
        "user": "U01A20R5Z0Q",
        "type": "message"
    },
    {
        "ts": "1606563533.076100",
        "text": "ありがとうございます！やりたいことができました。\n（なんとか型を値として渡す方法を考えなければ..と思っていたので、目からウロコでした）",
        "user": "UKAS45C80",
        "type": "message"
    },
    {
        "ts": "1606572499.077000",
        "text": "<@U01FQCD9X0A> has joined the channel",
        "user": "U01FQCD9X0A",
        "type": "message"
    },
    {
        "ts": "1606576089.077500",
        "text": "<@U01FWJ90CKE> has joined the channel",
        "user": "U01FWJ90CKE",
        "type": "message"
    },
    {
        "ts": "1606709812.083200",
        "text": "かなり基本的な質問なのですが答えてくださる方を募集します。\n数学では「随伴関手の合成はモナドを成す」という事実があるのですが、これはHaskellでも同様でしょうか？\nつまりFunctorからMonadを作ることって出来るのでしょうか？\nFunctorはFunctor則を\nMonadはMonad則をそれぞれ満たさなければならないので、Haskellでだとなんだか整合性が取れないのではないかと推測しています。\nそれから追加質問で恐縮なのですが、\n「Haskellにおける随伴関手の例」って何かありますでしょうか？",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606709922.084800",
        "text": "更に追加で質問しますが、数学では「モナドTからT代数を構成できる」という事実がありますが、これはHaskellでも同様ですか？",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606726064.090900",
        "text": "Haskell の Functor と Monad は、圏論の関手とモナドを使いやすいように特別な場合に限定したものであり、また Haskell が厳密には純粋ではないこともあり、同じ概念として捉えることは出来ません。\n随伴関手としての条件を満たす二つの Functor があれば、そこから Monad を作ることが出来ます。そのようなペアとしては (-&gt;) r と (,) r があり、そこから State Monad を作ることが出来ます。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1606732982.094000",
        "text": "ありがとうございます。同じ概念として捉えることはできないんですね。\nMonadを作ることができるFunctorの具体例まで教えていただきありがとうございます。\n\n\nところでですが、HaskellのFunctorやMonadは数学で定式化するとしたらどのような概念になるのでしょうか？追加の質問で申し訳ないです。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1606734271.101800",
        "text": "次のように作られる圏を Hask 圏と呼びます。\n\n• 対象: Haskell の型 (Int, Maybe Bool, [String], ...)\n• A から B への射: \nA -&gt; B という型を持つ関数\n\nFunctor は Hask 圏から Hask 圏への関手です。 Monad は Hask 圏の上のモナドです。\nただし、この Hask 圏は、現実の Haskell では圏にならないので、理想化した Haskell の中で考える必要があります。そのあたりの事情を無視しても Functor と Monad が便利なのには変わらないので、問題とされることは少ないようです。",
        "user": "U5LEE6C1J",
        "type": "message"
    },
    {
        "ts": "1606791602.102400",
        "text": "Reminder: \nbeginnersチャンネルは、新しい人がスムーズにHaskellに慣れるための質問を歓迎するチャンネルです。\nHaskell-Beginners ML や IRCの#haskell-beginners  や RedditのMonthly Hask Anythingのような位置づけを意図しています。\n\nbeginnersチャンネルでの回答側は、以下の左側のような応答を厳禁とする運用です。\n• それはくだらない質問だ → くだらない質問など無い\n• その質問は以前にもあった → 質問者はそんなこと知らない\n• Google検索せよ → 検索できないから質問している\nbeginnersチャンネルでは、例えば以下のレベルの質問から歓迎します。\n• `:` とは何のことですか。\n• タプルとは何ですか。\n",
        "user": "USLACKBOT",
        "type": "message"
    },
    {
        "ts": "1606904432.104600",
        "text": "Hask圏を考えるのですね。ありがとうございます。\n\n問題とされることも少ないとのことで、その辺りの事情も知れて良かったです。ありがとうございました。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1607051514.104800",
        "text": "Haskell における随伴は myuon_myonさんの<https://qiita.com/myuon_myon/items/d598480e4edd7a780ea7|「Haskellと随伴」>という記事が参考になると思います。\nまた、数学的な話題用の部屋 <#C7Y71415W|math> もどうぞ。",
        "user": "U57CGDBMG",
        "type": "message"
    },
    {
        "ts": "1607305179.105500",
        "text": "<@U7822EKEW> has joined the channel",
        "user": "U7822EKEW",
        "type": "message"
    },
    {
        "ts": "1607407239.105700",
        "text": "<@U01G6E7DR54> has joined the channel",
        "user": "U01G6E7DR54",
        "type": "message"
    },
    {
        "ts": "1607473200.106200",
        "text": "ありがとうございます。返事遅れてすみません。",
        "user": "UFMV026NR",
        "type": "message"
    },
    {
        "ts": "1607610810.106600",
        "text": "<@U01HAQDQUHW> has joined the channel",
        "user": "U01HAQDQUHW",
        "type": "message"
    },
    {
        "ts": "1607931542.106800",
        "text": "久しぶりにhaskell触ってみようとしてつい~/.stackを消してインストールし直したらstack setupでコケてしまいました",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1607933569.108100",
        "text": "意味のなさそうなところが長すぎて見づらいので最後の方だけ。あと~/.stackをゴミ箱から回復してもダメでした",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1607934818.108500",
        "text": "ぱっと検索して見つかった、怪しいのはこれですかねぇ <https://github.com/commercialhaskell/stack/issues/4884>",
        "user": "U4LGTMTMK",
        "type": "message"
    },
    {
        "ts": "1607934949.108800",
        "text": "ウチのarchlinux `/home` がntfsだしそれっぽさはありますね",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1607935132.109100",
        "text": "`make install` のほうで出るエラーは `stack setup` のときは出ないエラー(`make install` を直接走らせると`/usr/local` にファイルを作ろうとして権限がないと怒られるが`stack setup`だと`~/.stack`内にファイルをおくので大丈夫)",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1607947168.109500",
        "text": "```2020-12-14 16:34:52.615504: [error] '/builds/ghc/ghc/inplace/bin/ghc-stage1' does not refer to an executable and\n2020-12-14 16:34:52.615564: [error] the program is not on the system path.```\nは普通に未解決です",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1607957326.109800",
        "text": "ext4にフォーマットしたスパースファイルを `~/.stack` にマウントするという若干の力技で解決しました",
        "user": "UMKGDJ2RZ",
        "type": "message"
    },
    {
        "ts": "1608103780.111900",
        "text": "<https://qiita.com/lotz/items/1cf6f620c9fd02f82070> に書いてあるような方法でherokuにデプロイすること自体は成功したのですが、毎回毎回依存ライブラリを全部コンパイルしてるせいでデプロイに20分ぐらいかかるのが気にくわないです。これを回避する方法ってありますか？",
        "user": "U015L5JEP8D",
        "type": "message"
    },
    {
        "ts": "1608106295.112100",
        "text": "cabalファイルをデプロイするたびに変更している感じでしょうか\n1. BuildKitのcache mountを利用する\n2. 重い依存ライブラリだけcabalをコピーする前にビルドしてキャッシュが効くようにする\nなどの回避策があると思います",
        "user": "U57CUMWQ6",
        "type": "message"
    },
    {
        "ts": "1608121295.112400",
        "text": "意図を外しているかもしれませんが、以下は私が行っている方法です。\nまず、依存ライブラリ群のみをビルド/インストールしたDockerイメージを作って、それをDockerHubにpushしておきます。\nそして、Heroku用のDockerfileの先頭Fromで、上記 Dockerイメージをベースに指定すれば、ライブラリ群がインストール済みの状態から、自分のコードのビルドを始められます。 どうでしょう？:slightly_smiling_face:",
        "user": "U55V441FS",
        "type": "message"
    },
    {
        "ts": "1609219658.116200",
        "text": "<@U01HQRVD875> has joined the channel",
        "user": "U01HQRVD875",
        "type": "message"
    }
]